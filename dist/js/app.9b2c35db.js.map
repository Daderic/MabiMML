{"version":3,"file":"js/app.9b2c35db.js","mappings":"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","sources":["webpack://music-sequencer/./src/App.vue","webpack://music-sequencer/./src/components/PatternEditor.vue","webpack://music-sequencer/./src/components/PianoRoll.vue","webpack://music-sequencer/./src/components/HelpMenu.vue","webpack://music-sequencer/./src/components/HelpMenu.vue?d290","webpack://music-sequencer/./src/components/Tracks.vue","webpack://music-sequencer/./src/components/Tracks.vue?6cb4","webpack://music-sequencer/./src/components/TempoMarker.vue","webpack://music-sequencer/./src/components/TempoMarker.vue?dda8","webpack://music-sequencer/./src/components/ExportMenu.vue","webpack://music-sequencer/./src/components/ExportMenu.vue?3d5c","webpack://music-sequencer/./src/components/PianoRoll.vue?b086","webpack://music-sequencer/./src/components/Sequencer.vue","webpack://music-sequencer/./src/components/PatternEditor.vue?415c","webpack://music-sequencer/./src/App.vue?7ccd","webpack://music-sequencer/./src/main.js","webpack://music-sequencer/webpack/bootstrap","webpack://music-sequencer/webpack/runtime/chunk loaded","webpack://music-sequencer/webpack/runtime/compat get default export","webpack://music-sequencer/webpack/runtime/define property getters","webpack://music-sequencer/webpack/runtime/global","webpack://music-sequencer/webpack/runtime/hasOwnProperty shorthand","webpack://music-sequencer/webpack/runtime/publicPath","webpack://music-sequencer/webpack/runtime/jsonp chunk loading","webpack://music-sequencer/webpack/startup"],"sourcesContent":["<template>\n  <!--img alt=\"Vue logo\" src=\"./assets/logo.png\"></!-->\n  <div id=\"app\">\n    <PatternEditor />\n  </div>\n</template>\n\n<script>\nimport PatternEditor from './components/PatternEditor.vue';\nimport PianoRoll from './components/PianoRoll.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    PatternEditor\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-color: #ddd;\n}\n</style>\n","<template>\r\n    <div class=\"pattern-editor\">\r\n        <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n            <PianoRoll />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport PianoRoll from './PianoRoll.vue';\r\nimport Sequencer from './Sequencer.vue';\r\n\r\nexport default {\r\n    name: 'PatternEditor',\r\n    components: {\r\n        PianoRoll\r\n    },\r\n    setup() {\r\n        const scrollContainer = ref(null);\r\n\r\n        return {\r\n            scrollContainer\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.pattern-editor {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: auto;\r\n    display: flex;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"piano-container\">\r\n        <button class=\"play-button\" @click=\"playSequence\">Play Sequence</button>\r\n        <label class=\"loop-wrapper\">\r\n            Loop:\r\n            <input type=\"checkbox\" v-model=\"loopSong\" />\r\n        </label>\r\n        <label class=\"scroll-wrapper\">\r\n            Auto-scroll:\r\n            <input type=\"checkbox\" v-model=\"autoScrollSong\" />\r\n        </label>\r\n        <ExportMenu :tracks=\"tracks\" :generateTokens=\"genTokensOutright\" :renderTokens=\"renderTokens\"\r\n            :copyToClipboard=\"copyToClipboard\" />\r\n        <HelpMenu />\r\n        <div v-if=\"showSuccessNotification\" class=\"copyNotification\">\r\n            {{ successNotificationText }}\r\n        </div>\r\n        <div v-if=\"showFailedNotification\" class=\"copyNotification\" style=\"background-color: #d44;\">\r\n            {{ failedNotificationText }}\r\n        </div>\r\n\r\n        <Tracks @track-selected=\"handleTrackSelected\" @add-track=\"handleAddTrack\" @remove-track=\"handleRemoveTrack\"\r\n            @mute-track=\"handleMuteTrack\" @color-change=\"updateColor\" />\r\n        <div class=\"controls\">\r\n            <div class=\"instrument-selector\">\r\n                <label for=\"instrument-select\">Select Instrument: </label>\r\n                <select id=\"instrument-select\" v-model=\"selectedInstrument\" @change=\"changeInstrument(false)\">\r\n                    <option v-for=\"(instrument, index) in instruments\" :key=\"index\" :value=\"instrument\">\r\n                        {{ instrument.name }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"tempo-selector\">\r\n                <label for=\"tempo-select\">Tempo: </label>\r\n                <input type=\"number\" id=\"tempo-select\" v-model.number=\"tempo\" min=\"40\" max=\"240\">\r\n            </div>\r\n            <button class=\"track-splitter\" @click=\"trackify\">Split Track</button>\r\n            <!--<button class=\"MML-converter\" @click=\"genTokensOutright\" style=\"margin-left: 10px;\">Gen MML</button>-->\r\n            <button @click=\"parseMMLFromClipboard\" style=\"margin-left: 10px;\">Import MML From Clipboard</button>\r\n            <button @click=\"importMidi\" style=\"margin-left: 10px;\">Import MIDI</button>\r\n            <input type=\"file\" id=\"hiddenFileInput\" style=\"display: none\" accept=\".mid,.midi\" />\r\n            <div class=\"grid-division-selector\">\r\n                <label for=\"grid-select\" style=\"padding-left: 10px\">Grid Spacing: </label>\r\n                <select id=\"grid-select\" v-model=\"gridWidth\">\r\n                    <option\r\n                        v-for=\"(value) in [{ displayName: '16ths', width: 256 / 16 }, { displayName: '12ths', width: 256 / 12 }]\"\r\n                        :key=\"value.displayName\" :value=\"value.width\">\r\n                        {{ value.displayName }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <label style=\"padding: 10px;\"> {{ 'Current Note Volume: ' + currentNoteVolume }} </label>\r\n        </div>\r\n        <div class=\"piano-roll\" ref=\"pianoRoll\">\r\n            <div class=\"piano-keys\">\r\n                <!-- Generate piano keys for multiple octaves -->\r\n                <div v-for=\"octave in octaves\" :key=\"octave\" class=\"octave\">\r\n                    <div class=\"keys-wrapper\">\r\n                        <!-- Keys should be in reverse order to have higher notes at the top -->\r\n                        <div v-for=\"(note, index) in notes.slice().reverse()\" :key=\"note.name\"\r\n                            :class=\"['piano-key', note.isBlack ? 'black-key' : 'white-key']\"\r\n                            @mousedown=\"startNote(0, note, octave)\" @mouseover=\"mouseOverNote(0, note, octave)\"\r\n                            @mouseup=\"endNote(0, note, octave)\" @mouseleave=\"mouseLeaveNote(0, note, octave)\" :style=\"{\r\n                                zIndex: note.isBlack ? 1 : 0,\r\n                                background: note.index + 12 * octave < instrKeyMin || note.index + 12 * octave > instrKeyMax ? '#d44' : (note.isBlack ? '#000' : '#fff')\r\n                            }\">\r\n                            {{ note.name + octave }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"ruler\" ref=\"ruler\" @mousedown=\"handleRulerClick\" :style=\"{\r\n                width: 'calc( 10% + ' + gridSpan * zoomScalar + 'px )',\r\n                background: `repeating-linear-gradient(\r\n                        90deg,\r\n                        #bbb,\r\n                        #bbb 2px,\r\n                        #eee 2px,\r\n                        #eee ${256 * zoomScalar}px\r\n                    )`,\r\n                float: 'bottom'\r\n            }\">\r\n                <div v-for=\"index in Math.ceil((gridSpan / 256))\" :key=\"index\" class=\"ruler-tick-label\"\r\n                    :style=\"{ left: `calc(${(index - 1) * 256 * zoomScalar}px)` }\">\r\n                    {{ index }}\r\n                </div>\r\n                <div class=\"marker-replay-triangle\" :style=\"{ left: markerReplayPosition * zoomScalar + 'px' }\"></div>\r\n                <div class=\"marker-wrapper\" :style=\"{ left: markerPosition * zoomScalar + 'px' }\">\r\n                    <div class=\"marker-triangle\"></div>\r\n                    <div class=\"marker-line\"></div>\r\n                </div>\r\n\r\n                <TempoMarker v-for=\"(tempoMarker, index) in tempoMarkers\" :key=\"tempoMarker.left\"\r\n                    :left=\"(tempoMarker.left) * zoomScalar + 1\" :tempo=\"tempoMarker.tempo\" :index=\"index\"\r\n                    :color=\"tempoMarker.color\" :visible=\"tempoMarker.muted ? 'hidden' : 'visible'\"\r\n                    @click=\"clickTempoMarker\" @click.stop />\r\n\r\n            </div>\r\n            <div class=\"grid-wrapper\">\r\n                <div class=\"grid\" ref=\"grid\" :style=\"{ width: gridSpan * zoomScalar + 'px', height: 2622 + 'px' }\">\r\n                    <div :style=\"{ width: scrollX + 'px' }\" />\r\n                    <canvas class=\"gridCanvas\" ref=\"gridCanvas\" :width=\"windowWidth * 0.9 - 14\" :height=\"2592\"\r\n                        @mousemove=\"tryRemoveNote\" @mousedown=\"handleGridClick\" @contextmenu.prevent=\"startNoteRemove\"\r\n                        @wheel=\"handleGridScroll\" />\r\n                    <div v-if=\"isSelecting\" class=\"selection-rect\" :style=\"rectangleStyle\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watchEffect, computed, onBeforeUnmount, watch, nextTick, mergeProps, useCssModule } from 'vue';\r\nimport { Synthetizer, MIDIBuilder, writeMIDIFile, Sequencer, consoleColors, SpessaSynthLogging, MIDI } from \"spessasynth_lib\";\r\nimport Heap from 'heap-js';\r\nimport HelpMenu from '@/components/HelpMenu.vue'\r\nimport Tracks from '@/components/Tracks.vue'\r\nimport { selectedTrack, tracks, selectedTrackIndex, trackHexColor, EventBus } from '@/components/Tracks.vue'\r\nimport { _ } from 'core-js';\r\nimport TempoMarker from './TempoMarker.vue';\r\nimport ExportMenu from './ExportMenu.vue';\r\n\r\nexport default {\r\n    name: 'PianoRoll',\r\n    components: {\r\n        HelpMenu, Tracks, TempoMarker, ExportMenu\r\n    },\r\n    setup() {\r\n        const root = process.env.NODE_ENV === 'production' ? '../MabiMML/' : '../';\r\n        const pianoRoll = ref(null);\r\n        const grid = ref(null);\r\n        const synth = ref(null);\r\n        const context = ref(null);\r\n        const isMouseDown = ref(false);\r\n        const selectedInstrument = ref({ name: 'Lute', program: 0, min: 16, max: 88 });\r\n        const midiBuilder = ref(null);\r\n        const tempo = ref(120);\r\n        const loopSong = ref(false);\r\n        const autoScrollSong = ref(false);\r\n        const gridCanvas = ref(null);\r\n        const windowWidth = ref(window.innerWidth);\r\n\r\n        const instruments = ref([\r\n            { name: 'Lute', program: 0, min: 16, max: 88 },\r\n            { name: 'Ukulele', program: 1, min: 16, max: 88 },\r\n            { name: 'Mandolin', program: 2, min: 16, max: 88 },\r\n            { name: 'Whistle', program: 3, min: 12, max: 88 },\r\n            { name: 'Roncadora', program: 4, min: 12, max: 88 },\r\n            { name: 'Flute', program: 5, min: 15, max: 88 },\r\n            { name: 'Chalumeau', program: 6, min: 16, max: 88 },\r\n            { name: 'Tuba', program: 18, min: 12, max: 95 },\r\n            { name: 'Lyre', program: 19, min: 9, max: 80 },\r\n            { name: 'Electric Guitar', program: 20, min: 4, max: 99 },\r\n            { name: 'Piano', program: 21, min: 0, max: 84 },\r\n            { name: 'Violin', program: 22, min: 16, max: 59 },\r\n            { name: 'Cello', program: 23, min: 0, max: 46 },\r\n            { name: 'Harp', program: 24, min: 9, max: 83 },\r\n            { name: 'Tuned Violin', program: 25, min: 16, max: 59 },\r\n            { name: 'Tuned Cello', program: 26, min: 0, max: 46 },\r\n            { name: 'Drum Kit', program: 27, min: 29, max: 53 },\r\n            { name: 'Festival Lute', program: 50, min: 16, max: 88 },\r\n            { name: 'Festival Ukulele', program: 51, min: 16, max: 88 },\r\n            { name: 'Festival Mandolin', program: 52, min: 16, max: 88 },\r\n            { name: 'Fest/Tuned Whistle', program: 53, min: 12, max: 83 },\r\n            { name: 'Fest/Tuned Flute', program: 54, min: 15, max: 83 },\r\n            { name: 'Bass Drum', program: 66, min: 12, max: 84 },\r\n            { name: 'Snare Drum', program: 67, min: 12, max: 84 },\r\n            { name: 'Cymbals', program: 68, min: 12, max: 84 },\r\n            { name: 'Hand Chimes', program: 77, min: 9, max: 80 },\r\n            { name: 'Female Chorus', program: 110, min: 19, max: 48 },\r\n            { name: 'Male Chorus', program: 100, min: 14, max: 46 },\r\n            { name: 'Male Voice', program: 120, min: 17, max: 49 },\r\n            { name: 'Female Voice', program: 121, min: 12, max: 45 },\r\n        ]);\r\n\r\n\r\n        let currentNoteLength = ref((960*4));\r\n        let currentNoteVolume = ref(8);\r\n        const gridWidth = ref(256 / 16); // This makes the base size an x-th note\r\n        const gridHeight = 24;\r\n        const notesInGrid = ref([]);\r\n        const draggingNotes = ref([]);\r\n        const resizingNotes = ref([]);\r\n        const volumeChangingNotes = ref([]);\r\n        const startX = ref(0);\r\n        const startY = ref(0);\r\n        const startLeft = ref(0);\r\n        const startTop = ref(0);\r\n        const startWidth = ref(0);\r\n        const gridSpan = ref(window.innerWidth);\r\n        const gridWrapper = ref(null);\r\n\r\n        const scrollX = ref(0);\r\n\r\n        const selectedNotes = ref([]);\r\n        const isSelecting = ref(false);\r\n        const currentX = ref(0);\r\n        const currentY = ref(0);\r\n\r\n        const ruler = ref(null);\r\n        const markerPosition = ref(0);\r\n        const markerReplayPosition = ref(0);\r\n        const tempoMarkers = ref([]);\r\n        const seq = ref(null);\r\n        const isPlaying = ref(false);\r\n\r\n        const zoomScalar = ref(1);\r\n\r\n        const rectangleStyle = computed(() => ({\r\n            left: `${Math.min(startX.value, currentX.value)}px`,\r\n            top: `${Math.min(startY.value, currentY.value) + 30}px`,\r\n            width: `${Math.abs(currentX.value - startX.value)}px`,\r\n            height: `${Math.abs(currentY.value - startY.value)}px`,\r\n            backgroundColor: 'rgba(0, 100, 255, 0.3)', // Transparent blue\r\n            border: '1px solid rgba(0, 100, 255, 0.5)' // Optional border\r\n        }));\r\n\r\n        const backgroundStyle = computed(() => ({\r\n            background: `repeating-linear-gradient( /*This is the horizontal lines*/\r\n                0deg,\r\n                #bbb,\r\n                #bbb 2px,\r\n                transparent 2px,\r\n                transparent 24px\r\n            ),\r\n            repeating-linear-gradient( /*This is the Bar line*/\r\n                90deg,\r\n                #777,\r\n                #777 2px,\r\n                transparent 2px,\r\n                transparent ${256 * zoomScalar.value}px\r\n            ),\r\n            repeating-linear-gradient( /*This is the vertical lines*/\r\n                90deg,\r\n                #c0c0c0,\r\n                #c0c0c0 2px,\r\n                transparent 2px,\r\n                transparent ${gridWidth.value * zoomScalar.value}px\r\n            ),\r\n            repeating-linear-gradient(/*This is the background colors*/\r\n                90deg,\r\n                #e0e0e0,\r\n                #e0e0e0 ${64 * zoomScalar.value}px,\r\n                #ccc ${64 * zoomScalar.value}px,\r\n                #ccc ${128 * zoomScalar.value}px\r\n            )`\r\n        }));\r\n\r\n        let ctx = null;\r\n\r\n        function drawCanvasGrid() {\r\n            if (!ctx) return;\r\n\r\n            const screenLeft = scrollX.value;\r\n            const screenRight = screenLeft + window.innerWidth;\r\n            const zoom = zoomScalar.value;\r\n            const grid = gridWidth.value;\r\n            const width = gridSpan.value * zoom;\r\n            const height = 12 * 9 * gridHeight; // numKeys * keyHeight\r\n            const gridwidth = 256 / grid;\r\n\r\n            ctx.clearRect(0, 0, width, height);\r\n\r\n            // --- Draw Background Quarter Notes ---\r\n            const bgSpacing = 64 * zoom;\r\n            ctx.fillStyle = '#e0e0e0';\r\n            for (let i = 0; i <= width; i += 2 * bgSpacing) {\r\n                const x = i - screenLeft;\r\n                ctx.fillRect(x, 0, bgSpacing, height);\r\n            }\r\n            ctx.fillStyle = '#ccc';\r\n            for (let i = bgSpacing; i <= width; i += 2 * bgSpacing) {\r\n                const x = i - screenLeft;\r\n                ctx.fillRect(x, 0, bgSpacing, height);\r\n            }\r\n\r\n            // --- Draw Horizontal Grid Lines ---\r\n            ctx.strokeStyle = '#bbb';\r\n            ctx.lineWidth = 2;\r\n            const horizontalSpacing = 24;\r\n            const hCount = Math.ceil(height / horizontalSpacing);\r\n            ctx.beginPath();\r\n            for (let i = 0; i <= hCount; i++) {\r\n                const y = i * horizontalSpacing;\r\n                ctx.moveTo(0, y);\r\n                ctx.lineTo(screenRight, y);\r\n            }\r\n            ctx.stroke();\r\n\r\n            if (zoom > 1 / 8) {\r\n\r\n                // --- Vertical Subdivisions ---\r\n                ctx.strokeStyle = '#c0c0c0';\r\n                ctx.lineWidth = 2;\r\n                let verticalSpacing = 0;\r\n                if (zoom > 1 / 8 && zoom <= 1 / 2) {\r\n                    verticalSpacing = gridwidth == 12 ? grid * 4 * zoom : grid * 8 * zoom;\r\n                } else if (zoom > 1 / 2 && zoom <= 7 / 8) {\r\n                    verticalSpacing = grid * 4 * zoom;\r\n                } else if (zoom > 7 / 8 && zoom < 2.5) {\r\n                    verticalSpacing = grid * 2 * zoom;\r\n                } else if (zoom >= 2.5) {\r\n                    verticalSpacing = grid * zoom;\r\n                }\r\n                const vStart = Math.max(0, Math.floor(screenLeft / verticalSpacing) - 1);\r\n                const vEnd = Math.ceil(screenRight / verticalSpacing) + 1;\r\n                ctx.beginPath();\r\n                for (let i = vStart; i <= vEnd; i++) {\r\n                    const x = i * verticalSpacing - screenLeft;\r\n                    ctx.moveTo(x, 0);\r\n                    ctx.lineTo(x, height);\r\n                }\r\n                ctx.stroke();\r\n            }\r\n\r\n            // --- Bar Lines ---\r\n            ctx.strokeStyle = '#777';\r\n            ctx.lineWidth = 2;\r\n            const barSpacing = 256 * zoom;\r\n            const bStart = Math.max(0, Math.floor(screenLeft / barSpacing) - 1);\r\n            const bEnd = Math.ceil(screenRight / barSpacing) + 1;\r\n            ctx.beginPath();\r\n            for (let i = bStart; i <= bEnd; i++) {\r\n                const x = i * barSpacing - screenLeft;\r\n                ctx.moveTo(x, 0);\r\n                ctx.lineTo(x, height);\r\n            }\r\n            ctx.stroke();\r\n\r\n            // --- Notes ---\r\n            const notes = notesInGrid.value;\r\n            if (!notes || notes.length === 0) return;\r\n\r\n            const visibleNotes = [];\r\n            const leftLimit = screenLeft / zoom;\r\n            const rightLimit = screenRight / zoom;\r\n\r\n            for (const note of notes) {\r\n                const noteLeft = note.left;\r\n                const noteRight = noteLeft + note.width;\r\n                if (noteRight < leftLimit || noteLeft > rightLimit) continue;\r\n                if (note.muted) continue;\r\n                visibleNotes.push(note);\r\n            }\r\n\r\n            for (const note of visibleNotes) {\r\n                const x = note.left * zoom - screenLeft;\r\n                const y = note.top;\r\n                const noteWidth = (note.width + 1) * zoom - 1;\r\n                const h = gridHeight;\r\n\r\n                // Note body\r\n                ctx.fillStyle = hexToRgba(note.color, (note.volume + 1) / 15);\r\n                ctx.fillRect(x, y, noteWidth, h);\r\n\r\n                // Border\r\n                ctx.strokeStyle = note.highlighted ? 'white' : note.color;\r\n                ctx.lineWidth = note.highlighted ? 2 : 1;\r\n                ctx.strokeRect(x, y, noteWidth, h);\r\n\r\n                // Volume handle (semi-circle)\r\n                const semiCircleRadius = Math.max(0, Math.min(6, noteWidth / 4));\r\n                const centerX = x + noteWidth / 2;\r\n                const centerY = y + h + semiCircleRadius * 0.35 - 1;\r\n                ctx.beginPath();\r\n                ctx.arc(centerX, centerY, semiCircleRadius, Math.PI, 0, false);\r\n                ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\r\n                ctx.fill();\r\n\r\n                // Resize handle\r\n                const barWidth = Math.min(10, noteWidth * 0.4);\r\n                ctx.fillRect(x + noteWidth - barWidth, y, barWidth, h);\r\n\r\n                // Text\r\n                ctx.font = '11px sans-serif';\r\n                ctx.fillStyle = '#444';\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle';\r\n\r\n                const fullText = `${note.name} (${note.volume})`;\r\n                const truncatedText = truncateTextToWidth(ctx, fullText, noteWidth);\r\n\r\n                if (truncatedText) {\r\n                    ctx.fillText(truncatedText, x + noteWidth / 2, y + h / 2);\r\n                }\r\n            }\r\n        }\r\n\r\n        function truncateTextToWidth(ctx, text, maxWidth) {\r\n            const ellipsis = '…';\r\n            if (ctx.measureText(text).width <= maxWidth) return text;\r\n\r\n            let truncated = text;\r\n            while (truncated.length > 0) {\r\n                truncated = truncated.slice(0, -1);\r\n                if (ctx.measureText(truncated + ellipsis).width <= maxWidth) {\r\n                    return truncated + ellipsis;\r\n                }\r\n            }\r\n            return '';\r\n        }\r\n\r\n\r\n\r\n        // Left-hand Piano notes, not grid notes\r\n        const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\r\n        const blackNotes = ['C#', 'D#', 'F#', 'G#', 'A#'];\r\n        const notes = ref(noteNames.map((name, index) => ({\r\n            name: name,\r\n            index: index,\r\n            isBlack: blackNotes.includes(name)\r\n        })));\r\n        const octaves = ref([0, 1, 2, 3, 4, 5, 6, 7, 8]);\r\n\r\n        const showSuccessNotification = ref(false);\r\n        const successNotificationText = ref('');\r\n        const showFailedNotification = ref(false);\r\n        const failedNotificationText = ref('');\r\n\r\n        const instrKeyMin = ref(16);\r\n        const instrKeyMax = ref(88);\r\n\r\n        let noteClipboard = [];\r\n\r\n        watchEffect(() => {\r\n            const maxRightPosition = Math.max(...notesInGrid.value.map(note => note.left + note.width), 0);\r\n            gridSpan.value = Math.max((maxRightPosition + window.innerWidth / zoomScalar.value), window.innerWidth / zoomScalar.value);\r\n            windowWidth.value = window.innerWidth;\r\n            if (document.querySelector('.grid-wrapper'))\r\n                scrollX.value = gridWrapper.value.scrollLeft;\r\n        });\r\n\r\n        watch(notesInGrid, () => {\r\n            drawCanvasGrid();\r\n        }, { deep: true });\r\n\r\n        watch(gridSpan, async () => {\r\n            await nextTick();\r\n            drawCanvasGrid();\r\n        }, { deep: true });\r\n\r\n        watch(gridWidth, () => {\r\n            drawCanvasGrid();\r\n        }, { deep: true });\r\n\r\n        const addTrack = (instr, color, name) => {\r\n            return EventBus.addTrack(null, instr, color, name);\r\n        };\r\n\r\n        const handleTrackSelected = (track) => {\r\n            selectedInstrument.value = track.instrument;\r\n            selectedTrackIndex.value = tracks.value.indexOf(track);\r\n            changeInstrument(true);\r\n        };\r\n\r\n        const handleAddTrack = async (newTrack, index) => {\r\n            // if (synth.value)\r\n            //     await synth.value.soundfontManager.addNewSoundFont(newTrack.instrument, `main${index}`, index);\r\n        };\r\n\r\n        const handleRemoveTrack = async (oldTrack, newTrack) => {\r\n            const idsToRemove = new Set(oldTrack.notes.map(n => n.id));\r\n\r\n            selectedNotes.value = selectedNotes.value.filter(n => !idsToRemove.has(n.id));\r\n            notesInGrid.value = notesInGrid.value.filter(n => !idsToRemove.has(n.id));\r\n\r\n            for (const track of tracks.value) {\r\n                track.notes = track.notes.filter(n => !idsToRemove.has(n.id));\r\n            }\r\n\r\n            tempoMarkers.value = tempoMarkers.value.filter(marker => marker.parentTrack.id !== oldTrack.id);\r\n\r\n            // if (selectedTrackIndex.value === newTrack.index)\r\n            //     selectedInstrument.value = newTrack.instrument;\r\n            // if (synth.value)\r\n            //     await synth.value.soundfontManager.deleteSoundFont(`main${index}`);\r\n        };\r\n\r\n        const handleMuteTrack = async (trackIndex) => {\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            const track = tracks.value[trackIndex];\r\n            for (const tempoMarker of tempoMarkers.value) {\r\n                if (tempoMarker.parentTrack === track) {\r\n                    tempoMarker.muted = track.isMuted;\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        const updateColor = (track, newColor) => {\r\n            for (const marker of tempoMarkers.value) {\r\n                if (marker.parentTrack === track) {\r\n                    marker.color = newColor;\r\n                }\r\n            }\r\n        };\r\n\r\n        const loadSoundFont = async () => {\r\n            try {\r\n                const response = await fetch(root + 'soundfonts/mabi_instruments_high_quality.sf3');\r\n                const soundFontArrayBuffer = await response.arrayBuffer();\r\n                return soundFontArrayBuffer;\r\n            } catch (error) {\r\n                console.error(\"Failed to load SoundFont:\", error);\r\n                return null;\r\n            }\r\n        };\r\n\r\n        const handleBeforeUnload = (event) => {\r\n            const message = 'Leave Site? Changes you made may not be saved.';\r\n            event.preventDefault();\r\n            event.returnValue = message;\r\n            return 'message';\r\n        }\r\n\r\n        onMounted(async () => {\r\n            try {\r\n                windowWidth.value = window.innerWidth;\r\n\r\n                const gridWrapperVar = document.querySelector('.grid-wrapper');\r\n                if (gridWrapperVar) {\r\n                    gridWrapper.value = gridWrapperVar;\r\n                    gridWrapperVar.addEventListener('scroll', updateRuler);\r\n                    updateRuler();\r\n                }\r\n\r\n                document.addEventListener('keydown', handleKeyPress);\r\n                window.addEventListener('beforeunload', handleBeforeUnload);\r\n                // Setting up audio context\r\n                context.value = new AudioContext();\r\n\r\n                await context.value.audioWorklet.addModule(root + \"worklet_processor.min.js\");\r\n                const soundFontArrayBuffer = await loadSoundFont();\r\n                if (!soundFontArrayBuffer) return;\r\n                synth.value = new Synthetizer(context.value.destination, soundFontArrayBuffer, true, undefined, { chorusEnabled: false, reverbEnabled: false });\r\n                synth.value.setMainVolume(2);\r\n                synth.value.setLogLevel(false, false, false, false);\r\n                await synth.value.isReady;\r\n\r\n            } catch (error) {\r\n                console.error(\"Error initializing sequencer or synthesizer:\", error);\r\n            }\r\n            await nextTick();\r\n            if (gridCanvas.value) {\r\n                ctx = gridCanvas.value.getContext('2d', { alpha: false });\r\n                drawCanvasGrid();\r\n            }\r\n        });\r\n\r\n\r\n\r\n        onBeforeUnmount(() => {\r\n            window.removeEventListener('beforeunload', handleBeforeUnload);\r\n        });\r\n\r\n        const handleRulerClick = (event) => {\r\n            if (event.button === 0) {\r\n                if (!event.shiftKey) {\r\n                    startMarkerDrag(event);\r\n                } else {\r\n                    placeTempoMarker(event);\r\n                }\r\n            }\r\n        };\r\n\r\n        const placeTempoMarker = (event) => {\r\n            const granularity = event.altKey ? gridWidth.value / 4 : gridWidth.value;\r\n            const left = Math.round((event.clientX - ruler.value.getBoundingClientRect().left) / granularity / zoomScalar.value) * granularity;\r\n            const enteredTempo = prompt(\"Enter tempo (BPM):\", tempo.value);\r\n            if (enteredTempo !== null && !isNaN(enteredTempo) && enteredTempo !== '') {\r\n                tempoMarkers.value.push({\r\n                    left: left,\r\n                    tempo: Number(enteredTempo),\r\n                    color: selectedTrack.value.color,\r\n                    parentTrack: selectedTrack.value,\r\n                    muted: false\r\n                });\r\n            }\r\n        };\r\n\r\n        const clickTempoMarker = (event, index) => {\r\n            event.preventDefault();\r\n            if (event.button === 0) {\r\n                const enteredTempo = prompt(\"Enter tempo (BPM):\", tempoMarkers.value[index].tempo);\r\n                if (enteredTempo === null)\r\n                    return;\r\n                if (!isNaN(enteredTempo) && enteredTempo !== '') {\r\n                    tempoMarkers.value[index].tempo = Number(enteredTempo);\r\n                } else {\r\n                    tempoMarkers.value.splice(index, 1);\r\n                }\r\n            } else if (event.button === 2) {\r\n                tempoMarkers.value[index].parentTrack = selectedTrack.value;\r\n                tempoMarkers.value[index].color = selectedTrack.value.color;\r\n            }\r\n        };\r\n\r\n        const startMarkerDrag = (event) => {\r\n            if (isPlaying) {\r\n                stopPlaying();\r\n            }\r\n            updateMarkerPos(event.clientX, event.altKey, true);\r\n            document.addEventListener('mousemove', onMarkerDrag);\r\n            document.addEventListener('mouseup', onMarkerDragEnd);\r\n        };\r\n\r\n        const onMarkerDrag = (event) => {\r\n            updateMarkerPos(event.clientX, event.altKey, true);\r\n        };\r\n\r\n        const onMarkerDragEnd = async () => {\r\n            document.removeEventListener('mousemove', onMarkerDrag);\r\n            document.removeEventListener('mouseup', onMarkerDragEnd);\r\n        };\r\n\r\n        let markerInterval;\r\n        let markerStartPos;\r\n        let startTempo;\r\n        let tempoIdx = 0;\r\n\r\n        async function startMarkerAnim() {\r\n            isPlaying.value = true;\r\n            markerStartPos = markerPosition.value;\r\n            startTempo = tempo.value;\r\n            tempoMarkers.value.sort((a, b) => { return a.left - b.left });\r\n            doMarkerAnim();\r\n        }\r\n\r\n        function doMarkerAnim() {\r\n            let timeChange = 0;\r\n            tempoIdx = 0;\r\n            startTempo = tempo.value;\r\n            let marker = tempoMarkers.value[tempoIdx];\r\n            while (marker && marker.left < markerPosition.value) { // Skip ahead to proper first marker\r\n                if (markerPosition.value > 0) {\r\n                    startTempo = marker.tempo;\r\n                }\r\n                tempoIdx++;\r\n                marker = tempoMarkers.value[tempoIdx];\r\n            }\r\n            function tick() {\r\n                if (markerPosition.value < 0) {\r\n                    startTempo = tempo.value;\r\n                    tempoIdx = 0;\r\n                    timeChange = 0;\r\n                    markerStartPos = 0;\r\n                    markerPosition.value = 0;\r\n                }\r\n                marker = tempoMarkers.value[tempoIdx];\r\n                while (marker && marker.muted) { // Skip ahead to the next unmuted marker\r\n                    tempoIdx++;\r\n                    marker = tempoMarkers.value[tempoIdx];\r\n                }\r\n                if (marker && marker !== null) {\r\n                    if (markerPosition.value >= marker.left) {\r\n                        tempoIdx++;\r\n                        markerStartPos = markerPosition.value;\r\n                        timeChange = seq.value.currentTime;\r\n                        startTempo = marker.tempo;\r\n                    }\r\n                }\r\n\r\n                markerPosition.value = ((seq.value.currentTime - timeChange) * 4 * 16 * startTempo / 60) + markerStartPos;\r\n                if (autoScrollSong.value) {\r\n                    gridWrapper.value.scrollLeft = markerPosition.value * zoomScalar.value - window.innerWidth * 0.66;\r\n                }\r\n                if (seq.value && !loopSong.value)\r\n                    seq.value.loop = loopSong.value;\r\n            }\r\n            clearInterval(markerInterval);\r\n            tick();\r\n            markerInterval = setInterval(tick, 20);\r\n        }\r\n\r\n        const noteLengths = [];\r\n        const widthCache = {};\r\n\r\n        function getUniquePermutations(nums) {\r\n            nums.sort((a, b) => a - b); // Sort to enable duplicate skipping\r\n            const used = new Array(nums.length).fill(false);\r\n            const result = [];\r\n\r\n            function backtrack(path) {\r\n                if (path.length === nums.length) {\r\n                    result.push([...path]);\r\n                    return;\r\n                }\r\n\r\n                for (let i = 0; i < nums.length; i++) {\r\n                    if (used[i]) continue;\r\n\r\n                    // Skip duplicate numbers at the same tree depth\r\n                    if (i > 0 && nums[i] === nums[i - 1] && !used[i - 1]) {\r\n                        continue;\r\n                    }\r\n\r\n                    used[i] = true;\r\n                    path.push(nums[i]);\r\n                    backtrack(path);\r\n                    path.pop();\r\n                    used[i] = false;\r\n                }\r\n            }\r\n\r\n            backtrack([]);\r\n            return result;\r\n        }\r\n\r\n        function getOptimalNoteLengths(width) {\r\n            if (width in widthCache)\r\n                return widthCache[width];\r\n            let outString = '';\r\n            let mmlWidth = width;\r\n\r\n            if (noteLengths.length === 0) {\r\n                for (let i = 1; i <= 64; ++i) {\r\n                    let val1 = Math.round(256 * 32 / (i/960*64) );\r\n                    let val2 = Math.round(256 * 32 / (i/960*64) * 1.5);\r\n\r\n                    noteLengths.push({\r\n                        length: val2,\r\n                        name: i + '.',\r\n                        charLength: ('L' + i + '.').length\r\n                    });\r\n                    noteLengths.push({\r\n                        length: val1,\r\n                        name: i + '',\r\n                        charLength: ('L' + i).length\r\n                    });\r\n                }\r\n            }\r\n\r\n            const best = new Map();\r\n            for (const note of noteLengths) {\r\n                if (!best.has(note.length) || note.charLength < best.get(note.length).charLength) {\r\n                    best.set(note.length, note);\r\n                }\r\n            }\r\n\r\n            let result = getMinCharLengthWidth([...best.values()], mmlWidth);\r\n            outString = result.noteCombination.map(note => note.name).join('&');\r\n            // Rather than returning a single string combining the notes, we should return a list of such strings (or a list of a list of lengths like lengths: [[1., 2], [2, 1.]])\r\n            // let outputs = getUniquePermutations(result.noteCombination.map(note => note.name));\r\n            widthCache[width] = result;\r\n            return result; // returns a list of lists of note lenths\r\n        }\r\n\r\n        function getMinCharLengthWidth(notes, targetWidth) {\r\n            let amount = Math.round(targetWidth * 32);\r\n\r\n            // === Compress notes to keep only the shortest representation for each length ===\r\n            const best = new Map();\r\n            for (const note of notes) {\r\n                if (!best.has(note.length) || note.charLength < best.get(note.length).charLength) {\r\n                    best.set(note.length, note);\r\n                }\r\n            }\r\n            const compressedNotes = [...best.values()];\r\n\r\n            // Flatten notes into arrays for fast lookup\r\n            const n = compressedNotes.length;\r\n            const lengths = new Int32Array(n);\r\n            const charLens = new Int32Array(n);\r\n            for (let j = 0; j < n; j++) {\r\n                lengths[j] = compressedNotes[j].length;\r\n                charLens[j] = compressedNotes[j].charLength;\r\n            }\r\n\r\n            // === DP arrays ===\r\n            const INF = 0x7fffffff;\r\n            const dp = new Uint32Array(amount + 1);\r\n            dp.fill(INF);\r\n            dp[0] = 0;\r\n\r\n            const prev = new Int32Array(amount + 1);\r\n            prev.fill(-1);\r\n\r\n            const last = new Int32Array(amount + 1);\r\n            last.fill(-1);\r\n\r\n            // === Core DP ===\r\n            for (let j = 0; j < n; j++) {\r\n                const noteValue = lengths[j];\r\n                const noteChars = charLens[j];\r\n                for (let i = noteValue; i <= amount; i++) {\r\n                    const candidate = dp[i - noteValue] + noteChars;\r\n                    if (candidate < dp[i]) {\r\n                        dp[i] = candidate;\r\n                        prev[i] = i - noteValue;\r\n                        last[i] = j;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (dp[amount] === INF) {\r\n                return { minChars: null, noteCombination: [] };\r\n            }\r\n\r\n            // === Backtrack ===\r\n            const result = [];\r\n            let i = amount;\r\n            while (i > 0) {\r\n                const j = last[i];\r\n                result.push(compressedNotes[j]);\r\n                i = prev[i];\r\n            }\r\n\r\n            return { minChars: dp[amount], noteCombination: result };\r\n        }\r\n\r\n\r\n        const stopMarkerAnim = () => {\r\n            clearInterval(markerInterval);\r\n            isPlaying.value = false;\r\n        }\r\n\r\n        const updateMarkerPos = (clientX, altKey, fromClick) => {\r\n            if (ruler.value) {\r\n                const rulerRect = ruler.value.getBoundingClientRect();\r\n                let newPos = Math.round((clientX - rulerRect.left) / zoomScalar.value / (gridWidth.value / 4)) * (gridWidth.value / 4);\r\n                let gridSnap = gridWidth.value * (zoomScalar.value <= 0.5 ? 64 / gridWidth.value : 1);\r\n\r\n                if (!altKey) {\r\n                    newPos = Math.round(newPos / (gridSnap)) * gridSnap;\r\n                }\r\n\r\n                newPos = Math.max(0, Math.min(gridSpan.value, newPos));\r\n\r\n                markerPosition.value = newPos;\r\n                if (fromClick) {\r\n                    markerReplayPosition.value = newPos;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        function handleKeyPress(event) {\r\n            if (selectedTrack.value.isEditingName)\r\n                return;\r\n            if (event.key === 'Backspace' || event.key === 'Delete') {\r\n                for (const note of selectedNotes.value) {\r\n                    removeNote(note, true);\r\n                }\r\n\r\n                if (isPlaying.value)\r\n                    playSequence();\r\n            }\r\n            if (event.code === 'Space') {\r\n                event.preventDefault();\r\n                if (isPlaying.value) {\r\n                    stopPlaying();\r\n                    if (!event.ctrlKey) {\r\n                        markerPosition.value = markerReplayPosition.value;\r\n                    }\r\n                } else {\r\n                    playSequence();\r\n                }\r\n            } else if (event.key === 'a' && event.ctrlKey && !selectedTrack.value.isEditingName) {\r\n                event.preventDefault();\r\n                for (const note of notesInGrid.value) {\r\n                    selectNote(note);\r\n                }\r\n\r\n                showSuccessMessage(`Selected ${selectedNotes.value.length} notes!`, 1000);\r\n            } else if (event.key === 'ArrowUp') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 12 : 1;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (note.top - gridHeight * movementValue < -0) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.top -= gridHeight * movementValue\r\n                        const number = (1284 - (note.top / 2)) / 144;\r\n                        const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                        note.name = noteName;\r\n                        note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowDown') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 12 : 1;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (note.top + gridHeight * movementValue >= octaves.value.length * gridHeight * 12) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.top += gridHeight * movementValue\r\n                        const number = (1284 - (note.top / 2)) / 144;\r\n                        const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                        note.name = noteName;\r\n                        note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowLeft') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 1 : 4;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (Math.round((note.left - gridWidth.value / movementValue) * 1000) / 1000 < 0) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.left = Math.round((note.left - gridWidth.value / movementValue) * 1000) / 1000;\r\n                        note.start = Math.round(note.left / (256) * (960*4));\r\n                        note.end = Math.round(note.start + note.length);\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowRight') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 1 : 4;\r\n                    for (const note of selectedNotes.value) {\r\n                        note.left = Math.round((note.left + gridWidth.value / movementValue) * 1000) / 1000;\r\n                        note.start = Math.round(note.left / (256) * (960*4));\r\n                        note.end = Math.round(note.start + note.length);\r\n                    }\r\n                }\r\n            } else if (event.key === 'c' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Copy selected notes to some \"clipboard\".\r\n                noteClipboard = [];\r\n                for (const note of selectedNotes.value) {\r\n                    noteClipboard.push(note);\r\n                }\r\n\r\n                showSuccessMessage(`Copied ${noteClipboard.length} note${noteClipboard.length > 1 ? 's' : ''} to the clipboard!`, 1000);\r\n            } else if (event.key === 'x' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Copy and delete selected notes to some \"clipboard\".\r\n                noteClipboard = [];\r\n                for (const note of selectedNotes.value) {\r\n                    noteClipboard.push(note);\r\n                    removeNote(note, true);\r\n                }\r\n                showSuccessMessage(`Cut ${noteClipboard.length} note${noteClipboard.length > 1 ? 's' : ''} and put them in the clipboard!`, 1000);\r\n            } else if (event.key === 'v' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Paste selected notes from \"clipboard\" into the selected track.\r\n                clearSelection();\r\n                const baseId = Date.now(); // Avoid calling Date.now() in every iteration\r\n                const track = selectedTrack.value;\r\n                const trackColor = track.color;\r\n                const scroll = scrollX.value;\r\n                const zoom = zoomScalar.value;\r\n                const grid = gridWidth.value;\r\n\r\n                const idOffset = notesInGrid.value.length;\r\n\r\n                const newNotes = [];\r\n\r\n                for (let i = 0; i < noteClipboard.length; i++) {\r\n                    const note = noteClipboard[i];\r\n                    const newLeft = Math.round(Math.round((note.left + scroll / zoom) * grid / 4) * 4 / grid);\r\n                    const newNote = {\r\n                        id: baseId + idOffset + i,\r\n                        name: note.name,\r\n                        left: newLeft,\r\n                        top: note.top,\r\n                        pitch: note.pitch,\r\n                        width: note.width,\r\n                        length: note.length,\r\n                        highlighted: true,\r\n                        color: trackColor,\r\n                        start: Math.round(newLeft / (256) * (960*4)),\r\n                        end: Math.round(Math.round(newLeft / (256) * (960*4)) + note.length),\r\n                        volume: note.volume,\r\n                        muted: false,\r\n                        track: track\r\n                    };\r\n                    newNotes.push(newNote);\r\n                }\r\n\r\n                // Push all at once\r\n                selectedNotes.value.push(...newNotes);\r\n                notesInGrid.value.push(...newNotes);\r\n                track.notes.unshift(...newNotes.reverse()); // unshift in correct order\r\n\r\n                showSuccessMessage(`Pasted ${noteClipboard.length} notes from the clipboard!`, 1000);\r\n            } else if (event.key === 't' && selectedNotes.value.length > 0) {\r\n                const selectedSet = new Set(selectedNotes.value);\r\n\r\n                for (const track of tracks.value) {\r\n                    track.notes = track.notes.filter(note => !selectedSet.has(note));\r\n                }\r\n\r\n                selectedNotes.value.forEach(note => {\r\n                    note.track = selectedTrack.value;\r\n                    note.color = selectedTrack.value.color;\r\n                });\r\n\r\n                selectedTrack.value.notes.unshift(...[...selectedNotes.value].reverse());\r\n\r\n                showSuccessMessage(`Moved ${selectedNotes.value.length} notes into track \"${selectedTrack.value.name}\"!`, 1000);\r\n            }\r\n        }\r\n\r\n\r\n        function updateRuler() {\r\n            if (gridWrapper.value && ruler.value) {\r\n                scrollX.value = gridWrapper.value.scrollLeft;\r\n                ruler.value.style.left = -scrollX.value + 'px'; // Adjust ruler's left position\r\n            }\r\n            drawCanvasGrid();\r\n        }\r\n\r\n        function stopPlaying() {\r\n            if (seq.value)\r\n                seq.value.stop();\r\n            stopMarkerAnim();\r\n            synth.value.programChange(0, selectedInstrument.value.program);\r\n        }\r\n\r\n        const playSequence = async (fromClick = null) => {\r\n            try {\r\n                if (fromClick && isPlaying.value) {\r\n                    stopPlaying();\r\n                    markerPosition.value = markerReplayPosition.value;\r\n                    return;\r\n                }\r\n\r\n                const tempMidiBuilder = new MIDIBuilder(\"untitled\", 480, tempo.value);\r\n\r\n                //midiBuilder.value.addEvent(0, 0, 0xC0, [selectedInstrument.value.program]);\r\n\r\n                await context.value.resume();\r\n                if (!synth.value) return;\r\n\r\n                let notesAdded = 0;\r\n\r\n                let audibleTracks = [];\r\n\r\n                for (const track of tracks.value) {\r\n                    if (!track.isMuted) {\r\n                        audibleTracks.push(track);\r\n                        tempMidiBuilder.addNewTrack(track.name + tracks.value.indexOf(track));\r\n                    }\r\n                }\r\n\r\n                notesInGrid.value.forEach(note => {\r\n                    if (!note.muted && note.left + note.width >= markerPosition.value) {\r\n\r\n                        // Code to get the note's parent track\r\n                        let containingTrack = note.track;\r\n                        // for (const track of tracks.value) {\r\n                        //     if (track.notes.some(n => n.id === note.id)) {\r\n                        //         containingTrack = track;\r\n                        //     }\r\n                        // }\r\n                        const trackIndex = audibleTracks.indexOf(containingTrack);\r\n                        const channel = trackIndex;//trackIndex;\r\n                        const pitch = note.pitch;\r\n                        // Conversion from pixels to time.\r\n                        const noteStartTime = note.start / (960/4) * 120;\r\n                        const noteDuration = (note.length) / (960/4) * 120;\r\n                        const markerTime = markerPosition.value / 16 * 120;\r\n                        const startTime = Math.max(noteStartTime, markerTime) - markerTime;\r\n                        const duration = Math.min(noteDuration, noteStartTime + noteDuration - markerTime);\r\n                        const volume = Math.max(0, Math.min(127, (note.volume + 1) * 8 - 1));\r\n\r\n \r\n\r\n                        tempMidiBuilder.addEvent(startTime, trackIndex, 0xC0 | (channel & 0x0F), [containingTrack.instrument.program]);\r\n                        tempMidiBuilder.addNoteOn(startTime, trackIndex, channel, pitch, volume);\r\n                        tempMidiBuilder.addNoteOff(startTime + duration - 1, trackIndex, channel, pitch);\r\n                        notesAdded++;\r\n                    }\r\n                });\r\n\r\n                for (const tempoMarker of tempoMarkers.value) {\r\n                    if (tempoMarker.parentTrack.isMuted)\r\n                        continue;\r\n                    const tempoStartTime = tempoMarker.left / 16 * 120;\r\n                    const markerTime = markerPosition.value / 16 * 120;\r\n                    const tempoChangeTime = Math.max(tempoStartTime, markerTime) - markerTime;\r\n                    tempMidiBuilder.addSetTempo(tempoChangeTime, tempoMarker.tempo);\r\n                }\r\n\r\n                if (notesAdded === 0) {\r\n                    return;\r\n                }\r\n\r\n                tempMidiBuilder.flush();\r\n\r\n                midiBuilder.value = tempMidiBuilder;\r\n\r\n                const b = await (writeMIDIFile(midiBuilder.value));\r\n                seq.value = new Sequencer([{ binary: b }], synth.value);\r\n                seq.value.skipToFirstNoteOn = false;\r\n                seq.value.loop = loopSong.value && markerPosition.value === 0;\r\n                await synth.value.isReady;\r\n                seq.value.addOnSongEndedEvent(() => {\r\n                    stopMarkerAnim();\r\n                    markerPosition.value = markerReplayPosition.value;\r\n                    if (loopSong.value && !seq.value.loop) {\r\n                        markerPosition.value = 0;\r\n                        playSequence();\r\n                    }\r\n                }, 'test2');\r\n                await seq.value.play();\r\n                startMarkerAnim();\r\n            } catch (error) {\r\n                console.error(\"Error playing sequence: \", error);\r\n            }\r\n        };\r\n\r\n        const startNote = async (channel, note, octave) => {\r\n            try {\r\n                context.value.resume();\r\n                await synth.value.isReady;\r\n                synth.value.noteOn(channel, note.index + 12 * (octave + 1), Math.max(0, Math.min(127, (currentNoteVolume.value + 1) * 8 - 1)), false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        const endNote = async (channel, note, octave) => {\r\n            try {\r\n                await synth.value.isReady;\r\n                if (synth.value) {\r\n                    synth.value.noteOff(channel, note.index + 12 * (octave + 1));\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        const showSuccessMessage = (text, timeout = 2000) => {\r\n            successNotificationText.value = text;\r\n            showSuccessNotification.value = true; // Show notification\r\n\r\n            // Hide notification after 2 seconds\r\n            setTimeout(() => {\r\n                showSuccessNotification.value = false;\r\n            }, timeout);\r\n        };\r\n\r\n        const showFailureMessage = (text, timeout = 2000) => {\r\n            failedNotificationText.value = text;\r\n            showFailedNotification.value = true; // Show notification\r\n\r\n            // Hide notification after 2 seconds\r\n            setTimeout(() => {\r\n                showFailedNotification.value = false;\r\n            }, timeout);\r\n        };\r\n\r\n        const mouseOverNote = (channel, note, octave) => {\r\n            if (isMouseDown.value && draggingNotes.value.length === 0 && resizingNotes.value.length === 0) {\r\n                startNote(channel, note, octave);\r\n            }\r\n        };\r\n\r\n        const mouseLeaveNote = (channel, note, octave) => {\r\n            if (isMouseDown.value && draggingNotes.value.length === 0 && resizingNotes.value.length === 0) {\r\n                endNote(channel, note, octave);\r\n            }\r\n        };\r\n\r\n        const changeInstrument = async (fromTrack = false) => {\r\n            if (synth.value && selectedInstrument.value) {\r\n                selectedTrack.value.instrument = selectedInstrument.value;\r\n\r\n                instrKeyMin.value = selectedInstrument.value.min;\r\n                instrKeyMax.value = selectedInstrument.value.max;\r\n\r\n                synth.value.programChange(0, selectedInstrument.value.program);\r\n                if (isPlaying.value && !fromTrack)\r\n                    playSequence();\r\n\r\n                await synth.value.isReady;\r\n            }\r\n        };\r\n\r\n        const startPositions = new Map();\r\n\r\n        const startDrag = (note, event, placeNote = true) => {\r\n            event.preventDefault();\r\n            if (event.button === 0 && resizingNotes.value.length === 0 && volumeChangingNotes.value.length === 0) { // Ensure we're dragging with left button\r\n                if (note.highlighted) {\r\n                    draggingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    clearSelection();\r\n                    draggingNotes.value.push(note);\r\n                }\r\n\r\n                if (event.shiftKey && placeNote) {\r\n                    const baseId = Date.now();\r\n                    const initialLength = notesInGrid.value.length;\r\n                    const newNotes = [];\r\n\r\n                    for (let i = 0; i < draggingNotes.value.length; i++) {\r\n                        const note = draggingNotes.value[i];\r\n                        const newNote = {\r\n                            id: baseId + initialLength + i,\r\n                            name: note.name,\r\n                            left: note.left,\r\n                            top: note.top,\r\n                            pitch: note.pitch,\r\n                            width: note.width,\r\n                            length: note.length,\r\n                            highlighted: false,\r\n                            color: note.color,\r\n                            start: note.start,\r\n                            end: note.end,\r\n                            volume: note.volume,\r\n                            muted: false,\r\n                            track: note.track\r\n                        };\r\n                        newNotes.push(newNote);\r\n                    }\r\n\r\n                    // Bulk update reactive arrays outside the loop\r\n                    notesInGrid.value.push(...newNotes);\r\n                    newNotes.forEach(note => {\r\n                        note.track.notes.unshift(note);\r\n                    });\r\n\r\n                }\r\n\r\n                for (const draggingNote of draggingNotes.value) {\r\n                    startPositions.set(draggingNote.id, {\r\n                        x: event.clientX,\r\n                        y: event.clientY,\r\n                        left: draggingNote.left,\r\n                        top: draggingNote.top\r\n                    });\r\n                }\r\n\r\n                currentNoteLength.value = note.length;\r\n                currentNoteVolume.value = note.volume;\r\n                selectedTrackIndex.value = tracks.value.indexOf(note.track);\r\n                trackHexColor.value = note.track.color;\r\n                document.addEventListener('mousemove', onDrag);\r\n                document.addEventListener('mouseup', endDrag);\r\n            }\r\n        };\r\n\r\n        const onDrag = (event) => {\r\n            if (draggingNotes.value && resizingNotes.value.length === 0 && volumeChangingNotes.value.length === 0) {\r\n\r\n                let outOfBounds = false;\r\n                const newPositions = [];\r\n\r\n                let offGridNote = false;\r\n\r\n                for (const note of draggingNotes.value) {\r\n                    if (event.altKey || (note.highlighted && note.left % gridWidth.value !== 0)) {\r\n                        offGridNote = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                const noteSnapScale = offGridNote ? gridWidth.value / 4 : gridWidth.value;\r\n\r\n                let noteDelta = 0;\r\n\r\n                for (let i = 0; i < draggingNotes.value.length; ++i) {\r\n                    const note = draggingNotes.value[i];\r\n\r\n                    const startPos = startPositions.get(note.id);\r\n                    if (!startPos) continue;\r\n\r\n                    const dx = (event.clientX - startPos.x) / zoomScalar.value;\r\n                    const dy = event.clientY - startPos.y;\r\n\r\n                    let newLeft = 0;\r\n\r\n                    if (i === 0) {\r\n                        newLeft = Math.round((startPos.left + dx) / noteSnapScale) * noteSnapScale;\r\n                        noteDelta = newLeft - startPos.left;\r\n                    } else {\r\n                        newLeft = startPos.left + noteDelta;\r\n                    }\r\n\r\n                    let newTop = Math.round((startPos.top + dy) / gridHeight) * gridHeight;\r\n\r\n                    if (newLeft < 0 || newTop < 0 || newTop > 2568) {\r\n                        outOfBounds = true;\r\n                        break; // Exit loop if any note is out of bounds\r\n                    }\r\n\r\n                    newPositions.push({ note, newLeft, newTop });\r\n\r\n                }\r\n\r\n                if (outOfBounds) return;\r\n\r\n                // Auto-scroll stuff doesnt work super well yet, so I'll leave it out for now\r\n                let rightMost = Infinity;\r\n                let leftMost = Infinity;\r\n                let topMost = Infinity;\r\n                let bottomMost = 0;\r\n\r\n                for (const { note, newLeft, newTop } of newPositions) {\r\n\r\n                    note.left = newLeft;\r\n                    note.start = Math.round(note.left / (256) * (960*4));\r\n                    note.end = Math.round(note.start + note.length);\r\n                    note.top = newTop;\r\n\r\n                    const number = (1284 - (note.top / 2)) / 144;\r\n                    const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                    if (note.name != noteName && draggingNotes.value.length === 1) {\r\n                        startNote(0, { name: noteName, index: number * 12 % 12 }, Math.floor(number))\r\n                        endNote(0, { name: noteName, index: number * 12 % 12 }, Math.floor(number))\r\n                    }\r\n                    note.name = noteName;\r\n                    note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n\r\n                    // if (note.left + note.width < rightMost)\r\n                    //     rightMost = note.left + note.width;\r\n\r\n                    // if (note.left < leftMost)\r\n                    //     leftMost = note.left;\r\n\r\n                    // if (note.top < topMost)\r\n                    //     topMost = note.top;\r\n\r\n                    // if (note.top > bottomMost)\r\n                    //     bottomMost = note.top;\r\n\r\n                }\r\n                // const gridWrapper = document.querySelector('.grid-wrapper');\r\n                // const pianoRoll = document.querySelector('.piano-roll');\r\n                // if (rightMost > gridWrapper.scrollLeft + window.innerWidth) {\r\n                //     gridWrapper.scrollLeft = rightMost - window.innerWidth;\r\n                // } else if (leftMost < gridWrapper.scrollLeft) {\r\n                //     gridWrapper.scrollLeft = leftMost;\r\n                // } else if (bottomMost - topMost < window.innerHeight && topMost < pianoRoll.scrollTop) {\r\n                //     pianoRoll.scrollTop = topMost;\r\n                // } else if (bottomMost - topMost < window.innerHeight && bottomMost > window.innerHeight*0.85 + pianoRoll.scrollTop) {\r\n                //     pianoRoll.scrollTop = bottomMost - window.innerHeight*0.85;\r\n                // }\r\n\r\n            }\r\n        };\r\n\r\n        const endDrag = () => {\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            draggingNotes.value = [];\r\n            document.removeEventListener('mousemove', onDrag);\r\n            document.removeEventListener('mouseup', endDrag);\r\n            startPositions.clear();\r\n        };\r\n\r\n        const startResizeData = new Map();\r\n\r\n        const startResize = (note, event) => {\r\n            event.preventDefault();\r\n            if (event.button === 0) { // Ensure we're resizing with the left button\r\n                resizingNotes.value = [];\r\n                startX.value = event.clientX;\r\n                startResizeData.clear(); // Clear previous data\r\n\r\n                if (note.highlighted) {\r\n                    // If note is highlighted, prepare to resize all selected notes\r\n                    selectedNotes.value.forEach(n => {\r\n                        startResizeData.set(n.id, { width: n.width, startX: event.clientX });\r\n                    });\r\n                    resizingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    // If note is not highlighted, resize only this note\r\n                    clearSelection();\r\n                    startResizeData.set(note.id, { width: note.width, startX: event.clientX });\r\n                    resizingNotes.value = [note];\r\n                }\r\n\r\n                document.addEventListener('mousemove', onResize);\r\n                document.addEventListener('mouseup', endResize);\r\n            }\r\n        };\r\n\r\n        const onResize = (event) => {\r\n            if (resizingNotes.value.length > 0) {\r\n                let allInBounds = true;\r\n\r\n                const newWidths = [];\r\n\r\n                resizingNotes.value.forEach(note => {\r\n                    const startData = startResizeData.get(note.id);\r\n                    if (!startData) return;\r\n\r\n                    const dx = (event.clientX - startData.startX) / zoomScalar.value;\r\n                    let newWidth = 0;\r\n                    if (event.altKey) {\r\n                        newWidth = Math.round((startData.width + dx) / (gridWidth.value / 4)) * gridWidth.value / 4 - 1;\r\n                    } else {\r\n                        newWidth = Math.round((startData.width + dx) / gridWidth.value) * gridWidth.value - 1;\r\n                    }\r\n\r\n                    // Check if newWidth is valid for the note\r\n                    if (newWidth < gridWidth.value - 1 && !event.altKey || newWidth < 3) {\r\n                        allInBounds = false;\r\n                        return;\r\n                    }\r\n\r\n                    newWidths.push({ note, newWidth })\r\n\r\n                });\r\n\r\n                // If any note was resized to an invalid width, stop resizing\r\n                if (allInBounds) {\r\n                    for (const { note, newWidth } of newWidths) {\r\n                        note.width = newWidth;\r\n                        note.length = (960*4) * ((newWidth + 1) / 256);\r\n                        note.end = note.start + note.length;\r\n                        currentNoteLength.value = note.length;\r\n                    };\r\n                }\r\n            }\r\n        };\r\n\r\n        const endResize = () => {\r\n            resizingNotes.value = [];\r\n            startResizeData.clear();\r\n            document.removeEventListener('mousemove', onResize);\r\n            document.removeEventListener('mouseup', endResize);\r\n        };\r\n\r\n        let startingNoteVolumes = [];\r\n\r\n        const startVolumeChange = (note, event) => {\r\n            event.preventDefault();\r\n            if (event.button === 0) { // Ensure we're clicking with the left button\r\n                volumeChangingNotes.value = [];\r\n                startY.value = event.clientY;\r\n\r\n                if (note.highlighted) {\r\n                    // If note is highlighted, prepare to re-volume all selected notes\r\n                    volumeChangingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    // If note is not highlighted, re-volume only this note\r\n                    clearSelection();\r\n                    volumeChangingNotes.value = [note];\r\n                }\r\n                startingNoteVolumes = volumeChangingNotes.value.map((note) => { return note.volume });\r\n\r\n                document.addEventListener('mousemove', onVolumeChange);\r\n                document.addEventListener('mouseup', endVolumeChange);\r\n            }\r\n        };\r\n\r\n        const onVolumeChange = (event) => {\r\n            event.preventDefault();\r\n            if (volumeChangingNotes.value.length > 0) {\r\n                let i = 0;\r\n                for (const note of volumeChangingNotes.value) {\r\n                    const dy = startY.value - event.clientY;\r\n                    let newVolume = Math.round(Math.max(1, Math.min(15, startingNoteVolumes[i] + dy / 10)));\r\n                    note.volume = newVolume;\r\n                    currentNoteVolume.value = newVolume;\r\n                    i++;\r\n                }\r\n            }\r\n        };\r\n\r\n        const endVolumeChange = () => {\r\n            volumeChangingNotes.value = [];\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            document.removeEventListener('mousemove', onVolumeChange);\r\n            document.removeEventListener('mouseup', endVolumeChange);\r\n        };\r\n\r\n        const handleGridClick = (event) => {\r\n            if (event.ctrlKey && draggingNotes.value.length <= 0 && event.button === 0) {\r\n                if (!event.shiftKey)\r\n                    clearSelection();\r\n                startSelection(event);\r\n            } else {\r\n                startPlacingNote(event);\r\n            }\r\n        };\r\n\r\n        const handleGridScroll = (event) => {\r\n            // TODO: WE HAVE TO MAINTAIN A CONSTANT SIZED CANVAS. THE EXPANSION OF THE CANVAS CAUSES MUCHO LAG\r\n            const deltaY = -Math.sign(event.deltaY) * 1 / 8;\r\n            if (event.ctrlKey) {\r\n                event.preventDefault();\r\n                const z1 = zoomScalar.value;\r\n                const l = gridWrapper.value.scrollLeft;\r\n                const x = (event.clientX - gridWrapper.value.getBoundingClientRect().left + l);\r\n                zoomScalar.value = Math.min(8, Math.max(1 / 8, Math.round((zoomScalar.value + deltaY) * 8) / 8)); // Making sure that the zoom is in multiples of 1/8th\r\n                const z2 = zoomScalar.value;\r\n                gridWrapper.value.scrollLeft += x * (z2 / z1 - 1);\r\n            }\r\n        }\r\n\r\n        function clearSelection() {\r\n            selectedNotes.value.forEach((note) => {\r\n                note.highlighted = false;\r\n            });\r\n            selectedNotes.value = [];\r\n        }\r\n\r\n        const startSelection = (event) => {\r\n            event.preventDefault();\r\n            isSelecting.value = true;\r\n            const rect = gridCanvas.value.getBoundingClientRect();\r\n            startX.value = event.clientX - rect.left + scrollX.value;\r\n            startY.value = event.clientY - rect.top;\r\n            currentX.value = event.clientX - rect.left + scrollX.value;\r\n            currentY.value = event.clientY - rect.top;\r\n            document.addEventListener('mousemove', onSelectionMove);\r\n            document.addEventListener('mouseup', onSelectionEnd);\r\n        };\r\n\r\n        const onSelectionMove = (event) => {\r\n            if (isSelecting.value) {\r\n                const rect = gridCanvas.value.getBoundingClientRect();\r\n                currentX.value = event.clientX - rect.left + scrollX.value;\r\n                currentY.value = event.clientY - rect.top;\r\n            }\r\n        };\r\n\r\n        const onSelectionEnd = () => {\r\n            if (isSelecting.value) {\r\n                isSelecting.value = false;\r\n                document.removeEventListener('mousemove', onSelectionMove);\r\n                document.removeEventListener('mouseup', onSelectionEnd);\r\n                // This is where we add the logic to actually select the notes\r\n                checkIntersections();\r\n            }\r\n        };\r\n\r\n        function checkIntersections() {\r\n            const selectionRect = {\r\n                left: Math.min(startX.value, currentX.value) / zoomScalar.value,\r\n                top: Math.min(startY.value, currentY.value),\r\n                right: Math.max(startX.value, currentX.value) / zoomScalar.value,\r\n                bottom: Math.max(startY.value, currentY.value),\r\n            };\r\n\r\n            notesInGrid.value.forEach(note => {\r\n                const itemRect = {\r\n                    left: note.left,\r\n                    top: note.top,\r\n                    right: note.left + note.width,\r\n                    bottom: note.top + gridHeight,\r\n                };\r\n\r\n                if (intersects(selectionRect, itemRect)) {\r\n                    selectNote(note);\r\n                }\r\n            });\r\n\r\n        };\r\n\r\n        function selectNote(note) {\r\n            if (!selectedNotes.value.includes(note) && !note.muted) {\r\n                selectedNotes.value.push(note);\r\n                note.highlighted = true;\r\n            }\r\n        }\r\n\r\n        function intersects(rect1, rect2) {\r\n            return !(rect2.left >= rect1.right ||\r\n                rect2.right <= rect1.left ||\r\n                rect2.top >= rect1.bottom ||\r\n                rect2.bottom <= rect1.top);\r\n        }\r\n\r\n\r\n        const startPlacingNote = (event) => {\r\n            if (draggingNotes.value.length > 0 || resizingNotes.value.length > 0 || volumeChangingNotes.value.length > 0) {\r\n                return;\r\n            }\r\n\r\n            const rect = gridCanvas.value.getBoundingClientRect();\r\n            const x = (event.clientX - rect.left + scrollX.value) / zoomScalar.value;\r\n            const y = event.clientY - rect.top + grid.value.scrollTop;\r\n\r\n            let left = Math.round((x - gridWidth.value / 2) / gridWidth.value) * gridWidth.value;\r\n            if (event.altKey)\r\n                left = Math.round((x - gridWidth.value / 8) / (gridWidth.value / 4)) * gridWidth.value / 4;\r\n\r\n            const top = Math.round((y - gridHeight / 2) / gridHeight) * gridHeight;\r\n\r\n            const number = (1284 - (top / 2)) / 144;\r\n            const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n            startNote(0, { name: noteName, index: number * 12 % 12 }, Math.floor(number));\r\n            endNote(0, { name: noteName, index: number * 12 % 12 }, Math.floor(number));\r\n\r\n            const existingNote = notesInGrid.value.find(note =>\r\n                note.left <= x && x <= note.left + note.width + 1 && note.top === top && !note.muted\r\n            );\r\n\r\n            if (!existingNote) {\r\n                if (event.button !== 0)\r\n                    return;\r\n                clearSelection();\r\n                const id = notesInGrid.value.length + Date.now();\r\n                const newNote = {\r\n                    left: left,\r\n                    top: top,\r\n                    width: 256 * (currentNoteLength.value/(960*4)) - 1,\r\n                    highlighted: false,\r\n                    color: selectedTrack.value ? selectedTrack.value.color : 'hsla(212, 100%, 50%, 0.5)',\r\n                    id: id,\r\n                    name: noteName,\r\n                    pitch: number * 12 % 12 + 12 * (Math.floor(number) + 1),\r\n                    length: currentNoteLength.value,\r\n                    start: Math.round(left / (256) * (960*4)),\r\n                    end: Math.round(left / (256) * (960*4) + currentNoteLength.value),\r\n                    volume: currentNoteVolume.value,\r\n                    track: selectedTrack.value\r\n                };\r\n                notesInGrid.value.push(newNote);\r\n                selectedTrack.value.notes.unshift(newNote);\r\n                startDrag(notesInGrid.value.find(note => note.id == id), event, false);\r\n            } else {\r\n                // Here, we have identified that we clicked on an existing note.\r\n                if (event.button === 0) {\r\n                    const resizeHandleWidth = Math.min(10, (existingNote.width + 1) * 0.4) / zoomScalar.value;\r\n                    const volumeHandleCenter = { x: existingNote.left + (existingNote.width + 1) / 2, y: existingNote.top + gridHeight };\r\n                    const squaredDistToCenter = ((volumeHandleCenter.x - x) * zoomScalar.value) ** 2 + (volumeHandleCenter.y - y) ** 2;\r\n                    const radius = Math.min(6, ((existingNote.width + 1) / 4) * zoomScalar.value);\r\n                    if (x >= existingNote.left + existingNote.width - resizeHandleWidth && x <= existingNote.left + existingNote.width + 1) {\r\n                        startResize(existingNote, event);\r\n                        selectedTrackIndex.value = tracks.value.indexOf(existingNote.track);\r\n                        currentNoteLength.value = existingNote.length;\r\n                        currentNoteVolume.value = existingNote.volume;\r\n                    } else if (squaredDistToCenter <= radius * radius) {\r\n                        startVolumeChange(existingNote, event);\r\n                        selectedTrackIndex.value = tracks.value.indexOf(existingNote.track);\r\n                        currentNoteLength.value = existingNote.length;\r\n                        currentNoteVolume.value = existingNote.volume;\r\n                    } else {\r\n                        startDrag(existingNote, event);\r\n                    }\r\n                } else if (event.button === 2) {\r\n                    removeNote(existingNote, false);\r\n                }\r\n                \r\n                console.log(existingNote.length, existingNote.left, existingNote.start, existingNote.end);\r\n            }\r\n        };\r\n\r\n        //let trackWrappers = [];\r\n\r\n        const trackify = () => {\r\n            let notesList = [...selectedTrack.value.notes].sort((a, b) => {\r\n                if (a.start === b.start) {\r\n                    return a.top - b.top;\r\n                }\r\n                return a.start - b.start;\r\n            });\r\n            //let trackWrappers = [];\r\n            // for (let i = 0; i < tracks.value.length; ++i) {   \r\n            //     trackWrappers.push({\r\n            //         notes: [],\r\n            //         track: tracks.value[i]\r\n            //     });\r\n            // }\r\n\r\n            // Idea: Take the selected track and split it into more tracks.\r\n            // This involves adding new tracks (only if allowed, otherwise cancel the operation)\r\n            // if (tracks.value.length < 16)\r\n            //     addTrack();\r\n            // Then, put the proper notes into the proper tracks.\r\n\r\n            // For all notes in the selected track\r\n            // starting with selected track:\r\n            // if note can go into this track, then add it\r\n            // otherwise, add a new track, and put the note in there.\r\n\r\n            // after all notes are situated, loop through all tracks in the wrapper and set their notes equal to the new note lists\r\n\r\n            let trackWrappers = [];\r\n            trackWrappers.push({\r\n                notes: [],\r\n                track: selectedTrack.value,\r\n                index: 0\r\n            });\r\n\r\n            for (const note of notesList) {\r\n                for (const trackWrapper of trackWrappers) {\r\n                    if (!trackWrapper.notes[0] || trackWrapper.notes[0].end <= note.start) {\r\n                        trackWrapper.notes.unshift(note);\r\n                        break;\r\n                    } else {\r\n                        if (trackWrapper.index === trackWrappers.length - 1) {\r\n                            trackWrappers.push({\r\n                                notes: [],\r\n                                track: { instrument: trackWrapper.track.instrument, color: null, name: selectedTrack.value.name + ` (${trackWrappers.length})` },\r\n                                index: trackWrappers.length\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (tracks.value.length + trackWrappers.length - 1 > 32) {\r\n                showFailureMessage('Failed to split track! (Process would create too many tracks!)');\r\n                return;\r\n            }\r\n\r\n            showSuccessMessage(`Successfully split the track \"${selectedTrack.value.name}\" into ${trackWrappers.length} tracks!`, 3000);\r\n\r\n            for (const trackWrapper of trackWrappers) {\r\n                if (!tracks.value.includes(trackWrapper.track)) {\r\n                    trackWrapper.track = addTrack(trackWrapper.track.instrument, trackWrapper.track.color, trackWrapper.track.name);\r\n                }\r\n                trackWrapper.track.notes = trackWrapper.notes;\r\n                for (const note of trackWrapper.track.notes) {\r\n                    note.track = trackWrapper.track;\r\n                    note.color = trackWrapper.track.color;\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        function hexToRgba(originalColor, alpha) {\r\n            let hex = originalColor.replace('#', '');\r\n\r\n            if (hex.length === 3) {\r\n                hex = hex.split('').map(char => char + char).join('');\r\n            }\r\n\r\n            const r = parseInt(hex.substring(0, 2), 16);\r\n            const g = parseInt(hex.substring(2, 4), 16);\r\n            const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n            return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n        }\r\n\r\n        function copyToClipboard(text) {\r\n            navigator.clipboard.writeText(text).then(() => {\r\n                successNotificationText.value = \"MML copied to clipboard!\";\r\n                showSuccessNotification.value = true; // Show notification\r\n\r\n                // Hide notification after 2 seconds\r\n                setTimeout(() => {\r\n                    showSuccessNotification.value = false;\r\n                }, 2000);\r\n            }).catch(err => {\r\n                console.error('Could not copy text: ', err);\r\n            });\r\n        }\r\n\r\n        function optimDijkstra(tokens) {\r\n            // An early exit Dijkstra's algorithm\r\n            // Priority Queue worklist to which I add nodes whose priority is the total distance to reach that node.\r\n            // uniform cost search\r\n            const n = tokens.length;\r\n            // if depth = n then stop and return the string from the parents of the shortest path.\r\n\r\n            class GraphNode {\r\n                constructor (textValue, implicitOct, implicitLen, implicitVol) {\r\n                    this.implicitOct = implicitOct;\r\n                    this.implicitLen = implicitLen;\r\n                    this.implicitVol = implicitVol;\r\n                    this.parent = null;\r\n                    this.children = [];\r\n                    this.textValue = textValue;\r\n                    this.accCost = textValue.length;\r\n                    this.depth = 0;\r\n                }\r\n\r\n                addChild(child) {\r\n                    this.children.push(child);\r\n                    child.parent = this;\r\n                    child.accCost += this.accCost;\r\n                    child.depth = this.depth + 1;\r\n                }\r\n\r\n            }\r\n\r\n            function stateKey(depth, len, oct, vol) {\r\n                return `${depth}|${len}|${oct}|${vol}`;\r\n            }\r\n\r\n            const bestCost = new Map();\r\n\r\n            const startNode = new GraphNode('', 4, 960, 8);\r\n            const worklist = new Heap((a, b) => a.priority - b.priority);\r\n            let endNode = null;\r\n            worklist.push( {node: startNode, priority: 0} );\r\n\r\n            while (worklist.size() > 0) {\r\n                const { node: u, priority } = worklist.pop();\r\n                const key = stateKey(u.depth, u.implicitLen, u.implicitOct, u.implicitVol);\r\n\r\n                if (bestCost.has(key) && bestCost.get(key) <= priority) continue;\r\n                bestCost.set(key, priority);\r\n\r\n                const d = u.depth;\r\n                const token = tokens[d];\r\n                const tl = token?.length;\r\n                const td = token?.dotted;\r\n                const lengthString = Math.floor((960 * 4) / tl * (td ? 1.5 : 1)) + (td ? '.' : '');\r\n                let suffixLengthString = lengthString;\r\n                if (tl === u.implicitLen * 1.5 && td) {\r\n                    suffixLengthString = '.';\r\n                }\r\n\r\n                if (d === n) {\r\n                    endNode = u;\r\n                    break;\r\n                }\r\n\r\n                // create the children then add them to the worklist.\r\n                if (token.type === 'NOTE') {\r\n                    let octaveString = '';\r\n                    let volumeString = token.volume === u.implicitVol ? '' : `V${token.volume}`;\r\n\r\n                    let octaveDiff = token.octave - u.implicitOct;\r\n                    if (Math.abs(octaveDiff) > 2) {\r\n                        octaveString = `o${token.octave}`;\r\n                    } else {\r\n                        octaveString = (octaveDiff > 0 ? '>' : '<').repeat(Math.abs(octaveDiff));\r\n                    }\r\n\r\n                    if (token.length === u.implicitLen) {\r\n                        u.addChild(new GraphNode(`${volumeString}${octaveString}${token.name}`, token.octave, u.implicitLen, token.volume));\r\n                        u.addChild(new GraphNode(`${volumeString}N${token.pitch}`, u.implicitOct, u.implicitLen, token.volume));\r\n\r\n                        if (token.name === 'b') {\r\n                            octaveDiff = (token.octave+1) - u.implicitOct;\r\n                            if (Math.abs(octaveDiff) > 2) {\r\n                                octaveString = `o${token.octave}`;\r\n                            } else {\r\n                                octaveString = (octaveDiff > 0 ? '>' : '<').repeat(Math.abs(octaveDiff));\r\n                            }\r\n                            u.addChild(new GraphNode(`${volumeString}${octaveString}c-`, token.octave + 1, u.implicitLen, token.volume));\r\n                        }\r\n\r\n                        if (token.name === 'c') {\r\n                            octaveDiff = (token.octave-1) - u.implicitOct;\r\n                            if (Math.abs(octaveDiff) > 2) {\r\n                                octaveString = `o${token.octave}`;\r\n                            } else {\r\n                                octaveString = (octaveDiff > 0 ? '>' : '<').repeat(Math.abs(octaveDiff));\r\n                            }\r\n                            u.addChild(new GraphNode(`${volumeString}${octaveString}b+`, token.octave - 1, u.implicitLen, token.volume));\r\n                        }\r\n\r\n                    } else {\r\n                        u.addChild(new GraphNode(`${volumeString}L${lengthString}${octaveString}${token.name}`, token.octave, token.length, token.volume));\r\n                        u.addChild(new GraphNode(`${volumeString}${octaveString}${token.name}${suffixLengthString}`, token.octave, u.implicitLen, token.volume));\r\n\r\n                        if (token.name === 'b') {\r\n                            octaveDiff = (token.octave+1) - u.implicitOct;\r\n                            if (Math.abs(octaveDiff) > 2) {\r\n                                octaveString = `o${token.octave}`;\r\n                            } else {\r\n                                octaveString = (octaveDiff > 0 ? '>' : '<').repeat(Math.abs(octaveDiff));\r\n                            }\r\n                            u.addChild(new GraphNode(`${volumeString}L${lengthString}${octaveString}c-`, token.octave + 1, token.length, token.volume));\r\n                            u.addChild(new GraphNode(`${volumeString}${octaveString}c-${suffixLengthString}`, token.octave + 1, u.implicitLen, token.volume));\r\n                        }\r\n\r\n                        if (token.name === 'c') {\r\n                            octaveDiff = (token.octave-1) - u.implicitOct;\r\n                            if (Math.abs(octaveDiff) > 2) {\r\n                                octaveString = `o${token.octave}`;\r\n                            } else {\r\n                                octaveString = (octaveDiff > 0 ? '>' : '<').repeat(Math.abs(octaveDiff));\r\n                            }\r\n                            u.addChild(new GraphNode(`${volumeString}L${lengthString}${octaveString}b+`, token.octave - 1, token.length, token.volume));\r\n                            u.addChild(new GraphNode(`${volumeString}${octaveString}b+${suffixLengthString}`, token.octave - 1, u.implicitLen, token.volume));\r\n                        }\r\n\r\n                        u.addChild(new GraphNode(`${volumeString}L${lengthString}N${token.pitch}`, u.implicitOct, token.length, token.volume));\r\n                    }\r\n                } else if (token.type === 'REST') {\r\n                    if (token.length === u.implicitLen) {\r\n                        u.addChild(new GraphNode(`${token.name}`, u.implicitOct, u.implicitLen, u.implicitVol));\r\n                    } else {\r\n                        u.addChild(new GraphNode(`L${lengthString}${token.name}`, u.implicitOct, token.length, u.implicitVol));\r\n                        u.addChild(new GraphNode(`${token.name}${suffixLengthString}`, u.implicitOct, u.implicitLen, u.implicitVol));\r\n                    }\r\n                } else if (token.type === 'TEMPO') {\r\n                    u.addChild(new GraphNode(`T${token.tempo}`, u.implicitOct, u.implicitLen, u.implicitVol));\r\n                }\r\n\r\n                for (const child of u.children) {\r\n                    worklist.push({node: child, priority: child.accCost});\r\n                }\r\n\r\n            }\r\n\r\n            // Rebuild string with list from recursively checking parents.\r\n            const pieces = [];\r\n            let currentNode = endNode;\r\n            while (currentNode !== null) {\r\n                pieces.push(currentNode.textValue);\r\n                currentNode = currentNode.parent;\r\n            }\r\n\r\n            return pieces.reverse().join('');\r\n\r\n        }\r\n\r\n        function OxLxTokensDP(tokens) {\r\n            const n = tokens.length;\r\n\r\n            // All possible lengths and octaves we may encounter\r\n            const lengths = new Set(['4', ...tokens.filter(t => t.type !== 'TEMPO').map(t => t.lengthString)]);\r\n            const octaves = new Set(tokens.filter(t => t.type === 'NOTE').map(t => t.octave));\r\n            octaves.add(4);\r\n\r\n            const dp = {};\r\n            const action = {};\r\n\r\n            function getDP(i, len, oct) {\r\n                return dp[i]?.[len]?.[oct] ?? Infinity;\r\n            }\r\n\r\n            function setDP(i, len, oct, val, act) {\r\n                dp[i] ??= {};\r\n                dp[i][len] ??= {};\r\n                dp[i][len][oct] = val;\r\n\r\n                action[i] ??= {};\r\n                action[i][len] ??= {};\r\n                action[i][len][oct] = act;\r\n            }\r\n\r\n            // Base case: finishing at end has 0 cost\r\n            for (const len of lengths) {\r\n                for (const oct of octaves) {\r\n                    setDP(n, len, oct, 0, null);\r\n                }\r\n            }\r\n\r\n            // Helper: compute encoding cost/options for a note/rest in current state\r\n            function encodingsFor(lengthString, curLen, tie, noteName, notePitch, useTies) {\r\n                const results = [];\r\n\r\n                const isDotted = lengthString.endsWith('.');\r\n                const undotted = isDotted ? lengthString.slice(0, -1) : lengthString;\r\n                const tieString = tie ? '&' : '';\r\n\r\n                // Implicit (length same as current)\r\n                if (lengthString === curLen) {\r\n                    if (noteName) {\r\n                        const implicit = tieString + noteName;\r\n                        results.push({\r\n                            spelling: implicit,\r\n                            newLen: curLen,\r\n                            cost: implicit.length,\r\n                            type: 'implicit'\r\n                        });\r\n                    } else {\r\n                        const implicit = tieString + 'r';\r\n                        results.push({\r\n                            spelling: implicit,\r\n                            newLen: curLen,\r\n                            cost: implicit.length,\r\n                            type: 'implicit'\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Switch (change L then note)\r\n                const sw = 'L' + lengthString + tieString + (noteName || 'r');\r\n                results.push({\r\n                    spelling: tieString + (noteName || 'r'),\r\n                    newLen: lengthString,\r\n                    cost: sw.length,\r\n                    type: 'switch',\r\n                    needLengthCmd: true\r\n                });\r\n\r\n                // Explicit (append undotted)\r\n                if (noteName) {\r\n                    const ex = tieString + noteName + undotted;\r\n                    results.push({\r\n                        spelling: ex,\r\n                        newLen: curLen,\r\n                        cost: ex.length,\r\n                        type: 'explicit'\r\n                    });\r\n                }\r\n\r\n                // Pitch-notation (when useTies and we have pitch)\r\n                if (useTies && notePitch !== undefined) {\r\n                    if (lengthString === curLen) {\r\n                        const usePitch = tieString + `N${notePitch}`;\r\n                        results.push({\r\n                            spelling: usePitch,\r\n                            newLen: curLen,\r\n                            cost: usePitch.length,\r\n                            type: 'pitchImplicit',\r\n                            pitch: notePitch\r\n                        });\r\n                    }\r\n                    const exPitch = `L${lengthString}${tieString}N${notePitch}`;\r\n                    results.push({\r\n                        spelling: tieString + `N${notePitch}`,\r\n                        newLen: lengthString,\r\n                        cost: exPitch.length,\r\n                        type: 'pitchSwitch',\r\n                        pitch: notePitch,\r\n                        needLengthCmd: true\r\n                    });\r\n                }\r\n\r\n                return results;\r\n            }\r\n\r\n            // Bottom-up DP\r\n            for (let i = n - 1; i >= 0; i--) {\r\n                const token = tokens[i];\r\n                for (const len of lengths) {\r\n                    for (const oct of octaves) {\r\n                        let best = Infinity;\r\n                        let bestAct = null;\r\n\r\n                        if (token.type === 'REST') {\r\n                            const options = encodingsFor(token.lengthString, len, false, null, null, false);\r\n                            for (const opt of options) {\r\n                                const cand = opt.cost + getDP(i + 1, opt.newLen, oct);\r\n                                if (cand < best) {\r\n                                    best = cand;\r\n                                    bestAct = { type: 'rest', ...opt };\r\n                                }\r\n                            }\r\n\r\n                        } else if (token.type === 'NOTE') {\r\n                            const spellings = [];\r\n\r\n                            // Normal spelling\r\n                            spellings.push({ name: token.name, oct: token.octave });\r\n\r\n                            // Enharmonics\r\n                            if (token.name.toLowerCase() === 'b' && token.octave + 1 <= 8) {\r\n                                spellings.push({ name: 'c-', oct: token.octave + 1 });\r\n                            }\r\n                            if (token.name.toLowerCase() === 'c' && token.octave - 1 >= 0) {\r\n                                spellings.push({ name: 'b+', oct: token.octave - 1 });\r\n                            }\r\n\r\n                            for (const sp of spellings) {\r\n                                const options = encodingsFor(token.lengthString, len, false, sp.name, token.pitch, true);\r\n\r\n                                for (const opt of options) {\r\n                                    // A) Implicit octave (same as current)\r\n                                    const isPitchNotation = opt.type.startsWith('pitch');\r\n                                    if (isPitchNotation || sp.oct === oct) {\r\n                                        const cand = opt.cost + getDP(i + 1, opt.newLen, oct);\r\n                                        if (cand < best) {\r\n                                            best = cand;\r\n                                            bestAct = { type: 'spell', newOct: oct, ...opt };\r\n                                        }\r\n                                    }\r\n\r\n                                    if (isPitchNotation) continue;\r\n\r\n                                    // B) Relative octave (within ±2)\r\n                                    const diff = sp.oct - oct;\r\n                                    if (Math.abs(diff) <= 2 && diff !== 0) {\r\n                                        const relPrefix = (diff > 0 ? '>' : '<').repeat(Math.abs(diff));\r\n                                        const cand = relPrefix.length + opt.cost + getDP(i + 1, opt.newLen, sp.oct);\r\n                                        if (cand < best) {\r\n                                            best = cand;\r\n                                            bestAct = { type: 'spell+relOct', shift: diff, newOct: sp.oct, ...opt };\r\n                                        }\r\n                                    }\r\n\r\n                                    // C) Absolute octave\r\n                                    const absPrefix = `o${sp.oct}`;\r\n                                    const cand = absPrefix.length + opt.cost + getDP(i + 1, opt.newLen, sp.oct);\r\n                                    if (cand < best) {\r\n                                        best = cand;\r\n                                        bestAct = { type: 'spell+absOct', newOct: sp.oct, ...opt };\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        setDP(i, len, oct, best, bestAct);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Rebuild token list\r\n            let implicitLen = '4';\r\n            let implicitOct = 4;\r\n            const output = [];\r\n\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                const token = tokens[i];\r\n                if (token.type === 'TEMPO') {\r\n                    output.push(token);\r\n                    continue;\r\n                }\r\n\r\n                const a = action[i][implicitLen][implicitOct];\r\n                if (!a) continue;\r\n\r\n                if (a.newOct !== undefined && a.type !== 'spell') {\r\n                    let text;\r\n                    if (a.type === 'spell+absOct') {\r\n                        text = `o${a.newOct}`;\r\n                    } else if (a.type === 'spell+relOct') {\r\n                        const shift = a.shift;\r\n                        text = (shift > 0 ? '>' : '<').repeat(Math.abs(shift));\r\n                    }\r\n                    output.push({ type: 'OCTAVE', start: token.start, text });\r\n                    implicitOct = a.newOct;\r\n                }\r\n\r\n                if (a.needLengthCmd) {\r\n                    output.push({\r\n                        type: 'LENGTH',\r\n                        start: token.start,\r\n                        lengthString: a.newLen,\r\n                        length: Number(a.newLen),\r\n                        dotted: a.newLen.endsWith('.')\r\n                    });\r\n                    implicitLen = a.newLen;\r\n                }\r\n\r\n                output.push({\r\n                    type: token.type,\r\n                    start: token.start,\r\n                    name: a.spelling,\r\n                    lengthString: a.newLen,\r\n                    length: Number(a.newLen),\r\n                    dotted: a.newLen.endsWith('.'),\r\n                    tie: false,\r\n                    pitch: a.pitch\r\n                });\r\n\r\n                implicitLen = a.newLen;\r\n            }\r\n\r\n            return output;\r\n        }\r\n\r\n        const getTrackTokens = (track) => {\r\n            let tokens = [];\r\n            // Add Note tokens to list\r\n            for (const note of track.notes) {\r\n                const noteLengths = getOptimalNoteLengths(note.length); // Returns a list of lists of raw note length strings\r\n                const noteName = note.name.slice(0, note.name.length - 1).toLowerCase();\r\n                let useTies = false;\r\n                let prevNoteEnd = 0;\r\n                for (const noteLength of noteLengths.noteCombination) {\r\n                    tokens.push({\r\n                        type: 'NOTE',\r\n                        pitch: note.pitch - 12,\r\n                        volume: note.volume,\r\n                        length: noteLength.length / 32,\r\n                        lengthString: noteLength.name,\r\n                        dotted: noteLength.name.endsWith('.'),\r\n                        start: note.start + prevNoteEnd,\r\n                        octave: Math.floor((note.pitch - 12) / 12),\r\n                        name: (useTies ? '&' : '') + noteName\r\n                    });\r\n                    useTies = true;\r\n                    prevNoteEnd += noteLength.length / 32;\r\n                }\r\n            }\r\n            // Add tempo markers before rests\r\n            // Remove any duplicate tempo markers and push only relevant ones\r\n            const latestTempoMarkers = new Map();\r\n\r\n            if (tempo.value !== 120) {\r\n                latestTempoMarkers.set(0, {\r\n                    parentTrack: track,\r\n                    tempo: tempo.value,\r\n                    left: 0\r\n                });\r\n            }\r\n\r\n            for (const marker of tempoMarkers.value) {\r\n                if (marker.parentTrack === track) {\r\n                    latestTempoMarkers.set(marker.left, marker);\r\n                }\r\n            }\r\n\r\n            for (const marker of latestTempoMarkers.values()) {\r\n                tokens.push({\r\n                    type: 'TEMPO',\r\n                    tempo: marker.tempo,\r\n                    start: marker.left / 256 * 960 * 4,\r\n                    length: 0\r\n                });\r\n            }\r\n\r\n            tokens.sort((a, b) => {\r\n                if (a.start - b.start === 0) {\r\n                    if (a.type === 'TEMPO')\r\n                        return -1\r\n                }\r\n                return a.start - b.start;\r\n            });\r\n\r\n            // Add Rests between notes and tempo markers\r\n            for (let i = -1; i < tokens.length - 1; ++i) {\r\n                const token1 = i > -1 ? tokens[i] : {\r\n                    type: 'TEMPO',\r\n                    length: 0,\r\n                    start: 0\r\n                };\r\n                const token2 = tokens[i + 1];\r\n\r\n                if (token1.type === 'REST' || token2.type === 'REST') continue;\r\n\r\n                const gap = Math.max(0, token2.start - (token1.start + token1.length));\r\n                if (gap > 0) {\r\n                    const restLengths = getOptimalNoteLengths(gap);\r\n                    let prevRestEnd = 0;\r\n                    for (const restLength of restLengths.noteCombination) {\r\n                        tokens.splice(i + 1, 0, {\r\n                            type: \"REST\",\r\n                            length: restLength.length / 32,\r\n                            lengthString: restLength.name, // This IS MML REPRESENTATION\r\n                            start: token1.start + token1.length + prevRestEnd,\r\n                            name: \"r\",\r\n                            dotted: restLength.name.endsWith('.')\r\n                        });\r\n                        prevRestEnd += restLength.length / 32;\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n            // Run dynamic programming algorithm to place length tokens in proper spots (ignoring tempo tokens).\r\n            const tempoTokens = tokens.filter(t => t.type === 'TEMPO');\r\n            const dpTokens = tokens.filter(t => t.type !== 'TEMPO');\r\n\r\n            const testStr = optimDijkstra(tokens);\r\n            return { tokens: tokens, rendered: testStr };\r\n        };\r\n\r\n        const renderTrackTokens = (tokenList) => {\r\n            let output = [];\r\n            let activeDefault = 4;\r\n            let activeDotted = false;\r\n\r\n            if (!tokenList) {\r\n                return;\r\n            }\r\n\r\n            for (const tok of tokenList) {\r\n                let rendered = '';\r\n                if (tok.type === 'LENGTH') {\r\n                    activeDefault = tok.length;\r\n                    activeDotted = tok.dotted;\r\n                    rendered = `L${activeDefault}${tok.dotted ? '.' : ''}`;\r\n                } else if (tok.type === 'OCTAVE') {\r\n                    rendered = tok.text;\r\n                } else if (tok.type === 'VOLUME') {\r\n                    rendered = `V${tok.volume}`;\r\n                } else if (tok.type === 'REST') {\r\n                    rendered = tok.name;\r\n                } else if (tok.type === 'NOTE') {\r\n                    rendered = tok.name;\r\n                } else if (tok.type === 'TEMPO') {\r\n                    rendered = `T${tok.tempo}`;\r\n                }\r\n\r\n                if (rendered)\r\n                    output.push(rendered);\r\n            }\r\n\r\n            let outputText = output.join('');\r\n            return outputText;\r\n        };\r\n\r\n        const genTokensOutright = (singleTrack = null) => {\r\n            // Should split this per track.\r\n            const tracksToConsider = [singleTrack] || tracks.value;\r\n            if (tracksToConsider[0] === null || tracksToConsider === 0)\r\n                return;\r\n            const allTokens = [];\r\n            for (const track of tracksToConsider) {\r\n                allTokens.push(getTrackTokens(track));\r\n            }\r\n            return allTokens;\r\n        };\r\n\r\n        function renderTokens(tokenList) {\r\n            const outputText = renderTrackTokens(tokenList);\r\n            return outputText;\r\n        }\r\n\r\n        function getEnharmonicEquivalent(note) {\r\n            if (note.length === 1)\r\n                return note;\r\n            let root = note[0];\r\n            let accidental = note[1];\r\n            let noteIndex = noteNames.indexOf(root);\r\n            if (accidental === '#' || accidental === '+') {\r\n                noteIndex = (noteIndex + 1) % 12;\r\n            } else if (accidental === '-') {\r\n                noteIndex = ((noteIndex - 1) % 12 + 12) % 12;\r\n            }\r\n            return noteNames[noteIndex];\r\n        }\r\n\r\n        const patterns = {\r\n            LENGTH: /[Ll](\\d+)\\.?/g,  // Matches note lengths, e.g., L4, L8.\r\n            NOTE: /[a-gA-G][-+#]?\\d*\\.?|N\\d+/g,         // Matches notes like N60, N62.\r\n            REST: /[Rr]\\d*\\.?/g,      // Matches rests like R4, R8.\r\n            TIE: /&/g,              // Matches ties.\r\n            VOLUME: /[Vv](\\d+)/g,\r\n            TEMPO: /[Tt](\\d+)/g,\r\n            OCTAVE: /[Oo](\\d+)|[<>]/g\r\n        };\r\n\r\n        function tokenizeMML(mmlString) {\r\n            let tokens = [];\r\n\r\n            // Run regex patterns over the input\r\n            for (const [key, regex] of Object.entries(patterns)) {\r\n                let match;\r\n                while ((match = regex.exec(mmlString)) !== null) {\r\n                    tokens.push({ type: key, value: match[0], index: match.index });\r\n                }\r\n            }\r\n\r\n            // Sort tokens by their original index in the string\r\n            tokens.sort((a, b) => { return a.index - b.index });\r\n\r\n            return tokens;\r\n        }\r\n\r\n        function mmlToNewTrack(title, mmlTokens) {\r\n            let newTokenList = [...mmlTokens];\r\n            // Creates a new track with title and with data from mmlTokens\r\n            let newTrack = addTrack(instruments.value[10], null, title);\r\n            let octave = 4;\r\n            let length = '4';\r\n            let tempo = '120';\r\n            let volume = '8';\r\n            let builderX = 0; // We will update the currentX based on note length/width/etc\r\n            let previousNote = null;\r\n            for (let i = 0; i < newTokenList.length; i++) {\r\n                let token = newTokenList[i];\r\n                if (token.type === 'LENGTH') {\r\n                    let tokenLength = token.value.split('L')[1];\r\n                    if (tokenLength !== length) {\r\n                        length = tokenLength;\r\n                    }\r\n                } else if (token.type === 'TIE') {\r\n                    if (previousNote === null || newTokenList[i + 1] == null)\r\n                        continue;\r\n                    // if the next note has the same pitch as the previous note, then we modify the duration of previous note and increment builderX and i\r\n                    let nextNote = newTokenList[i + 1];\r\n                    let noteLength = length;\r\n                    let noteName = 'C';\r\n                    let noteOctave = octave;\r\n                    let notePitch = 0;\r\n\r\n                    if (nextNote.value.startsWith('N')) {\r\n                        notePitch = Number(nextNote.value.split('N')[1]);\r\n                        noteOctave = Math.floor(notePitch / 12);\r\n                        noteName = noteNames[(notePitch - 12 * noteOctave) % 12];\r\n                        let dotted = noteLength.includes('.');\r\n                        noteLength = Number(noteLength.slice(0, noteLength.length - dotted)) * (dotted ? 2 / 3 : 1);\r\n                    } else {\r\n                        let sharp = nextNote.value.includes('#') || nextNote.value.includes('+')\r\n                        let flat = nextNote.value.includes('-');\r\n                        let dotted = nextNote.value.includes('.');\r\n                        noteName = getEnharmonicEquivalent(nextNote.value.slice(0, 1 + sharp + flat));\r\n                        let noteIndex = noteNames.indexOf(noteName);\r\n                        if (noteIndex === 11 && flat)\r\n                            noteOctave -= 1;\r\n                        if (noteIndex === 0 && sharp)\r\n                            noteOctave += 1;\r\n                        if (nextNote.value.length - dotted > 1 + sharp + flat) { // If the note has a length added on\r\n                            noteLength = Number(nextNote.value.slice(((sharp || flat) ? 2 : 1), nextNote.value.length - dotted)) * (dotted ? 2 / 3 : 1);\r\n                        } else {// If the note has no added length\r\n                            let Ldotted = length.includes('.');\r\n                            dotted = Ldotted || dotted;\r\n                            noteLength = Number(length.slice(0, length.length - Ldotted)) * (dotted ? 2 / 3 : 1);\r\n                        }\r\n                        notePitch = noteNames.indexOf(noteName) + 12 * noteOctave;\r\n                    }\r\n                    if (previousNote.pitch - 12 === notePitch) {\r\n                        builderX += 256 / noteLength;\r\n                        previousNote.width += 256 / noteLength;\r\n                        previousNote.length += (960*4) / noteLength;\r\n                        previousNote.end += (960*4) / noteLength;\r\n                        i++;\r\n                    }\r\n\r\n                } else if (token.type === 'OCTAVE') {\r\n                    let tokenOctave = token.value;\r\n                    if (tokenOctave === '<') {\r\n                        octave -= 1;\r\n                    } else if (tokenOctave === '>') {\r\n                        octave += 1;\r\n                    } else {\r\n                        octave = Number(tokenOctave.split('O')[1]);\r\n                    }\r\n                } else if (token.type === 'VOLUME') {\r\n                    let tokenVolume = token.value.split('V')[1];\r\n                    if (tokenVolume !== volume) {\r\n                        volume = tokenVolume;\r\n                    }\r\n                } else if (token.type === 'TEMPO') {\r\n                    let tokenTempo = token.value.split('T')[1];\r\n                    if (tokenTempo !== tempo) {\r\n                        tempo = tokenTempo;\r\n                        tempoMarkers.value.push({\r\n                            left: builderX,\r\n                            tempo: Number(tempo),\r\n                            color: newTrack.color,\r\n                            parentTrack: newTrack,\r\n                            muted: false\r\n                        });\r\n                    }\r\n                } else if (token.type === 'REST') {\r\n                    let restLength = token.value.split('R')[1];\r\n                    if (restLength === length || Number(restLength) === 0 || isNaN(Number(restLength))) {\r\n                        let dotted = length.includes('.') || restLength.includes('.');\r\n                        let lengthNum = Number(length);\r\n                        builderX += (256 / lengthNum) * (dotted ? 1.5 : 1); // 1 bar is 256 pixels (no matter the tempo)\r\n                    } else {\r\n                        let dotted = restLength.includes('.');\r\n                        let lengthNum = Number(restLength);\r\n                        builderX += (256 / lengthNum) * (dotted ? 1.5 : 1); // 1 bar is 256 pixels (no matter the tempo)\r\n                    }\r\n                } else if (token.type === 'NOTE') {\r\n                    // notes will be placed starting from builderX\r\n                    // each note COULD have its own length, but notes starting with 'N' or not having a following number use the global length value\r\n                    let noteLength = length;\r\n                    let noteName = 'C';\r\n                    let noteOctave = octave;\r\n                    let notePitch = 0;\r\n\r\n                    if (token.value.startsWith('N')) {\r\n                        notePitch = Number(token.value.split('N')[1]);\r\n                        noteOctave = Math.floor(notePitch / 12);\r\n                        noteName = noteNames[(notePitch - 12 * noteOctave) % 12];\r\n                        let dotted = noteLength.includes('.');\r\n                        noteLength = Number(noteLength) * (dotted ? 2 / 3 : 1);\r\n                    } else {\r\n                        let sharp = token.value.includes('#') || token.value.includes('+');\r\n                        let flat = token.value.includes('-');\r\n                        let dotted = token.value.includes('.');\r\n                        noteName = getEnharmonicEquivalent(token.value.slice(0, 1 + sharp + flat));\r\n                        let noteIndex = noteNames.indexOf(noteName);\r\n                        if (noteIndex === 11 && flat)\r\n                            noteOctave -= 1;\r\n                        if (noteIndex === 0 && sharp)\r\n                            noteOctave += 1;\r\n                        if (token.value.length - dotted > 1 + sharp + flat) { // If the note has a length added on\r\n                            noteLength = Number(token.value.slice(((sharp || flat) ? 2 : 1), token.value.length)) * (dotted ? 2 / 3 : 1);\r\n                        } else { // If the note has no added length\r\n                            let Ldotted = length.includes('.');\r\n                            dotted = Ldotted || dotted;\r\n                            noteLength = Number(length) * (dotted ? 2 / 3 : 1);\r\n                        }\r\n                        notePitch = noteNames.indexOf(noteName) + 12 * noteOctave;\r\n                    }\r\n\r\n                    const newNote = {\r\n                        left: builderX, // In pixels\r\n                        top: 2568 - notePitch * gridHeight, // In pixels, the top of the note\r\n                        width: 256 / noteLength - 1, // In pixels (we assume 4/4 time, which is 16 pixels per beat)\r\n                        highlighted: false,\r\n                        color: newTrack.color,\r\n                        id: notesInGrid.value.length + Date.now(),\r\n                        name: noteName + noteOctave,\r\n                        pitch: notePitch + 12,\r\n                        length: (960*4) / noteLength, // In beats\r\n                        start: builderX / 256 * (960*4), // In beats\r\n                        end: builderX / 256 * (960*4) + (960*4) / noteLength, // In beats\r\n                        volume: Number(volume),\r\n                        track: newTrack\r\n                    };\r\n                    notesInGrid.value.push(newNote);\r\n                    newNote.track.notes.unshift(newNote);\r\n                    builderX += newNote.width + 1;\r\n                    previousNote = newNote;\r\n                }\r\n            }\r\n        }\r\n\r\n        function parseMMLNotation(mmlString) {\r\n            const segments = mmlString.replace(/\\s/, '').toUpperCase().match(/MML@([^;]+);/)[1].split(',');\r\n            for (const segment of segments) {\r\n                if (segment.length > 0)\r\n                    mmlToNewTrack(null, tokenizeMML(segment));\r\n            }\r\n        }\r\n\r\n        function parseMabiNotation(mabiString) {\r\n            const lines = mabiString.split(\"\\r\\n\"); // Goes title, composer, melody, harmony1, harmony2, song\r\n            let tokenizedSections = [];\r\n            for (let i = 2; i < lines.length; ++i) {\r\n                let line = lines[i].split(\" : \");\r\n                if (line.length < 2) {\r\n                    continue;\r\n                }\r\n                tokenizedSections.push({ title: line[0].trim(), tokens: tokenizeMML(line[1].trim().toUpperCase()) });\r\n            }\r\n\r\n            // Convert the titles and tokens into tracks with notes in them (and any tempo markers).\r\n            for (const section of tokenizedSections) {\r\n                if (section.tokens.length > 0) {\r\n                    mmlToNewTrack(section.title, section.tokens);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function parseMML(mmlString) {\r\n            if (mmlString.trim().startsWith(\"MML@\") && mmlString.trim().endsWith(\";\")) {\r\n                parseMMLNotation(mmlString);\r\n            } else {\r\n                parseMabiNotation(mmlString);\r\n            }\r\n        }\r\n\r\n        function importMidi() {\r\n            // Let user choose and \"upload\" MIDI file\r\n            const hiddenFileInput = document.getElementById('hiddenFileInput');\r\n            hiddenFileInput.click();\r\n\r\n            let handleFileSelect = async () => {\r\n                const file = hiddenFileInput.files[0];\r\n\r\n                hiddenFileInput.removeEventListener('change', handleFileSelect);\r\n\r\n                if (file) {\r\n                    const reader = new FileReader();\r\n\r\n                    reader.onload = async function (e) {\r\n                        const arrayBuffer = e.target.result;\r\n\r\n                        try {\r\n                            const parsedMIDI = new MIDI(arrayBuffer);\r\n                            await parsedMIDI.isReady;\r\n\r\n                            const ticksPerBeat = parsedMIDI.timeDivision;\r\n                            const fileDuration = parsedMIDI.duration;\r\n                            const fileTempo = parsedMIDI.tempoChanges.at(-2).tempo;\r\n\r\n                            const firstAddedTrackIndex = tracks.value.length;\r\n\r\n                            parsedMIDI.tracks.forEach((track, idx) => {\r\n\r\n                                const trackName = track.name || `Track ${idx}`;\r\n                                const activeNotes = []; // {pitch: 66, ticks: 44, velocity: 127}\r\n                                const sustainBuffer = [];\r\n                                const pairedNotes = []; // {startTicks: 1, pitch: 66, duration: 76 (in ticks, end ticks minus start ticks), velocity: 65}\r\n\r\n                                let pedalDown = false;\r\n\r\n                                track.forEach(midiMessage => {\r\n                                    const status = midiMessage.messageStatusByte;\r\n                                    const data = midiMessage.messageData;\r\n                                    const ticks = midiMessage.ticks;\r\n\r\n                                    if ((status & 0xF0) === 0x90 && data[1] > 0) {\r\n                                        activeNotes.push({\r\n                                            pitch: data[0],\r\n                                            ticks,\r\n                                            velocity: data[1]\r\n                                        });\r\n                                    }\r\n\r\n                                    // Note-off (either via 0x80 or 0x90 velocity=0)\r\n                                    else if (((status & 0xF0) === 0x80) || ((status & 0xF0) === 0x90 && data[1] === 0)) {\r\n                                        const pitch = data[0];\r\n                                        const endTicks = ticks;\r\n\r\n                                        const index = activeNotes.findIndex(n => n.pitch === pitch);\r\n                                        if (index !== -1) {\r\n                                            const startNote = activeNotes.splice(index, 1)[0];\r\n\r\n                                            if (pedalDown) {\r\n                                                sustainBuffer.push({\r\n                                                    pitch: startNote.pitch,\r\n                                                    startTicks: startNote.ticks,\r\n                                                    velocity: startNote.velocity,\r\n                                                    originalEndTicks: endTicks\r\n                                                });\r\n                                            } else {\r\n                                                pairedNotes.push({\r\n                                                    startTicks: startNote.ticks,\r\n                                                    pitch: startNote.pitch,\r\n                                                    duration: endTicks - startNote.ticks,\r\n                                                    velocity: startNote.velocity\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    // Sustain Pedal (Control Change 64)\r\n                                    else if ((status & 0xF0) === 0xB0 && data[0] === 64) {\r\n                                        const value = data[1];\r\n                                        const wasDown = pedalDown;\r\n                                        pedalDown = value >= 64;\r\n\r\n                                        if (wasDown && !pedalDown) {\r\n                                            // Pedal released – finalize all sustained notes\r\n                                            for (const note of sustainBuffer) {\r\n                                                pairedNotes.push({\r\n                                                    startTicks: note.startTicks,\r\n                                                    pitch: note.pitch,\r\n                                                    duration: ticks - note.startTicks,\r\n                                                    velocity: note.velocity\r\n                                                });\r\n                                            }\r\n                                            sustainBuffer.length = 0;\r\n                                        }\r\n                                    }\r\n\r\n                                    // Optionally, handle program change, tempo, etc., elsewhere\r\n                                });\r\n\r\n                                // Optional: handle any dangling notes at end of track\r\n                                for (const note of activeNotes) {\r\n                                    pairedNotes.push({\r\n                                        startTicks: note.ticks,\r\n                                        pitch: note.pitch,\r\n                                        duration: 0, // or default duration\r\n                                        velocity: note.velocity\r\n                                    });\r\n                                }\r\n\r\n                                for (const note of sustainBuffer) {\r\n                                    pairedNotes.push({\r\n                                        startTicks: note.startTicks,\r\n                                        pitch: note.pitch,\r\n                                        duration: note.originalEndTicks - note.startTicks, // fallback if pedal never released\r\n                                        velocity: note.velocity\r\n                                    });\r\n                                }\r\n\r\n                                if (pairedNotes.length !== 0) {\r\n\r\n                                    const newTrack = addTrack(instruments.value[10], null, trackName);\r\n\r\n                                    for (const note of pairedNotes) {\r\n\r\n                                        const notePitch = note.pitch - 12;\r\n                                        const noteOctave = Math.floor(notePitch / 12);\r\n                                        const noteName = noteNames[notePitch % 12];\r\n                                        const noteLength = Math.max(60, Math.round(note.duration / ticksPerBeat * 960)); // in beats\r\n                                        const noteWidth = Math.max(3, Math.round(note.duration / ticksPerBeat * 64 / 4) * 4 - 1);\r\n                                        const noteLeft = Math.round(note.startTicks / ticksPerBeat * 64 / 4) * 4; // t * b/t * 64px/b = px (1/4 note at 120 bpm (default) is 64 px wide)\r\n                                        const noteVolume = Math.floor(note.velocity / 8);\r\n\r\n                                        const newNote = {\r\n                                            left: noteLeft, // In pixels\r\n                                            top: 2568 - notePitch * gridHeight, // In pixels, the top of the note\r\n                                            width: noteWidth, // In pixels (we assume 4/4 time, which is 16 pixels per beat)\r\n                                            highlighted: false,\r\n                                            color: newTrack.color,\r\n                                            id: notesInGrid.value.length + Date.now(),\r\n                                            name: noteName + noteOctave,\r\n                                            pitch: notePitch + 12,\r\n                                            length: noteLength, // In beats\r\n                                            start: Math.round(noteLeft / (256) * (960*4)), // In beats\r\n                                            end: Math.round(noteLeft / (256) * (960*4)) + noteLength, // In beats\r\n                                            volume: noteVolume,\r\n                                            track: newTrack\r\n                                        };\r\n\r\n                                        notesInGrid.value.push(newNote);\r\n                                        newNote.track.notes.unshift(newNote);\r\n                                    }\r\n                                }\r\n\r\n                            });\r\n\r\n                            tempo.value = Math.round(fileTempo);\r\n\r\n                            const tempoMarkersTemp = [];\r\n                            let previousTempo = fileTempo;\r\n\r\n                            let idx = 0;\r\n                            for (const tempo of parsedMIDI.tempoChanges) {\r\n                                idx++;\r\n                                if (Math.round(tempo.tempo) === previousTempo || tempo.ticks === 0 && idx === parsedMIDI.tempoChanges.length) {\r\n                                    continue;\r\n                                }\r\n                                let marker = {\r\n                                    left: Math.round(tempo.ticks / ticksPerBeat * 16) * 4,\r\n                                    tempo: Math.round(tempo.tempo),\r\n                                    color: tracks.value[firstAddedTrackIndex].color,\r\n                                    parentTrack: tracks.value[firstAddedTrackIndex],\r\n                                    muted: false\r\n                                };\r\n\r\n                                tempoMarkersTemp.push(marker);\r\n                                previousTempo = Math.round(tempo.tempo);\r\n                            }\r\n\r\n                            tempoMarkers.value = [...tempoMarkers.value, ...tempoMarkersTemp];\r\n\r\n                        } catch (err) {\r\n                            console.error('Error parsing MIDI file:', err);\r\n                        }\r\n                    };\r\n\r\n                    reader.readAsArrayBuffer(file);\r\n                }\r\n            };\r\n\r\n            hiddenFileInput.addEventListener('change', handleFileSelect);\r\n        }\r\n\r\n\r\n        async function parseMMLFromClipboard() {\r\n            const textFromClipboard = await navigator.clipboard.readText();\r\n            parseMML(textFromClipboard);\r\n            showSuccessMessage(`Successfully imported tracks from clipboard!`, 1000);\r\n        }\r\n\r\n        function tryRemoveNote(event) {\r\n            if (event && event.buttons !== 2)\r\n                return;\r\n\r\n            const rect = gridCanvas.value.getBoundingClientRect();\r\n            const x = (event.clientX - rect.left + scrollX.value) / zoomScalar.value;\r\n            const y = event.clientY - rect.top + grid.value.scrollTop;\r\n\r\n            for (const note of notesInGrid.value) {\r\n                const left = note.left;\r\n                const right = left + note.width;\r\n                const top = note.top;\r\n                const bottom = note.top + gridHeight;\r\n                const intersects = left <= x && x <= right && y >= top && y <= bottom;\r\n                if (intersects) {\r\n                    removeNote(note, false, event);\r\n                }\r\n            }\r\n        }\r\n\r\n        const removeNote = (note, fromList, event = null) => {\r\n            if (event && event.buttons !== 2)\r\n                return;\r\n            selectedNotes.value = selectedNotes.value.filter(n => n.id !== note.id);\r\n            let oldSize = notesInGrid.value.length;\r\n            notesInGrid.value = notesInGrid.value.filter(n => n.id !== note.id);\r\n            let diff = oldSize - notesInGrid.value.length;\r\n            for (const track of tracks.value) {\r\n                track.notes = track.notes.filter(n => n.id !== note.id);\r\n            }\r\n            if (!fromList && isPlaying.value)\r\n                playSequence();\r\n        };\r\n\r\n        document.addEventListener('mousedown', (event) => {\r\n            isMouseDown.value = true;\r\n        });\r\n\r\n        document.addEventListener('mouseup', () => {\r\n            isMouseDown.value = false;\r\n        });\r\n\r\n        return {\r\n            notes,\r\n            octaves,\r\n            startNote,\r\n            endNote,\r\n            mouseOverNote,\r\n            mouseLeaveNote,\r\n            instruments,\r\n            selectedInstrument,\r\n            changeInstrument,\r\n            pianoRoll,\r\n            grid,\r\n            notesInGrid,\r\n            startDrag,\r\n            endDrag,\r\n            startPlacingNote,\r\n            startVolumeChange,\r\n            removeNote,\r\n            gridWidth,\r\n            gridHeight,\r\n            gridSpan,\r\n            startResize,\r\n            endResize,\r\n            onResize,\r\n            currentNoteLength,\r\n            playSequence,\r\n            tempo,\r\n            handleGridClick,\r\n            handleGridScroll,\r\n            isSelecting,\r\n            rectangleStyle,\r\n            handleRulerClick,\r\n            markerPosition,\r\n            markerReplayPosition,\r\n            ruler,\r\n            loopSong,\r\n            trackify,\r\n            tracks,\r\n            backgroundStyle,\r\n            genTokensOutright,\r\n            renderTokens,\r\n            showSuccessNotification,\r\n            successNotificationText,\r\n            showFailedNotification,\r\n            failedNotificationText,\r\n            handleTrackSelected,\r\n            handleAddTrack,\r\n            handleRemoveTrack,\r\n            handleMuteTrack,\r\n            instrKeyMin,\r\n            instrKeyMax,\r\n            hexToRgba,\r\n            currentNoteVolume,\r\n            clickTempoMarker,\r\n            tempoMarkers,\r\n            updateColor,\r\n            zoomScalar,\r\n            autoScrollSong,\r\n            parseMMLFromClipboard,\r\n            gridCanvas,\r\n            windowWidth,\r\n            scrollX,\r\n            gridWrapper,\r\n            tryRemoveNote,\r\n            importMidi,\r\n            copyToClipboard\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.piano-container {\r\n    position: fixed;\r\n    /* Fix to the left side of the screen */\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    /* Full height */\r\n    width: 100%;\r\n    /* Width of the piano roll */\r\n    background-color: #ddd;\r\n}\r\n\r\n.copyNotification {\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 20px;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\r\n    z-index: 1000;\r\n}\r\n\r\n.instrument-selector {\r\n    padding: 10px;\r\n    background-color: #f0f0f0;\r\n    border-bottom: 1px solid #ccc;\r\n}\r\n\r\n.piano-roll {\r\n    height: 94vh;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n    padding-bottom: 36px;\r\n}\r\n\r\n.piano-keys {\r\n    padding-top: 30px;\r\n    background-color: #ccc;\r\n    width: 10%;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    padding-bottom: 18px;\r\n    /* Higher notes at the top */\r\n    z-index: 12;\r\n}\r\n\r\n.octave {\r\n    flex-direction: column;\r\n    position: relative;\r\n}\r\n\r\n.keys-wrapper {\r\n    flex-direction: column-reverse;\r\n    /* Ensure keys are in the correct order */\r\n}\r\n\r\n.piano-key {\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    cursor: pointer;\r\n    position: relative;\r\n    user-select: none;\r\n}\r\n\r\n.white-key {\r\n    width: 100%;\r\n    height: 24px;\r\n    align-content: center;\r\n    /* Adjust based on desired key height */\r\n    background: white;\r\n    border-bottom: 1px solid #ccc;\r\n    text-align: right;\r\n    padding-right: 10px;\r\n    user-select: none;\r\n    font-size: 80%;\r\n}\r\n\r\n.black-key {\r\n    background: black;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 24px;\r\n    align-content: center;\r\n    /* Adjust based on desired key height */\r\n    position: relative;\r\n    /* Center black key over white key */\r\n    text-align: right;\r\n    padding-right: 10px;\r\n    user-select: none;\r\n    font-size: 80%;\r\n}\r\n\r\n.white-key:nth-child(2n+1) {\r\n    background: #fff;\r\n}\r\n\r\n.white-key:nth-child(12n) {\r\n    background: #bbb;\r\n}\r\n\r\n.grid-wrapper {\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    flex-grow: 1;\r\n    position: relative;\r\n}\r\n\r\n.ruler {\r\n    position: absolute;\r\n    left: 0;\r\n    margin-left: calc(10% - 2px);\r\n    background-color: #eee;\r\n    height: 29px;\r\n    border-bottom: 1px solid #ccc;\r\n    display: flex;\r\n    align-items: end;\r\n    font-size: 12px;\r\n    color: #333;\r\n    z-index: 11;\r\n    user-select: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.ruler-tick-label {\r\n    position: absolute;\r\n    bottom: 0;\r\n    white-space: nowrap;\r\n    transform: translateX(5px);\r\n    font-size: 14px;\r\n    color: #333;\r\n}\r\n\r\n.marker-replay-triangle {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid #bbb;\r\n    /* Triangle color */\r\n    left: 50%;\r\n    bottom: 0;\r\n    /* Inside the ruler */\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.marker-wrapper {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    transform: translateX(-50%);\r\n    pointer-events: none;\r\n}\r\n\r\n.marker-triangle {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid #f00;\r\n    /* Triangle color */\r\n    left: 50%;\r\n    bottom: 0;\r\n    /* Inside the ruler */\r\n    transform: translateX(-50%);\r\n    z-index: 100;\r\n}\r\n\r\n.marker-line {\r\n    position: absolute;\r\n    width: 2px;\r\n    height: 100vh;\r\n    background-color: #f00;\r\n    left: 50%;\r\n    bottom: - 100%;\r\n    /* Below the ruler */\r\n    transform: translateX(-50%);\r\n    z-index: 100;\r\n}\r\n\r\n.grid {\r\n    position: absolute;\r\n    overflow: hidden;\r\n    display: flex;\r\n    /* padding-top: 17px;\r\n    margin-top: 30px;\r\n    left: -1px;\r\n    position: absolute;\r\n    display: flex;\r\n    min-width: 100%;\r\n    align-self: top;\r\n    height: 100%;/*2592px;\r\n    background: repeating-linear-gradient( /*This is the horizontal lines\r\n        0deg,\r\n        #bbb,\r\n        #bbb 2px,\r\n        transparent 2px,\r\n        transparent 24px\r\n    ),\r\n    repeating-linear-gradient( /*This is the Bar line\r\n        90deg,\r\n        #777,\r\n        #777 2px,\r\n        transparent 2px,\r\n        transparent 256px\r\n    ),\r\n    repeating-linear-gradient( /*This is the vertical lines\r\n        90deg,\r\n        #c0c0c0,\r\n        #c0c0c0 2px,\r\n        transparent 2px,\r\n        transparent 16px\r\n    ),\r\n    repeating-linear-gradient(/*This is the background colors\r\n        90deg,\r\n        #e0e0e0,\r\n        #e0e0e0 64px,\r\n        #ccc 64px,\r\n        #ccc 128px\r\n    );\r\n    z-index: 10;\r\n    overflow: hidden; */\r\n}\r\n\r\n.note {\r\n    position: absolute;\r\n    background-color: rgba(0, 120, 255, 0.5);\r\n    border: 1px solid #0078d4;\r\n    cursor: pointer;\r\n    box-sizing: border-box;\r\n    user-select: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 20;\r\n    font-size: 70%;\r\n    margin-left: 1px;\r\n    overflow: hidden;\r\n}\r\n\r\n.note:active {\r\n    background-color: rgba(0, 120, 255, 0.7);\r\n}\r\n\r\n.resize-handle {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 40%;\r\n    /* Adjust as needed */\r\n    max-width: 10px;\r\n    height: 100%;\r\n    cursor: ew-resize;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.volume-handle {\r\n    width: 12px;\r\n    height: 60%;\r\n    /* Half the width to create the half-circle */\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    position: absolute;\r\n    bottom: -35%;\r\n    /* Align to the bottom of the note */\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    border-radius: 50%;\r\n    /* Create a circle */\r\n    clip-path: inset(0 0 50% 0);\r\n    /* Clip top half, making it a half-circle */\r\n    cursor: ns-resize;\r\n    /* Show a pointer to indicate draggable */\r\n}\r\n\r\n.play-button {\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 10px;\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: #0078d4;\r\n    color: white;\r\n    z-index: 1000;\r\n    /* Ensure it's on top of other elements */\r\n    outline: none;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.loop-wrapper {\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 160px;\r\n    padding: 10px 20px;\r\n    height: 18px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    background-color: #0078d4;\r\n    color: white;\r\n    border-radius: 5px;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n    z-index: 1000;\r\n    width: 65px;\r\n}\r\n\r\n.scroll-wrapper {\r\n    position: fixed;\r\n    width: 108px;\r\n    top: 50px;\r\n    right: 10px;\r\n    padding: 10px 20px;\r\n    height: 18px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: #0078d4;\r\n    color: white;\r\n    z-index: 1000;\r\n    /* Ensure it's on top of other elements */\r\n    outline: none;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.controls {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.instrument-selector,\r\n.tempo-selector {\r\n    margin-right: 15px;\r\n}\r\n\r\n.selection-rect {\r\n    position: absolute;\r\n    border: 1px solid rgba(0, 100, 255, 0.5);\r\n    background-color: rgba(0, 100, 255, 0.3);\r\n    z-index: 30;\r\n}\r\n\r\n.gridCanvas {\r\n    margin-top: 30px;\r\n    display: block;\r\n    z-index: 10;\r\n    left: 0px;\r\n}\r\n</style>","<template>\r\n  <div>\r\n    <!-- Help Button -->\r\n    <button class=\"help-button\" @click=\"showHelp\">\r\n      <span v-if=\"hoverHelp\">Help</span>\r\n      <span v-else> ? </span>\r\n    </button>\r\n\r\n    <!-- Help Modal -->\r\n    <div v-if=\"isHelpVisible\" class=\"modal-background\" @click=\"closeHelp\">\r\n      <transition name=\"fade\">\r\n        <div class=\"help-modal\">\r\n          <button class=\"close-button\" @click=\"closeHelp\">X</button>\r\n          <div class=\"help-content\" @click.stop>\r\n            <h1>Help</h1>\r\n            <p class=\"credits\">MOS v1.2</p>\r\n\r\n            <h3>Navigating the Grid</h3>\r\n            <ul>\r\n              <li>Scroll within the grid using the scroll bars, or directly with your mouse wheel.</li>\r\n              <li>Scrolling your mouse wheel normally will move the grid vertically.</li>\r\n              <li>Holding <strong>Shift</strong> while scrolling will move the grid horizontally.</li>\r\n              <li>Holding <strong>Ctrl</strong> and scrolling will zoom the grid in and out.</li>\r\n              <li>If the grid is focused (after clicking inside it), you can use the arrow keys to navigate around the\r\n                grid.</li>\r\n            </ul>\r\n\r\n            <h3>Placing Notes</h3>\r\n            <ul>\r\n              <li>To place notes, click anywhere on the grid.</li>\r\n              <li>The size of the note will be the same size as the note that was last placed/moved.</li>\r\n              <li>Placed notes are instantly draggable.</li>\r\n              <li>The color of the placed notes will depend on the color of the track they belong to.</li>\r\n              <li>By changing the \"Grid Spacing\" dropdown, you can control whether the grid is in 16ths or 12ths.</li>\r\n              <li>Each instrument has a different range of notes that it can play. The red keys on the piano to the left\r\n                indicate notes that will not make a sound with the current instrument.</li>\r\n            </ul>\r\n\r\n            <h3>Dragging Notes</h3>\r\n            <ul>\r\n              <li>To drag a note, click on the left side of the note. Then, move your mouse around within the bounds of\r\n                the grid.</li>\r\n              <li>Holding <strong>Alt</strong> will move notes freely (not locked to the grid).</li>\r\n              <li>If multiple notes are selected, all selected notes will be moved together (even if they are from\r\n                different tracks).</li>\r\n            </ul>\r\n\r\n            <h3>Resizing Notes</h3>\r\n            <ul>\r\n              <li>To resize a note, click on the right side of the note, then drag left or right.</li>\r\n              <li>Notes have a minimum length of 1/64th of a beat.</li>\r\n              <li>Holding <strong>Alt</strong> will resize notes freely (not locked to the grid)</li>\r\n              <li>If multiple notes are selected, all selected notes will be resized together.</li>\r\n            </ul>\r\n\r\n            <h3>Note Volume</h3>\r\n            <ul>\r\n              <li>The current note volume can be seen at the top of the screen.</li>\r\n              <li>A note's volume is indicated by the opacity of the note, as well as the number next to the note's\r\n                name.</li>\r\n              <li>To change a note's volume, left click and hold on the half-circle at the bottom center of the note.\r\n                Then, drag your mouse up and down. Dragging up will increase the note's volume, and dragging down will\r\n                decrease it.</li>\r\n              <li>Notes start with a default volume of 8.</li>\r\n              <li>Notes have a volume range from 1 to 15.</li>\r\n              <li>Changing a note's volume while multiple notes are selected will change the volume of all selected\r\n                notes by the same amount.</li>\r\n            </ul>\r\n\r\n            <h3>Selecting Multiple Notes</h3>\r\n            <ul>\r\n              <li>To select multiple notes at once, hold <strong>Ctrl</strong> on the grid and drag your mouse.</li>\r\n              <li>If you hold <strong>Ctrl+Shift</strong> and drag, you will \"add on\" to your note selection.\r\n                <i>(Previously selected notes will not be unselected, and you can select additional notes.)</i>\r\n              </li>\r\n              <li>If you hold <strong>Shift</strong> and drag a note, you will clone it (if that note is highlighted, it\r\n                will clone all highlighted notes).</li>\r\n              <li>Pressing <strong>Ctrl+A</strong> will select all notes in the grid.</li>\r\n              <li>Pressing the <strong>Backspace</strong> or <strong>Delete</strong> keys will delete all selected\r\n                notes.</li>\r\n              <li>Holding <strong>Ctrl</strong> and pressing the left or right arrows will move the selected notes a\r\n                whole grid space (i.e. 1/16th or 1/12th).</li>\r\n              <li>Holding <strong>Ctrl</strong> and pressing the up or down arrows will move the selected notes an\r\n                octave (if possible).</li>\r\n              <li>Holding <strong>Shift</strong> and pressing the left or right arrows will move the selected notes a\r\n                fourth of a grid space (i.e. 1/64th or 1/48th).</li>\r\n              <li>Holding <strong>Shift</strong> and pressing the up or down arrows will move the selected notes up or\r\n                down a single note (if possible).</li>\r\n              <li>Pressing <strong>T</strong> with notes selected will move them into the currently selected track.</li>\r\n            </ul>\r\n\r\n            <h3>Tracks</h3>\r\n            <ul>\r\n              <li>Each track has its own name, instrument, color, and visibility/mute toggle.</li>\r\n              <li>To add a track, click on the blue plus button to the right of the tracks.</li>\r\n              <li>To rename a track, double click on the track's name. When done with renaming, press\r\n                <strong>Enter</strong>.\r\n              </li>\r\n              <li>To mute/unmute a track, click on the volume icon next to the track's name.</li>\r\n              <li>To focus on a track, right click on the volume icon. This will mute all other tracks.</li>\r\n              <li>To unfocus, right click on the volume icon again. This will unmute all other tracks.</li>\r\n              <li>Clicking on a note from another track will cause you to switch to that note's track.</li>\r\n              <li>You can remove a track by clicking on the <strong>X</strong>. This will also remove the notes\r\n                belonging to that track.</li>\r\n              <li>To change the color of a track and its notes, click on the outlined box at the bottom-center of the\r\n                selected track's tab.</li>\r\n              <li>You can have a minimum of 1 track, and a maximum of 16 tracks.</li>\r\n              <li>The number of tracks you can have at once is dependant on screen width. This is so that smaller\r\n                screens can still access all of their created tabs easily.</li>\r\n              <li>Hovering over a track tab will show you the name of the track.</li>\r\n              <li>With notes selected, pressing <strong>Ctrl+C</strong> or <strong>Ctrl+X</strong> will copy/cut notes.\r\n              </li>\r\n              <li>After copying/cutting notes, you can paste them back in with <strong>Ctrl+V</strong>. This will paste\r\n                all previously copied notes into the current track.</li>\r\n            </ul>\r\n\r\n            <h3>Track Splitting</h3>\r\n            <ul>\r\n              <li>With a track selected, click the \"Split Track\" button. This will separate the track into multiple\r\n                other tracks (unless that number would exceed 16).</li>\r\n              <li>A track is split from left to right, then top to bottom. This can sometimes lead to weird splits.</li>\r\n              <li>The purpose of this feature is so that you can compose parts of your piece in a single track, then\r\n                split them up if you need to.</li>\r\n            </ul>\r\n\r\n            <h3>Exporting to MML</h3>\r\n            <ul>\r\n              <li>Clicking on the \"Export\" button will open a menu allowing the export of MML to your clipboard (it may\r\n                take a moment to open).</li>\r\n              <li>A maximum of four tracks can be exported at once, or three tracks if the 'Exclude Song Part' box is\r\n                checked.</li>\r\n              <li>Remember that the fourth track in a score is always the 'song' track.</li>\r\n              <li>Tracks that have multiple notes playing at once will NOT be exportable (marked with an asterisk), so be sure to split them\r\n                before export.</li>\r\n              <li>The exported MML will be moderately optimized for length; they will not be perfectly optimized.</li>\r\n              <li>Exported tracks are sorted by length by default, but this can be changed by unchecking the box.</li>\r\n              <li>When tracks are not sorted by length, they are sorted by the order in which they were selected.</li>\r\n              <li>In the future, tracks will be able to be split into separate Jabchiel-compatible scores based on the\r\n                rank you select. <strong>*Jabchiel export is currently non-functional*</strong>, but you can play with it\r\n                to see what is intended. \r\n              </li>\r\n            </ul>\r\n\r\n            <h3>Importing MML</h3>\r\n            <ul>\r\n              <li>Clicking on the \"Import MML From Clipboard\" button will attempt to copy whatever is in your clipboard\r\n                into new sequencer tracks.</li>\r\n              <li>Available import types are MMLs that start with `MML@` and end with a semicolon (;), or MMLs taken\r\n                straight from Mabinogi score scrolls.</li>\r\n              <li>Imported MMLs should not have any extraneous spaces, characters, or new line characters. Otherwise,\r\n                they will not import properly.</li>\r\n              <li>Importing from Mabinogi directly will named the tracks according to which track they came from (e.g.\r\n                Melody, Harmony 1, Harmony 2, Song)</li>\r\n            </ul>\r\n\r\n            <h3>Importing MIDI</h3>\r\n            <ul>\r\n              <li>Clicking on the \"Import MIDI\" button will open your computer's file browser.</li>\r\n              <li>From there, you can select a standard MIDI file and it will be imported. Most MIDI files should work.\r\n              </li>\r\n              <li>Each MIDI track will be given its own track, regardless of polyphony.</li>\r\n              <li>Imported songs will automatically be quantized to the nearest 64th note boundary.</li>\r\n            </ul>\r\n\r\n            <h3>Tempo</h3>\r\n            <ul>\r\n              <li>You can change the tempo by entering a number at the top left of the page. Note that this will only\r\n                change the starting tempo of the song.</li>\r\n              <li>If you hold <strong>Shift</strong> and left click on the ruler on top of the grid, you will be\r\n                prompted to enter a tempo (BPM).</li>\r\n              <li>Tempo markers will automatically be assigned to the currently selected track. This is visible through\r\n                the color of the marker. Deleting the selected track will delete all associated tempo markers.</li>\r\n              <li>Holding <strong>Alt</strong> while placing a marker will allow for more freedom in placement.</li>\r\n              <li>Clicking on an existing tempo marker will allow you to modify it. By entering an empty string, you\r\n                will delete the marker.</li>\r\n              <li>Muting a track will also hide the tempo markers associated with that track.</li>\r\n              <li>Right-clicking a tempo marker will move the tempo marker to the currently selected track.</li>\r\n            </ul>\r\n\r\n            <h3>Misc</h3>\r\n            <ul>\r\n              <li>Click and hold on the piano keys to play them. <br><em>(Note: some instruments can only play certain\r\n                  keys)</em></li>\r\n              <li>Press <strong>Space</strong> to play your song. It will start from the marker.</li>\r\n              <li>Press <strong>Space</strong> again to pause your song. If you press <strong>Ctrl+Space</strong>, it\r\n                will stop the marker where it was.</li>\r\n              <li>Check the <strong>Loop</strong> checkbox to loop your song.</li>\r\n              <li>Click and drag on the timeline to move the marker.</li>\r\n              <li>If you hold <strong>ALT</strong> while dragging, the marker will move freely.</li>\r\n              <li>You can change instruments using the spinner at the top left of the page.</li>\r\n            </ul>\r\n\r\n            <h3>Planned Features</h3>\r\n            <ul>\r\n              <li>Jabchiel MML export.</li>\r\n              <li>MIDI export support.</li>\r\n              <li>Support for saving/loading \"projects\".</li>\r\n              <li>Undo/Redo functionality.</li>\r\n              <li>Better exported MML optimization.</li>\r\n              <li>Improved note rendering speed.</li>\r\n              <li>Other algorithm options for track splitting.</li>\r\n            </ul>\r\n\r\n            <p class=\"credits\">Credits: Made by Daderic</p>\r\n\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      hoverHelp: false,\r\n      isHelpVisible: true, // Initially visible when the page loads\r\n    };\r\n  },\r\n  methods: {\r\n    showHelp() {\r\n      this.isHelpVisible = true;\r\n    },\r\n    closeHelp() {\r\n      this.isHelpVisible = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.help-button {\r\n  position: fixed;\r\n  top: 14px;\r\n  right: 280px;\r\n  width: 34px;\r\n  height: 34px;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  background-color: white;\r\n  border-width: 2px;\r\n  border-style: solid;\r\n  font-size: 24px;\r\n  border-color: black;\r\n  font-weight: lighter;\r\n  color: black;\r\n  z-index: 1000;\r\n  box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.help-button span {\r\n  display: block;\r\n}\r\n\r\n.modal-background {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.help-modal {\r\n  background-color: white;\r\n  padding: 20px;\r\n  width: 500px;\r\n  max-height: 80%;\r\n  overflow-y: auto;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  justify-items: left;\r\n  justify-content: left;\r\n}\r\n\r\n.close-button {\r\n  position: sticky;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  float: right;\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to\r\n\r\n/* .fade-leave-active in <2.1.8 */\r\n  {\r\n  opacity: 0;\r\n}\r\n\r\n.help-content {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  text-align: left;\r\n}\r\n\r\n.help-content h1 {\r\n  text-align: center;\r\n}\r\n\r\n.credits {\r\n  margin-top: 20px;\r\n  font-style: italic;\r\n  text-align: center;\r\n}\r\n</style>\r\n","import { render } from \"./HelpMenu.vue?vue&type=template&id=15b86ff3&scoped=true\"\nimport script from \"./HelpMenu.vue?vue&type=script&lang=js\"\nexport * from \"./HelpMenu.vue?vue&type=script&lang=js\"\n\nimport \"./HelpMenu.vue?vue&type=style&index=0&id=15b86ff3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-15b86ff3\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div class=\"track-tab-container\" ref=\"tabContainerRef\">\r\n      <div v-for=\"(track, index) in tracks\" :key=\"track.id\"\r\n        :class=\"['track-tab', { selected: selectedTrackIndex === index }]\" @mousedown=\"selectTrack(index)\"\r\n        :style=\"{ backgroundColor: track.color }\" :title=\"track.name\">\r\n        <div class=\"tab-header\">\r\n          <input v-if=\"track.isEditingName\" v-model=\"track.name\" @blur=\"track.isEditingName = false\"\r\n            @keyup.enter=\"track.isEditingName = false\" class=\"track-name-input\" />\r\n          <span v-else @dblclick=\"track.isEditingName = true\" class=\"track-name\">\r\n            {{ track.name }}\r\n          </span>\r\n          <span class=\"mute-icon\" @mousedown=\"toggleMute($event, index)\" @contextmenu=\"$event.preventDefault()\">\r\n            {{ track.isMuted ? '🔇' : '🔊' }}\r\n          </span>\r\n          <button @click.stop=\"removeTrack(index)\" class=\"delete-btn\">✖</button>\r\n        </div>\r\n        <div v-if=\"selectedTrackIndex === index\" class=\"color-picker-container\">\r\n          <input type=\"color\" v-model=\"trackHexColor\" class=\"color-picker\" @input=\"updateTrackColor\" />\r\n        </div>\r\n      </div>\r\n\r\n      <button @click=\"addTrack\" class=\"add-track-btn\" :disabled=\"!canAddTrack\">\r\n        +\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick, reactive } from 'vue';\r\n\r\nexport const EventBus = reactive({});\r\n\r\nexport const tracks = ref([]);\r\nexport const selectedTrackIndex = ref(null);\r\nexport const selectedTrack = computed(() => tracks.value[selectedTrackIndex.value] || null);\r\nexport const trackHexColor = ref('#ffffff');\r\nexport default {\r\n  created() {\r\n    EventBus.addTrack = this.addTrack;\r\n  },\r\n  setup(props, { emit }) {\r\n    const containerWidth = ref(0);\r\n    const tabContainerRef = ref(null);\r\n\r\n    let focusedTrack = null;\r\n\r\n\r\n    const canAddTrack = computed(() => {\r\n      if (tracks.value.length > 15)\r\n        return false;\r\n      const minWidth = 75;\r\n      const totalWidth = tracks.value.length * minWidth;\r\n      return containerWidth.value - totalWidth - 50 > minWidth; // Limit to 16 tracks\r\n    });\r\n\r\n    const updateContainerWidth = () => {\r\n      if (tabContainerRef.value) {\r\n        containerWidth.value = tabContainerRef.value.clientWidth; // Get container width\r\n      }\r\n    };\r\n\r\n    const getRandomColor = () => {\r\n      const hue = Math.floor(Math.random() * 360);\r\n      const saturation = 75 + Math.random() * 25;\r\n      const lightness = 50 + Math.random() * 10;\r\n\r\n      const chroma = (1 - Math.abs(2 * lightness / 100 - 1)) * (saturation / 100);\r\n      const x = chroma * (1 - Math.abs(((hue / 60) % 2) - 1));\r\n      const m = lightness / 100 - chroma / 2;\r\n\r\n      let [r, g, b] =\r\n        hue < 60 ? [chroma, x, 0]\r\n          : hue < 120 ? [x, chroma, 0]\r\n            : hue < 180 ? [0, chroma, x]\r\n              : hue < 240 ? [0, x, chroma]\r\n                : hue < 300 ? [x, 0, chroma]\r\n                  : [chroma, 0, x];\r\n\r\n      r = Math.round((r + m) * 255);\r\n      g = Math.round((g + m) * 255);\r\n      b = Math.round((b + m) * 255);\r\n\r\n      // Return the color in hex format\r\n      return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n    };\r\n\r\n    const root = process.env.NODE_ENV === 'production' ? '../MabiMML/' : '../';\r\n\r\n    const addTrack = (pointerEvent = null, instr = null, color = null, name = null) => {\r\n      const newTrack = {\r\n        id: tracks.value.length + Date.now(),\r\n        name: name || `Track ${tracks.value.length + 1}`,\r\n        isMuted: false,\r\n        color: color || getRandomColor(),\r\n        isEditingName: false,\r\n        notes: [],\r\n        instrument: instr || { name: 'Lute', program: 0, min: 16, max: 88 },\r\n      };\r\n      tracks.value.push(newTrack);\r\n      selectTrack(tracks.value.length - 1);\r\n      emit('add-track', newTrack, tracks.value.length - 1);\r\n      return newTrack;\r\n    };\r\n\r\n    const removeTrack = (index) => {\r\n      if (tracks.value.length === 1) return;\r\n\r\n      let confirmation = true;\r\n      if (tracks.value[index].notes.length !== 0)\r\n        confirmation = confirm(`Are you sure you want to delete the track \"${tracks.value[index].name}\"? All notes belonging to this track will also be deleted.`);\r\n      if (!confirmation) return;\r\n\r\n      let trackClone = tracks.value[index];\r\n      tracks.value.splice(index, 1);\r\n\r\n      if (tracks.value.length === 0) {\r\n        selectedTrackIndex.value = null;\r\n        trackHexColor.value = '#ffffff'; // Reset color picker when no tracks are left\r\n      } else {\r\n        if (index === selectedTrackIndex.value) {\r\n          // If the removed track was selected, select the next available track\r\n          const newIndex = index < tracks.value.length ? index : index - 1;\r\n          selectedTrackIndex.value = newIndex;\r\n          trackHexColor.value = tracks.value[newIndex].color; // Update the color picker to the new selected track's color\r\n        } else if (selectedTrackIndex.value > index) {\r\n          selectedTrackIndex.value--;\r\n        }\r\n\r\n        // Update color picker for the currently selected track\r\n        if (selectedTrack.value) {\r\n          trackHexColor.value = selectedTrack.value.color;\r\n        }\r\n      }\r\n\r\n      emit('remove-track', trackClone, selectedTrack.value);\r\n    };\r\n\r\n\r\n    const selectTrack = (index) => {\r\n      selectedTrackIndex.value = index;\r\n      trackHexColor.value = tracks.value[index].color; // Update color picker when track is selected\r\n      emit('track-selected', tracks.value[index]);\r\n    };\r\n\r\n    const toggleMute = (event, index) => {\r\n      event.preventDefault();\r\n      if (event.button === 0) {\r\n        tracks.value[index].isMuted = !tracks.value[index].isMuted;\r\n        if (tracks.value[index].isMuted)\r\n          for (const note of tracks.value[index].notes) {\r\n            note.muted = true;\r\n          }\r\n        else {\r\n          for (const note of tracks.value[index].notes) {\r\n            note.muted = false;\r\n          }\r\n        }\r\n        emit('mute-track', index);\r\n      } else if (event.button === 2) {\r\n        focusedTrack = tracks.value[index] === focusedTrack ? null : tracks.value[index];\r\n        const doMute = focusedTrack !== null\r\n        tracks.value[index].isMuted = false;\r\n        for (const note of tracks.value[index].notes) {\r\n          note.muted = false;\r\n        }\r\n        for (const [idx, track] of tracks.value.entries()) {\r\n          if (track === tracks.value[index])\r\n            continue;\r\n          track.isMuted = doMute;\r\n          for (const note of track.notes) {\r\n            note.muted = doMute;\r\n          }\r\n          emit('mute-track', idx);\r\n        }\r\n        emit('mute-track', index);\r\n      }\r\n    };\r\n\r\n    const updateTrackColor = (event) => {\r\n      const newColor = event.target.value;\r\n      if (selectedTrack.value) {\r\n        selectedTrack.value.color = newColor;\r\n        trackHexColor.value = newColor; // Update hex color for the picker\r\n        for (const note of selectedTrack.value.notes) {\r\n          note.color = newColor;\r\n        }\r\n      }\r\n      emit('color-change', selectedTrack.value, newColor);\r\n    };\r\n\r\n    onMounted(() => {\r\n      addTrack(); // Always start with one track\r\n      nextTick(() => {\r\n        updateContainerWidth(); // Get initial container width\r\n      });\r\n      window.addEventListener('resize', updateContainerWidth);\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener('resize', updateContainerWidth);\r\n    });\r\n\r\n    return {\r\n      tracks,\r\n      selectedTrackIndex,\r\n      trackHexColor,\r\n      containerWidth,\r\n      addTrack,\r\n      removeTrack,\r\n      selectTrack,\r\n      toggleMute,\r\n      updateTrackColor,\r\n      selectedTrack,\r\n      canAddTrack,\r\n      tabContainerRef,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.track-tab-container {\r\n  display: flex;\r\n  align-items: flex-end;\r\n  max-width: 83%;\r\n  background-color: #f1f1f1;\r\n  flex-wrap: nowrap;\r\n  height: 50px;\r\n}\r\n\r\n.track-tab {\r\n  user-select: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: -10px;\r\n  flex-grow: 1;\r\n  min-width: 75px;\r\n  max-width: 200px;\r\n  height: 40px;\r\n  border: 2px solid #ccc;\r\n  border-radius: 8px 8px 0 0;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n  align-self: flex-end;\r\n  overflow: hidden;\r\n}\r\n\r\n.track-tab.selected {\r\n  padding-bottom: 10px;\r\n  z-index: 10;\r\n  border-bottom: none;\r\n}\r\n\r\n.tab-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  border-radius: 8px 8px 0 0;\r\n  font-weight: bold;\r\n  font-size: 1em;\r\n  color: white;\r\n}\r\n\r\n.track-name-input {\r\n  width: 100%;\r\n  font-size: 1em;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: white;\r\n  outline: none;\r\n}\r\n\r\n.track-name {\r\n  color: white;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.mute-icon {\r\n  font-size: 1.2em;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  color: white;\r\n}\r\n\r\n.delete-btn {\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: white;\r\n  font-size: 1.1em;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-track-btn {\r\n  user-select: none;\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: 2em;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  margin-left: 12px;\r\n  flex-shrink: 0;\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 5;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-track-btn:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.color-picker-container {}\r\n\r\n.color-picker {\r\n  margin-left: 10px;\r\n}\r\n\r\n.track-tab:hover::after {\r\n  content: attr(title);\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  white-space: nowrap;\r\n  z-index: 10;\r\n  margin-bottom: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.track-tab:hover::after {\r\n  opacity: 1;\r\n}\r\n</style>","import { render } from \"./Tracks.vue?vue&type=template&id=9809a5ba&scoped=true\"\nimport script from \"./Tracks.vue?vue&type=script&lang=js\"\nexport * from \"./Tracks.vue?vue&type=script&lang=js\"\n\nimport \"./Tracks.vue?vue&type=style&index=0&id=9809a5ba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9809a5ba\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"tempo-marker\" :style=\"{ left: left + 'px', visibility: visible }\" @mousedown=\"clickMarker\" @contextmenu.prevent=\"$event.preventDefault()\">\r\n        <div class=\"tempo-triangle\" :style=\"{ borderTop: '10px solid ' + color, visibility: visible }\"></div>\r\n        <div class=\"tempo-label\" :style=\"{ visibility: visible }\">T{{ tempo }}</div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        left: Number,\r\n        tempo: Number,\r\n        index: Number, // For identifying which marker to remove\r\n        color: String,\r\n        visible: String\r\n    },\r\n    emits: ['click'],\r\n    setup(props, { emit }) {\r\n        const clickMarker = (event) => {\r\n            emit('click', event, props.index);\r\n        };\r\n\r\n        return {\r\n            clickMarker,\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tempo-marker {\r\n    z-index: 1;\r\n    position: absolute;\r\n    bottom: 0;\r\n    transform: translateX(-50%);\r\n    cursor: pointer;\r\n    pointer-events: auto;\r\n    /* Allows clicking */\r\n}\r\n\r\n.tempo-triangle {\r\n    z-index: 1;\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 6px solid transparent;\r\n    border-right: 6px solid transparent;\r\n    border-top: 10px solid #333;\r\n    /* Dark grey color */\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.tempo-label {\r\n    z-index: 13;\r\n    position: absolute;\r\n    top: -20px;\r\n    /* Adjusts the label position above the triangle */\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: 12px;\r\n    background-color: #fff;\r\n    color: #333;\r\n    /* Dark grey text */\r\n    padding: 2px 4px;\r\n    border-radius: 3px;\r\n    white-space: nowrap;\r\n    border: 1px solid #ccc;\r\n    /* Optional border to highlight the label */\r\n}\r\n</style>","import { render } from \"./TempoMarker.vue?vue&type=template&id=3f9a78ee&scoped=true\"\nimport script from \"./TempoMarker.vue?vue&type=script&lang=js\"\nexport * from \"./TempoMarker.vue?vue&type=script&lang=js\"\n\nimport \"./TempoMarker.vue?vue&type=style&index=0&id=3f9a78ee&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3f9a78ee\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <button class=\"export-button\" @click=\"showExport\">\r\n            Export\r\n        </button>\r\n        <div v-if=\"isExportVisible\" class=\"modal-background\" @click=\"hideExport\">\r\n            <transition name=\"fade\">\r\n                <div class=\"export-modal\" @click.stop>\r\n                    <button class=\"close-button\" @click=\"hideExport\">X</button>\r\n                    <div class=\"export-content\">\r\n                        <h1>Export</h1>\r\n                        <div class=\"flex-row\">\r\n                            <!-- Left Panel: Track List -->\r\n                            <div class=\"left-panel\">\r\n                                <div class=\"track-header\">Track</div>\r\n                                <div class=\"track-list\">\r\n                                    <label v-for=\"(track, index) in tracks\" :key=\"index\">\r\n                                        <input type=\"checkbox\" :checked=\"isSelected(track)\"\r\n                                            :disabled=\"(!isSelected(track) && selectedTracks.length >= maxSelectable) || trackHasPolyphony(track)\"\r\n                                            @change=\"toggleTrack(track)\" />\r\n                                        {{ track.name }} : {{ trackHasPolyphony(track) ? '-' : getRenderedTrackTokens(track, index).rendered.length + ' char(s)'}} {{ trackHasPolyphony(track) ? '*' : '' }}\r\n                                    </label>\r\n                                </div>\r\n                                <button class=\"clear-btn\" @click=\"clearSelection\">Clear Selection</button>\r\n                            </div>\r\n\r\n                            <!-- Right Panel: Info + Output -->\r\n                            <div class=\"right-panel\">\r\n\r\n                                <!-- Output Settings -->\r\n                                <div class=\"output-settings\">\r\n                                    <strong>Output Settings</strong>\r\n                                    <li><input type=\"radio\" name=\"format\" checked /> Mabinogi MML@ Format </li>\r\n                                    <!-- <li><input type=\"radio\" name=\"format\" /> Sitaraba MML Template </li>\r\n                                    <li><input type=\"radio\" name=\"format\" /> MabiMML Compatible Format </li> -->\r\n                                    <li><input type=\"checkbox\" v-model=\"sortTracksByLength\" checked /> Sort tracks by\r\n                                        text length. </li>\r\n                                    <li><input type=\"checkbox\" v-model=\"excludeSongPart\" /> Exclude Song Part </li>\r\n                                    <li><input type=\"checkbox\" v-model=\"jabSplit\" /> Split Score for Jabs (WIP) </li>\r\n                                    <li>\r\n                                        <select id=\"rank-select\" :disabled=\"!jabSplit\" v-model=\"selectedRank\"\r\n                                            @change=\"changeComposeRank\">\r\n                                            <option v-for=\"(rank, index) in composeRanks\" :key=\"index\" :value=\"rank\">\r\n                                                Rank: {{ rank.name }} {{ [rank.melody, rank.harmony1, rank.harmony2] }}\r\n                                            </option>\r\n                                        </select>\r\n                                    </li>\r\n                                </div>\r\n\r\n                                <!-- Information -->\r\n                                <div class=\"info-box\">\r\n                                    <strong>Information</strong>\r\n                                    <div v-for=\"(score, index) in generatedScores\" :key=\"index\" class=\"score-block\">\r\n                                        <p>\r\n                                            <strong>Score {{ index + 1 }}:</strong> Rank {{ score.rank }}\r\n                                            <button @click=\"copyScore(index)\">📋</button>\r\n                                        </p>\r\n                                        <ul>\r\n                                            <li v-for=\"(part, pIndex) in score.parts\" :key=\"pIndex\">\r\n                                                Part {{ pIndex + 1 }}: {{ part.length }} char(s)\r\n                                                <button @click=\"copyScorePiece(index, pIndex)\">📋</button>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { consoleColors } from 'spessasynth_lib';\r\n\r\nexport default {\r\n    props: {\r\n        tracks: Array,\r\n        generateTokens: Function,\r\n        renderTokens: Function,\r\n        copyToClipboard: Function\r\n    },\r\n    data() {\r\n        return {\r\n            isExportVisible: false,\r\n            selectedTracks: [],\r\n            excludeSongPart: false,\r\n            jabSplit: false,\r\n            sortTracksByLength: true,\r\n            composeRanks: [\r\n                { name: 'Impossible', melody: Infinity, harmony1: Infinity, harmony2: Infinity},\r\n                { name: '1', melody: 1200, harmony1: 800, harmony2: 500 },\r\n                { name: '2', melody: 1150, harmony1: 700, harmony2: 400 },\r\n                { name: '3', melody: 1100, harmony1: 600, harmony2: 350 },\r\n                { name: '4', melody: 1050, harmony1: 550, harmony2: 300 },\r\n                { name: '5', melody: 1000, harmony1: 500, harmony2: 250 },\r\n                { name: '6', melody: 950, harmony1: 450, harmony2: 200 },\r\n                { name: '7', melody: 900, harmony1: 400, harmony2: 200 },\r\n                { name: '8', melody: 850, harmony1: 400, harmony2: 200 },\r\n                { name: '9', melody: 800, harmony1: 350, harmony2: 200 },\r\n                { name: 'A', melody: 750, harmony1: 300, harmony2: 200 },\r\n                { name: 'B', melody: 700, harmony1: 300, harmony2: 200 },\r\n                { name: 'C', melody: 650, harmony1: 250, harmony2: 200 },\r\n                { name: 'D', melody: 600, harmony1: 250, harmony2: 150 },\r\n                { name: 'E', melody: 500, harmony1: 200, harmony2: 100 },\r\n                { name: 'F', melody: 400, harmony1: 200, harmony2: 100 },\r\n                { name: 'Practice', melody: 200, harmony1: 100, harmony2: 0 },\r\n            ],\r\n            selectedRank: { name: '1', melody: 1200, harmony1: 800, harmony2: 500 },\r\n            selectedRankIndex: 1,\r\n            generatedScores: [],\r\n            tokenCache: new Map()\r\n        };\r\n    },\r\n    computed: {\r\n        maxSelectable() {\r\n            return this.excludeSongPart ? 3 : 4;\r\n        }\r\n    },\r\n    watch: {\r\n        excludeSongPart(newVal) {\r\n            const limit = newVal ? 3 : 4;\r\n            if (this.selectedTracks.length > limit) {\r\n                this.selectedTracks.splice(limit);\r\n            }\r\n\r\n            if (newVal) {\r\n                this.composeRanks = [\r\n                    { name: 'Impossible', melody: Infinity, harmony1: Infinity, harmony2: Infinity},\r\n                    { name: '1*', melody: 1600, harmony1: 1200, harmony2: 900 },\r\n                    { name: '2*', melody: 1533, harmony1: 1083, harmony2: 783 },\r\n                    { name: '3*', melody: 1466, harmony1: 966, harmony2: 716 },\r\n                    { name: '4*', melody: 1400, harmony1: 900, harmony2: 650 },\r\n                    { name: '5*', melody: 1333, harmony1: 833, harmony2: 583 },\r\n                    { name: '6*', melody: 1266, harmony1: 766, harmony2: 516 },\r\n                    { name: '7*', melody: 1200, harmony1: 700, harmony2: 500 },\r\n                    { name: '8*', melody: 1133, harmony1: 683, harmony2: 483 },\r\n                    { name: '9*', melody: 1066, harmony1: 616, harmony2: 466 },\r\n                    { name: 'A*', melody: 1000, harmony1: 550, harmony2: 450 },\r\n                    { name: 'B*', melody: 933, harmony1: 533, harmony2: 433 },\r\n                    { name: 'C*', melody: 866, harmony1: 466, harmony2: 416 },\r\n                    { name: 'D*', melody: 800, harmony1: 450, harmony2: 350 },\r\n                    { name: 'E*', melody: 666, harmony1: 366, harmony2: 233 },\r\n                    { name: 'F*', melody: 553, harmony1: 333, harmony2: 233 },\r\n                    { name: 'Practice*', melody: 266, harmony1: 166, harmony2: 66 },\r\n                ];\r\n            } else {\r\n                this.composeRanks = [\r\n                    { name: 'Impossible', melody: Infinity, harmony1: Infinity, harmony2: Infinity},\r\n                    { name: '1', melody: 1200, harmony1: 800, harmony2: 500 },\r\n                    { name: '2', melody: 1150, harmony1: 700, harmony2: 400 },\r\n                    { name: '3', melody: 1100, harmony1: 600, harmony2: 350 },\r\n                    { name: '4', melody: 1050, harmony1: 550, harmony2: 300 },\r\n                    { name: '5', melody: 1000, harmony1: 500, harmony2: 250 },\r\n                    { name: '6', melody: 950, harmony1: 450, harmony2: 200 },\r\n                    { name: '7', melody: 900, harmony1: 400, harmony2: 200 },\r\n                    { name: '8', melody: 850, harmony1: 400, harmony2: 200 },\r\n                    { name: '9', melody: 800, harmony1: 350, harmony2: 200 },\r\n                    { name: 'A', melody: 750, harmony1: 300, harmony2: 200 },\r\n                    { name: 'B', melody: 700, harmony1: 300, harmony2: 200 },\r\n                    { name: 'C', melody: 650, harmony1: 250, harmony2: 200 },\r\n                    { name: 'D', melody: 600, harmony1: 250, harmony2: 150 },\r\n                    { name: 'E', melody: 500, harmony1: 200, harmony2: 100 },\r\n                    { name: 'F', melody: 400, harmony1: 200, harmony2: 100 },\r\n                    { name: 'Practice', melody: 200, harmony1: 100, harmony2: 0 },\r\n                ];\r\n            }\r\n            this.selectedRank = this.composeRanks[this.selectedRankIndex];\r\n            this.generateScores();\r\n\r\n        },\r\n        jabSplit() {\r\n            this.generateScores();\r\n        },\r\n        selectedRank() {\r\n            this.generateScores();\r\n        },\r\n        sortTracksByLength() {\r\n            this.generateScores();\r\n        },\r\n        tracks: {\r\n            handler() {\r\n                this.tokenCache.clear();\r\n                this.clearSelection();\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    methods: {\r\n        isSelected(track) {\r\n            return this.selectedTracks.includes(track);\r\n        },\r\n        toggleTrack(track) {\r\n            const index = this.selectedTracks.indexOf(track);\r\n\r\n            if (index !== -1) {\r\n                this.selectedTracks.splice(index, 1);\r\n            } else {\r\n                if (this.selectedTracks.length < this.maxSelectable) {\r\n                    this.selectedTracks.push(track);\r\n                }\r\n            }\r\n\r\n            this.generateScores();\r\n\r\n        },\r\n        trackHasPolyphony(track) {\r\n            track.notes.sort((a,b) => {return b.start - a.start; });\r\n            for (let i = 0; i < track.notes.length; ++i) {\r\n                const rightNote = track.notes[i];\r\n                const leftNote = i + 1 < track.notes.length ? track.notes[i + 1] : null;\r\n                if (leftNote === null) return false;\r\n                // Scan from left to right. The next note should not have a left value <= note.end\r\n                if (rightNote.start < leftNote.end) {\r\n                    rightNote.highlighted = true;\r\n                    // rightNote.color = 'hsla(212, 100%, 50%, 0.5)';\r\n                    leftNote.highlighted = true;\r\n                    // leftNote.color = 'hsla(212, 100%, 50%, 0.5)';\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        clearSelection() {\r\n            this.selectedTracks = [];\r\n            this.generateScores();\r\n        },\r\n        changeComposeRank() {\r\n            this.selectedRankIndex = this.composeRanks.indexOf(this.selectedRank);\r\n        },\r\n        showExport() {\r\n            this.isExportVisible = true;\r\n        },\r\n        hideExport() {\r\n            this.isExportVisible = false;\r\n        },\r\n        getRenderedTrackTokens(track) {\r\n            if (this.tokenCache.has(track)) return this.tokenCache.get(track);\r\n            if (this.trackHasPolyphony(track)) return { tokens: [], rendered: '' };\r\n            const result = this.generateTokens(track)[0];\r\n            //const rendered = this.renderTokens(tokens);\r\n            //const result = { tokens, rendered };\r\n            this.tokenCache.set(track, result);\r\n            return result;\r\n        },\r\n        splitTokensByLimit(tokens, limit) {\r\n            const chunks = [];\r\n            let current = [];\r\n            let length = 0;\r\n\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                const next = [...current, tokens[i]];\r\n                const rendered = this.renderTokens(next);\r\n                const renderedLength = rendered.length;\r\n\r\n                if (renderedLength > limit) {\r\n                    if (current.length) {\r\n                        chunks.push(current);\r\n                        current = [tokens[i]];\r\n                        length = this.renderTokens(current).length;\r\n                    } else {\r\n                        // Single token too big: force split anyway\r\n                        chunks.push([tokens[i]]);\r\n                        current = [];\r\n                        length = 0;\r\n                    }\r\n                } else {\r\n                    current.push(tokens[i]);\r\n                    length = renderedLength;\r\n                }\r\n            }\r\n\r\n            if (current.length) {\r\n                chunks.push(current);\r\n            }\r\n\r\n            return chunks;\r\n        },\r\n        generateScores() {\r\n            const selected = [...this.selectedTracks];\r\n\r\n            if (this.sortTracksByLength) {\r\n                selected.sort((a, b) => {\r\n                    const aIndex = this.tracks.indexOf(a);\r\n                    const bIndex = this.tracks.indexOf(b);\r\n                    return this.getRenderedTrackTokens(b, bIndex).rendered.length - this.getRenderedTrackTokens(a, aIndex).rendered.length;\r\n                });\r\n            }\r\n\r\n            const numParts = this.excludeSongPart ? 3 : 4;\r\n            const tokenized = selected.map(track => {\r\n                const index = this.tracks.indexOf(track);\r\n                return this.getRenderedTrackTokens(track, index).tokens;\r\n            });\r\n            const rendered = selected.map(track => {\r\n                const index = this.tracks.indexOf(track);\r\n                return this.getRenderedTrackTokens(track, index).rendered;\r\n            });\r\n\r\n            const availableRanks = [...this.composeRanks].reverse(); // lowest to highest\r\n            this.generatedScores = [];\r\n\r\n            if (!this.jabSplit) {\r\n                // Attempt to fit the entire track set into the lowest viable rank\r\n                for (const rank of availableRanks) {\r\n                    const limits = [rank.melody, rank.harmony1, rank.harmony2, rank.melody].slice(0, numParts);\r\n                    const fits = rendered.every((mml, i) => mml.length <= limits[i]);\r\n\r\n                    if (fits) {\r\n                        this.generatedScores.push({ parts: rendered.slice(0, numParts), rank: rank.name });\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                const rank = this.selectedRank;\r\n                const limits = [rank.melody, rank.harmony1, rank.harmony2, rank.melody].slice(0, numParts);\r\n                const allSplitTokens = tokenized.map((tokens, i) => {\r\n                    return this.splitTokensByLimit(tokens, limits[i]);\r\n                });\r\n\r\n                const maxChunks = Math.max(...allSplitTokens.map(chunks => chunks.length));\r\n\r\n                for (let chunkIndex = 0; chunkIndex < maxChunks; chunkIndex++) {\r\n                    const scoreParts = [];\r\n\r\n                    for (let i = 0; i < numParts; i++) {\r\n                        const chunk = allSplitTokens[i]?.[chunkIndex] || [];\r\n                        const renderedChunk = this.renderTokens(chunk);\r\n                        scoreParts.push(renderedChunk);\r\n                    }\r\n\r\n                    const allEmpty = scoreParts.every(str => str === '');\r\n                    if (allEmpty) break;\r\n\r\n                    this.generatedScores.push({ parts: scoreParts, rank: rank.name });\r\n                }\r\n\r\n            }\r\n        },\r\n        copyScore(index) {\r\n            const score = this.generatedScores[index];\r\n            const joined = `MML@${score.parts.join(',')};`;\r\n            this.copyToClipboard(joined);\r\n        },\r\n        copyScorePiece(scoreIndex, pieceIndex) {\r\n            const score = this.generatedScores[scoreIndex];\r\n            this.copyToClipboard(score.parts[pieceIndex]);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.export-button {\r\n    position: fixed;\r\n    top: 50px;\r\n    right: 160px;\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: #0078d4;\r\n    color: white;\r\n    z-index: 1000;\r\n    outline: none;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n    width: 105px;\r\n}\r\n\r\n.export-modal {\r\n    background-color: white;\r\n    padding: 20px;\r\n    width: 500px;\r\n    max-height: 80%;\r\n    overflow-y: auto;\r\n    border-radius: 8px;\r\n    position: relative;\r\n    justify-items: left;\r\n    justify-content: left;\r\n}\r\n\r\n.modal-background {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 1000;\r\n}\r\n\r\n.close-button {\r\n    position: sticky;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: none;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    float: right;\r\n}\r\n\r\n.export-content {\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n    text-align: left;\r\n    width: 100%;\r\n}\r\n\r\n.flex-row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 20px;\r\n}\r\n\r\n.left-panel {\r\n    width: 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\n.track-header {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.track-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    margin-bottom: auto;\r\n}\r\n\r\n.clear-btn {\r\n    margin-top: 10px;\r\n    align-self: flex-start;\r\n}\r\n\r\n.right-panel {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n}\r\n\r\n.info-box,\r\n.output-settings {\r\n    background-color: #fff;\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n}\r\n\r\nli {\r\n    list-style: none;\r\n}\r\n</style>","import { render } from \"./ExportMenu.vue?vue&type=template&id=054bb656&scoped=true\"\nimport script from \"./ExportMenu.vue?vue&type=script&lang=js\"\nexport * from \"./ExportMenu.vue?vue&type=script&lang=js\"\n\nimport \"./ExportMenu.vue?vue&type=style&index=0&id=054bb656&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-054bb656\"]])\n\nexport default __exports__","import { render } from \"./PianoRoll.vue?vue&type=template&id=cf4f587e&scoped=true\"\nimport script from \"./PianoRoll.vue?vue&type=script&lang=js\"\nexport * from \"./PianoRoll.vue?vue&type=script&lang=js\"\n\nimport \"./PianoRoll.vue?vue&type=style&index=0&id=cf4f587e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cf4f587e\"]])\n\nexport default __exports__","import { render } from \"./Sequencer.vue?vue&type=template&id=2e49d91b&scoped=true\"\nimport script from \"./Sequencer.vue?vue&type=script&lang=js\"\nexport * from \"./Sequencer.vue?vue&type=script&lang=js\"\n\nimport \"./Sequencer.vue?vue&type=style&index=0&id=2e49d91b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e49d91b\"]])\n\nexport default __exports__","import { render } from \"./PatternEditor.vue?vue&type=template&id=f2d0b530&scoped=true\"\nimport script from \"./PatternEditor.vue?vue&type=script&lang=js\"\nexport * from \"./PatternEditor.vue?vue&type=script&lang=js\"\n\nimport \"./PatternEditor.vue?vue&type=style&index=0&id=f2d0b530&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f2d0b530\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=03d7e477\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=03d7e477&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport HelpMenu from './components/HelpMenu.vue'\n\ncreateApp(App).mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/MabiMML/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmusic_sequencer\"] = self[\"webpackChunkmusic_sequencer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(93104); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_PatternEditor","class","ref","_createElementVNode","_hoisted_2","_component_PianoRoll","key","style","for","type","accept","_hoisted_21","_hoisted_22","onClick","_cache","args","$setup","playSequence","_createTextVNode","$event","loopSong","_hoisted_3","autoScrollSong","_component_ExportMenu","tracks","generateTokens","genTokensOutright","renderTokens","copyToClipboard","_component_HelpMenu","showSuccessNotification","_hoisted_4","_toDisplayString","successNotificationText","_createCommentVNode","showFailedNotification","_hoisted_5","failedNotificationText","_component_Tracks","onTrackSelected","handleTrackSelected","onAddTrack","handleAddTrack","onRemoveTrack","handleRemoveTrack","onMuteTrack","handleMuteTrack","onColorChange","updateColor","_hoisted_6","_hoisted_7","_hoisted_8","selectedInstrument","onChange","changeInstrument","_Fragment","_renderList","instruments","instrument","index","value","name","_hoisted_9","_hoisted_10","_hoisted_11","tempo","min","max","number","trackify","parseMMLFromClipboard","importMidi","_hoisted_12","_hoisted_13","_hoisted_14","gridWidth","displayName","width","_hoisted_15","_hoisted_16","currentNoteVolume","_hoisted_17","_hoisted_18","octaves","octave","_hoisted_19","notes","slice","reverse","note","_normalizeClass","isBlack","onMousedown","startNote","onMouseover","mouseOverNote","onMouseup","endNote","onMouseleave","mouseLeaveNote","_normalizeStyle","instrKeyMin","instrKeyMax","_hoisted_20","handleRulerClick","gridSpan","zoomScalar","Math","ceil","left","markerReplayPosition","markerPosition","_hoisted_23","tempoMarkers","tempoMarker","_createBlock","_component_TempoMarker","color","visible","muted","clickTempoMarker","_withModifiers","_hoisted_24","height","scrollX","windowWidth","onMousemove","tryRemoveNote","handleGridClick","onContextmenu","_ctx","startNoteRemove","onWheel","handleGridScroll","_hoisted_25","isSelecting","rectangleStyle","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","$options","showHelp","$data","hoverHelp","isHelpVisible","closeHelp","_Transition","default","_withCtx","_hoisted_35","_","data","methods","this","__exports__","track","selected","selectedTrackIndex","selectTrack","backgroundColor","title","isEditingName","onBlur","onKeyup","_withKeys","onDblclick","toggleMute","preventDefault","isMuted","removeTrack","trackHexColor","onInput","updateTrackColor","addTrack","disabled","canAddTrack","EventBus","reactive","selectedTrack","computed","created","setup","props","emit","containerWidth","tabContainerRef","focusedTrack","length","minWidth","totalWidth","updateContainerWidth","clientWidth","getRandomColor","hue","floor","random","saturation","lightness","chroma","abs","x","m","r","g","b","round","toString","pointerEvent","instr","newTrack","Date","now","program","push","confirmation","confirm","trackClone","splice","newIndex","event","button","doMute","idx","entries","newColor","target","onMounted","nextTick","window","addEventListener","onBeforeUnmount","removeEventListener","$props","visibility","clickMarker","borderTop","Number","String","emits","checked","showExport","isExportVisible","hideExport","isSelected","selectedTracks","maxSelectable","trackHasPolyphony","toggleTrack","getRenderedTrackTokens","rendered","clearSelection","sortTracksByLength","excludeSongPart","jabSplit","selectedRank","changeComposeRank","composeRanks","rank","melody","harmony1","harmony2","generatedScores","score","copyScore","parts","part","pIndex","copyScorePiece","Array","Function","Infinity","selectedRankIndex","tokenCache","Map","watch","newVal","limit","generateScores","handler","clear","deep","includes","indexOf","sort","a","start","i","rightNote","leftNote","end","highlighted","has","get","tokens","result","set","splitTokensByLimit","chunks","current","next","renderedLength","aIndex","bIndex","numParts","tokenized","map","availableRanks","limits","allSplitTokens","maxChunks","chunkIndex","scoreParts","chunk","renderedChunk","allEmpty","every","str","fits","mml","joined","join","scoreIndex","pieceIndex","components","HelpMenu","Tracks","TempoMarker","ExportMenu","root","pianoRoll","grid","synth","context","isMouseDown","midiBuilder","gridCanvas","innerWidth","currentNoteLength","gridHeight","notesInGrid","draggingNotes","resizingNotes","volumeChangingNotes","startX","startY","gridWrapper","selectedNotes","currentX","currentY","ruler","seq","isPlaying","top","border","backgroundStyle","background","ctx","drawCanvasGrid","screenLeft","screenRight","zoom","gridwidth","clearRect","bgSpacing","fillStyle","fillRect","strokeStyle","lineWidth","horizontalSpacing","hCount","beginPath","y","moveTo","lineTo","stroke","verticalSpacing","vStart","vEnd","barSpacing","bStart","bEnd","visibleNotes","leftLimit","rightLimit","noteLeft","noteRight","noteWidth","h","hexToRgba","volume","strokeRect","semiCircleRadius","centerX","centerY","arc","PI","fill","barWidth","font","textAlign","textBaseline","fullText","truncatedText","truncateTextToWidth","fillText","text","maxWidth","ellipsis","measureText","truncated","noteNames","blackNotes","noteClipboard","watchEffect","maxRightPosition","document","querySelector","scrollLeft","async","oldTrack","idsToRemove","Set","n","filter","marker","parentTrack","trackIndex","loadSoundFont","response","fetch","soundFontArrayBuffer","arrayBuffer","error","console","handleBeforeUnload","message","returnValue","gridWrapperVar","updateRuler","handleKeyPress","AudioContext","audioWorklet","addModule","Synthetizer","destination","undefined","chorusEnabled","reverbEnabled","setMainVolume","setLogLevel","isReady","getContext","alpha","shiftKey","placeTempoMarker","startMarkerDrag","granularity","altKey","clientX","getBoundingClientRect","enteredTempo","prompt","isNaN","stopPlaying","updateMarkerPos","onMarkerDrag","onMarkerDragEnd","markerInterval","markerStartPos","startTempo","tempoIdx","startMarkerAnim","doMarkerAnim","timeChange","tick","currentTime","loop","clearInterval","setInterval","noteLengths","widthCache","getOptimalNoteLengths","outString","mmlWidth","val1","val2","charLength","best","getMinCharLengthWidth","values","noteCombination","targetWidth","amount","compressedNotes","lengths","Int32Array","charLens","j","INF","dp","Uint32Array","prev","last","noteValue","noteChars","candidate","minChars","stopMarkerAnim","fromClick","rulerRect","newPos","gridSnap","removeNote","code","ctrlKey","selectNote","showSuccessMessage","movementValue","noteName","pitch","baseId","trackColor","scroll","idOffset","newNotes","newLeft","newNote","unshift","selectedSet","forEach","stop","programChange","tempMidiBuilder","MIDIBuilder","resume","notesAdded","audibleTracks","addNewTrack","containingTrack","channel","noteStartTime","noteDuration","markerTime","startTime","duration","addEvent","addNoteOn","addNoteOff","tempoStartTime","tempoChangeTime","addSetTempo","flush","writeMIDIFile","Sequencer","binary","skipToFirstNoteOn","addOnSongEndedEvent","play","noteOn","noteOff","timeout","setTimeout","showFailureMessage","fromTrack","startPositions","startDrag","placeNote","initialLength","draggingNote","clientY","onDrag","endDrag","outOfBounds","newPositions","offGridNote","noteSnapScale","noteDelta","startPos","dx","dy","newTop","startResizeData","startResize","onResize","endResize","allInBounds","newWidths","startData","newWidth","startingNoteVolumes","startVolumeChange","onVolumeChange","endVolumeChange","newVolume","startSelection","startPlacingNote","deltaY","sign","z1","l","z2","rect","onSelectionMove","onSelectionEnd","checkIntersections","selectionRect","right","bottom","itemRect","intersects","rect1","rect2","scrollTop","existingNote","find","resizeHandleWidth","volumeHandleCenter","squaredDistToCenter","radius","log","notesList","trackWrappers","trackWrapper","originalColor","hex","replace","split","char","parseInt","substring","navigator","clipboard","writeText","then","catch","err","optimDijkstra","GraphNode","constructor","textValue","implicitOct","implicitLen","implicitVol","parent","children","accCost","depth","addChild","child","stateKey","len","oct","vol","bestCost","startNode","worklist","Heap","priority","endNode","node","size","u","pop","d","token","tl","td","dotted","lengthString","suffixLengthString","octaveString","volumeString","octaveDiff","repeat","pieces","currentNode","getTrackTokens","toLowerCase","useTies","prevNoteEnd","noteLength","endsWith","latestTempoMarkers","token1","token2","gap","restLengths","prevRestEnd","restLength","t","testStr","renderTrackTokens","tokenList","output","activeDefault","activeDotted","tok","outputText","singleTrack","tracksToConsider","allTokens","getEnharmonicEquivalent","accidental","noteIndex","patterns","LENGTH","NOTE","REST","TIE","VOLUME","TEMPO","OCTAVE","tokenizeMML","mmlString","regex","Object","match","exec","mmlToNewTrack","mmlTokens","newTokenList","builderX","previousNote","tokenLength","nextNote","noteOctave","notePitch","startsWith","sharp","flat","Ldotted","tokenOctave","tokenVolume","tokenTempo","lengthNum","parseMMLNotation","segments","toUpperCase","segment","parseMabiNotation","mabiString","lines","tokenizedSections","line","trim","section","parseMML","hiddenFileInput","getElementById","click","handleFileSelect","file","files","reader","FileReader","onload","e","parsedMIDI","MIDI","ticksPerBeat","timeDivision","fileTempo","tempoChanges","at","firstAddedTrackIndex","trackName","activeNotes","sustainBuffer","pairedNotes","pedalDown","midiMessage","status","messageStatusByte","messageData","ticks","velocity","endTicks","findIndex","startTicks","originalEndTicks","wasDown","noteVolume","tempoMarkersTemp","previousTempo","readAsArrayBuffer","textFromClipboard","readText","buttons","fromList","oldSize","PianoRoll","scrollContainer","PatternEditor","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","notFulfilled","fulfilled","keys","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","obj","prop","prototype","hasOwnProperty","p","baseURI","self","location","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}