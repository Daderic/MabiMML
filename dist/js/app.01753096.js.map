{"version":3,"file":"js/app.01753096.js","mappings":"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","sources":["webpack://music-sequencer/./src/App.vue","webpack://music-sequencer/./src/components/PatternEditor.vue","webpack://music-sequencer/./src/components/PianoRoll.vue","webpack://music-sequencer/./src/components/HelpMenu.vue","webpack://music-sequencer/./src/components/HelpMenu.vue?d290","webpack://music-sequencer/./src/components/Tracks.vue","webpack://music-sequencer/./src/components/Tracks.vue?6cb4","webpack://music-sequencer/./src/components/TempoMarker.vue","webpack://music-sequencer/./src/components/TempoMarker.vue?dda8","webpack://music-sequencer/./src/components/PianoRoll.vue?b086","webpack://music-sequencer/./src/components/Sequencer.vue","webpack://music-sequencer/./src/components/PatternEditor.vue?415c","webpack://music-sequencer/./src/App.vue?7ccd","webpack://music-sequencer/./src/main.js","webpack://music-sequencer/webpack/bootstrap","webpack://music-sequencer/webpack/runtime/chunk loaded","webpack://music-sequencer/webpack/runtime/compat get default export","webpack://music-sequencer/webpack/runtime/define property getters","webpack://music-sequencer/webpack/runtime/global","webpack://music-sequencer/webpack/runtime/hasOwnProperty shorthand","webpack://music-sequencer/webpack/runtime/publicPath","webpack://music-sequencer/webpack/runtime/jsonp chunk loading","webpack://music-sequencer/webpack/startup"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <div id=\"app\">\n    <PatternEditor />\n  </div>\n</template>\n\n<script>\nimport PatternEditor from './components/PatternEditor.vue';\nimport PianoRoll from './components/PianoRoll.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    PatternEditor\n  }\n}\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n  }\n</style>\n","<template>\r\n    <div class=\"pattern-editor\">\r\n        <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n            <PianoRoll />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport PianoRoll from './PianoRoll.vue';\r\nimport Sequencer from './Sequencer.vue';\r\n\r\nexport default {\r\n    name: 'PatternEditor',\r\n    components: {\r\n        PianoRoll\r\n    },\r\n    setup() {\r\n        const scrollContainer = ref(null);\r\n\r\n        return {\r\n            scrollContainer\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.pattern-editor {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: auto;\r\n    display: flex;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"piano-container\">\r\n        <button class=\"play-button\" @click=\"playSequence\">Play Sequence</button>\r\n        <label class=\"loop-wrapper\">\r\n            Loop:\r\n            <input type=\"checkbox\" v-model=\"loopSong\"/>\r\n        </label>\r\n        <label class=\"scroll-wrapper\">\r\n            Auto-scroll:\r\n            <input type=\"checkbox\" v-model=\"autoScrollSong\"/>\r\n        </label>\r\n        <HelpMenu />\r\n        <div v-if=\"showSuccessNotification\" class=\"copyNotification\">\r\n            {{ successNotificationText }}\r\n        </div>\r\n        <div v-if=\"showFailedNotification\" class=\"copyNotification\" style=\"background-color: #d44;\">\r\n            {{ failedNotificationText }}\r\n        </div>\r\n        \r\n        <Tracks @track-selected=\"handleTrackSelected\" @add-track=\"handleAddTrack\" @remove-track=\"handleRemoveTrack\" @mute-track=\"handleMuteTrack\" @color-change=\"updateColor\" />\r\n        <div class=\"controls\">\r\n            <div class=\"instrument-selector\">\r\n                <label for=\"instrument-select\">Select Instrument: </label>\r\n                <select id=\"instrument-select\" v-model=\"selectedInstrument\" @change=\"changeInstrument\">\r\n                    <option v-for=\"(instrument, index) in instruments\" :key=\"index\" :value=\"instrument\">\r\n                        {{ instrument.name }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"tempo-selector\">\r\n                <label for=\"tempo-select\">Tempo: </label>\r\n                <input type=\"number\" id=\"tempo-select\" v-model.number=\"tempo\" min=\"40\" max=\"240\">\r\n            </div>\r\n            <button class=\"track-splitter\" @click=\"trackify\">Split Track</button>\r\n            <button class=\"MML-converter\" @click=\"genMML\" style=\"margin-left: 10px;\">Gen MML</button>\r\n            <button @click=\"parseMMLFromClipboard\" style=\"margin-left : 10px;\">Import MML From Clipboard</button>\r\n            <div class=\"grid-division-selector\">\r\n                <label for=\"grid-select\" style=\"padding-left: 10px\">Grid Spacing: </label>\r\n                <select id=\"grid-select\" v-model=\"gridWidth\">\r\n                    <option v-for=\"(value) in [{displayName: '16ths', width: 256/16}, {displayName: '12ths', width: 256/12}]\" :key=\"value.displayName\" :value=\"value.width\">\r\n                        {{ value.displayName }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <label style=\"padding: 10px;\"> {{ 'Current Note Volume: ' + currentNoteVolume }} </label>\r\n        </div>\r\n        <div class=\"piano-roll\" ref=\"pianoRoll\">\r\n            <div class=\"piano-keys\">\r\n                <!-- Generate piano keys for multiple octaves -->\r\n                <div v-for=\"octave in octaves\" :key=\"octave\" class=\"octave\">\r\n                    <div class=\"keys-wrapper\">\r\n                        <!-- Keys should be in reverse order to have higher notes at the top -->\r\n                        <div v-for=\"(note, index) in notes.slice().reverse()\" :key=\"note.name\"\r\n                            :class=\"['piano-key', note.isBlack ? 'black-key' : 'white-key']\"\r\n                            @mousedown=\"startNote(0, note, octave)\"\r\n                            @mouseover=\"mouseOverNote(0, note, octave)\"\r\n                            @mouseup=\"endNote(0, note, octave)\"\r\n                            @mouseleave=\"mouseLeaveNote(0, note, octave)\"\r\n                            :style=\"{\r\n                                zIndex: note.isBlack ? 1 : 0,\r\n                                background: note.index + 12*octave < instrKeyMin || note.index + 12*octave > instrKeyMax ? '#d44' : (note.isBlack ? '#000' : '#fff')\r\n                                }\">\r\n                            {{ note.name + octave }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"ruler\" ref=\"ruler\" \r\n                @mousedown=\"handleRulerClick\"\r\n                :style=\"{\r\n                    width: 'calc( 10% + ' + gridSpan*zoomScalar + 'px )',\r\n                    background: `repeating-linear-gradient(\r\n                        90deg,\r\n                        #bbb,\r\n                        #bbb 2px,\r\n                        #eee 2px,\r\n                        #eee ${256*zoomScalar}px\r\n                    )`\r\n                }\">\r\n                <div\r\n                    v-for=\"index in Math.ceil((gridSpan / 256))\"\r\n                    :key=\"index\"\r\n                    class=\"ruler-tick-label\"\r\n                    :style=\"{ left: `calc(${(index - 1) * 256*zoomScalar}px)` }\"\r\n                    >\r\n                    {{ index }}\r\n                </div>\r\n                <div class=\"marker-replay-triangle\" :style=\"{ left: markerReplayPosition*zoomScalar + 'px' }\"></div>\r\n                <div class=\"marker-wrapper\" :style=\"{ left: markerPosition*zoomScalar + 'px' }\">\r\n                    <div class=\"marker-triangle\"></div>\r\n                    <div class=\"marker-line\"></div>\r\n                </div>\r\n\r\n                <TempoMarker \r\n                    v-for=\"(tempoMarker, index) in tempoMarkers\"\r\n                    :key=\"tempoMarker.left\"\r\n                    :left=\"(tempoMarker.left)*zoomScalar+1\"\r\n                    :tempo=\"tempoMarker.tempo\"\r\n                    :index=\"index\"\r\n                    :color=\"tempoMarker.color\"\r\n                    :visible=\"tempoMarker.muted ? 'hidden' : 'visible'\"\r\n                    @click=\"clickTempoMarker\"\r\n                />\r\n\r\n            </div>\r\n            <div class=\"grid-wrapper\">\r\n                <div class=\"grid\" ref=\"grid\" :style=\"{ width: gridSpan*zoomScalar + 'px', background: backgroundStyle.background }\" @mousedown.left=\"handleGridClick\" @contextmenu.prevent=\"startNoteRemove\" @wheel=\"handleGridScroll\">\r\n                    <div v-for=\"note in notesInGrid\" :key=\"note.id\" class=\"note\"\r\n                        :style=\"{\r\n                            left: note.left*zoomScalar + 'px',\r\n                            top: note.top + 'px',\r\n                            width: (note.width + 1) * zoomScalar - 1 + 'px',\r\n                            height: gridHeight + 'px',\r\n                            visibility: note.muted ? 'hidden' : 'visible',\r\n                            pointerEvents: note.muted ? 'none' : 'auto',\r\n                            backgroundColor: hexToRgba(note.color, (note.volume+1)/15),//note.highlighted ? 'rgba(255, 0, 0, 0.5)' : 'rgba(0, 120, 255, 0.5)'\r\n                            border: `${note.highlighted ? 2 : 1}px solid ${note.highlighted ? 'white' : note.color}`,\r\n                        }\"\r\n                        @mousedown.left=\"startDrag(note, $event)\"\r\n                        @mouseup.left=\"endDrag\"\r\n                        @mousedown.right.prevent=\"removeNote(note, false, $event)\"\r\n                        @mouseover=\"removeNote(note, false, $event)\">\r\n                        <div class=\"resize-handle\" @mousedown=\"startResize(note, $event)\"></div>\r\n                        <div class=\"volume-handle\" @mousedown=\"startVolumeChange(note, $event)\"></div>\r\n                        {{ note.name + `(${note.volume})` }} <!-- + ` ${noteWidthToMML(note.width + 1)}` -->\r\n                    </div>\r\n                    <div v-if=\"isSelecting\" class=\"selection-rect\" :style=\"rectangleStyle\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watchEffect, computed, onBeforeUnmount } from 'vue';\r\nimport { Synthetizer, MIDIBuilder, writeMIDIFile, Sequencer, consoleColors, SpessaSynthLogging } from \"spessasynth_lib\";\r\nimport HelpMenu from '@/components/HelpMenu.vue'\r\nimport Tracks from '@/components/Tracks.vue'\r\nimport { selectedTrack, tracks, selectedTrackIndex, trackHexColor, EventBus } from '@/components/Tracks.vue'\r\nimport { _ } from 'core-js';\r\nimport TempoMarker from './TempoMarker.vue';\r\n\r\nexport default {\r\n    name: 'PianoRoll',\r\n    components: {\r\n        HelpMenu, Tracks, TempoMarker\r\n    },\r\n    setup() {\r\n        const root = process.env.NODE_ENV === 'production' ? '../MabiMML/' : '../';\r\n        const pianoRoll = ref(null);\r\n        const grid = ref(null);\r\n        const synth = ref(null);\r\n        const context = ref(null);\r\n        const isMouseDown = ref(false);\r\n        const selectedInstrument = ref({ name: 'Lute', program: 0, min: 16, max: 88 });\r\n        const midiBuilder = ref(null);\r\n        const tempo = ref(120);\r\n        const loopSong = ref(false);\r\n        const autoScrollSong = ref(false);\r\n\r\n        const instruments = ref([\r\n            { name: 'Lute', program: 0, min: 16, max: 88 },\r\n            { name: 'Ukulele', program: 1, min: 16, max: 88 },\r\n            { name: 'Mandolin', program: 2, min: 16, max: 88 },\r\n            { name: 'Whistle', program: 3, min: 12, max: 88 },\r\n            { name: 'Roncadora', program: 4, min: 12, max: 88 },\r\n            { name: 'Flute', program: 5, min: 15, max: 88 },\r\n            { name: 'Chalumeau', program: 6, min: 16, max: 88 },\r\n            { name: 'Tuba', program: 18, min: 12, max: 95 },\r\n            { name: 'Lyre', program: 19, min: 9, max: 80 },\r\n            { name: 'Electric Guitar', program: 20, min: 4, max: 99 },\r\n            { name: 'Piano', program: 21, min: 0, max: 84 },\r\n            { name: 'Violin', program: 22, min: 16, max: 59 },\r\n            { name: 'Cello', program: 23, min: 0, max: 46 },\r\n            { name: 'Harp', program: 24, min: 9, max: 83 },\r\n            { name: 'Tuned Violin', program: 25, min: 16, max: 59 },\r\n            { name: 'Tuned Cello', program: 26, min: 0, max: 46 },\r\n            { name: 'Drum Kit', program: 27, min: 29, max: 53 },\r\n            { name: 'Festival Lute', program: 50, min: 16, max: 88 },\r\n            { name: 'Festival Ukulele', program: 51, min: 16, max: 88 },\r\n            { name: 'Festival Mandolin', program: 52, min: 16, max: 88 },\r\n            { name: 'Fest/Tuned Whistle', program: 53, min: 12, max: 83 },\r\n            { name: 'Fest/Tuned Flute', program: 54, min: 15, max: 83 },\r\n            { name: 'Bass Drum', program: 66, min: 12, max: 84 },\r\n            { name: 'Snare Drum', program: 67, min: 12, max: 84 },\r\n            { name: 'Cymbals', program: 68, min: 12, max: 84 },\r\n            { name: 'Hand Chimes', program: 77, min: 9, max: 80 },\r\n            { name: 'Female Chorus', program: 110, min: 19, max: 48 },\r\n            { name: 'Male Chorus', program: 100, min: 14, max: 46 },\r\n            { name: 'Male Voice', program: 120, min: 17, max: 49 },\r\n            { name: 'Female Voice', program: 121, min: 12, max: 45 },\r\n        ]);\r\n\r\n\r\n        let currentNoteLength = ref(16);\r\n        let currentNoteVolume = ref(8);\r\n        const gridWidth = ref(256/16); // This makes the base size an x-th note\r\n        const gridHeight = 24;\r\n        const notesInGrid = ref([]);\r\n        const draggingNotes = ref([]);\r\n        const resizingNotes = ref([]);\r\n        const volumeChangingNotes = ref([]);\r\n        const startX = ref(0);\r\n        const startY = ref(0);\r\n        const startLeft = ref(0);\r\n        const startTop = ref(0);\r\n        const startWidth = ref(0);\r\n        const gridSpan = ref(window.innerWidth);\r\n\r\n        const scrollX = ref(0);\r\n\r\n        const selectedNotes = ref([]);\r\n        const isSelecting = ref(false);\r\n        const currentX = ref(0);\r\n        const currentY = ref(0);\r\n\r\n        const ruler = ref(null);\r\n        const markerPosition = ref(0);\r\n        const markerReplayPosition = ref(0);\r\n        const tempoMarkers = ref([]);\r\n        const seq = ref(null);\r\n        const isPlaying = ref(false);\r\n\r\n        const zoomScalar = ref(1);\r\n\r\n        const rectangleStyle = computed(() => ({\r\n            left: `${Math.min(startX.value, currentX.value)}px`,\r\n            top: `${Math.min(startY.value, currentY.value)}px`,\r\n            width: `${Math.abs(currentX.value - startX.value)}px`,\r\n            height: `${Math.abs(currentY.value - startY.value)}px`,\r\n            backgroundColor: 'rgba(0, 100, 255, 0.3)', // Transparent blue\r\n            border: '1px solid rgba(0, 100, 255, 0.5)' // Optional border\r\n        }));\r\n\r\n        const backgroundStyle = computed(() => ({\r\n            background: `repeating-linear-gradient( /*This is the horizontal lines*/\r\n                0deg,\r\n                #bbb,\r\n                #bbb 2px,\r\n                transparent 2px,\r\n                transparent 24px\r\n            ),\r\n            repeating-linear-gradient( /*This is the Bar line*/\r\n                90deg,\r\n                #777,\r\n                #777 2px,\r\n                transparent 2px,\r\n                transparent ${256 * zoomScalar.value}px\r\n            ),\r\n            repeating-linear-gradient( /*This is the vertical lines*/\r\n                90deg,\r\n                #c0c0c0,\r\n                #c0c0c0 2px,\r\n                transparent 2px,\r\n                transparent ${gridWidth.value * zoomScalar.value}px\r\n            ),\r\n            repeating-linear-gradient(/*This is the background colors*/\r\n                90deg,\r\n                #e0e0e0,\r\n                #e0e0e0 ${64*zoomScalar.value}px,\r\n                #ccc ${64*zoomScalar.value}px,\r\n                #ccc ${128*zoomScalar.value}px\r\n            )`\r\n        }));\r\n\r\n        // Left-hand Piano notes, not grid notes\r\n        const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\r\n        const blackNotes = ['C#', 'D#', 'F#', 'G#', 'A#'];\r\n        const notes = ref(noteNames.map((name, index) => ({\r\n            name: name,\r\n            index: index,\r\n            isBlack: blackNotes.includes(name)\r\n        })));\r\n        const octaves = ref([0, 1, 2, 3, 4, 5, 6, 7, 8]);\r\n\r\n        const showSuccessNotification = ref(false);\r\n        const successNotificationText = ref('');\r\n        const showFailedNotification = ref(false);\r\n        const failedNotificationText = ref('');\r\n\r\n        const instrKeyMin = ref(16);\r\n        const instrKeyMax = ref(88);\r\n\r\n        let noteClipboard = [];\r\n\r\n        watchEffect(() => {\r\n            const maxRightPosition = Math.max(...notesInGrid.value.map(note => note.left + note.width), 0);\r\n            gridSpan.value = Math.max((maxRightPosition + window.innerWidth/zoomScalar.value), window.innerWidth/zoomScalar.value);\r\n        });\r\n\r\n        const addTrack = (instr, color, name) => {\r\n            return EventBus.addTrack(null, instr, color, name);\r\n        };\r\n\r\n        const handleTrackSelected = (track) => {\r\n            //console.log(newInstrument);\r\n            //console.log(track);\r\n            selectedInstrument.value = track.instrument;\r\n            selectedTrackIndex.value = tracks.value.indexOf(track);\r\n            changeInstrument();\r\n        };\r\n\r\n        const handleAddTrack = async (newTrack, index) => {\r\n            // if (synth.value)\r\n            //     await synth.value.soundfontManager.addNewSoundFont(newTrack.instrument, `main${index}`, index);\r\n        };\r\n\r\n        const handleRemoveTrack = async (oldTrack, newTrack) => {\r\n            for (const note of oldTrack.notes) {\r\n                removeNote(note, true);\r\n            }\r\n\r\n            tempoMarkers.value = tempoMarkers.value.filter(marker => marker.parentTrack.id !== oldTrack.id);\r\n\r\n            // if (selectedTrackIndex.value === newTrack.index)\r\n            //     selectedInstrument.value = newTrack.instrument;\r\n            // if (synth.value)\r\n            //     await synth.value.soundfontManager.deleteSoundFont(`main${index}`);\r\n        };\r\n\r\n        const handleMuteTrack = async (trackIndex) => {\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            const track = tracks.value[trackIndex];\r\n            for (const tempoMarker of tempoMarkers.value) {\r\n                if (tempoMarker.parentTrack === track) {\r\n                    tempoMarker.muted = track.isMuted;\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        const updateColor = (track, newColor) => {\r\n            for (const marker of tempoMarkers.value) {\r\n                if (marker.parentTrack === track) {\r\n                    marker.color = newColor;\r\n                }\r\n            }\r\n        };\r\n\r\n        const loadSoundFont = async () => {\r\n            try {\r\n                const response = await fetch(root + 'soundfonts/mabi_instruments_high_quality.sf3');\r\n                const soundFontArrayBuffer = await response.arrayBuffer();\r\n                return soundFontArrayBuffer;\r\n            } catch (error) {\r\n                console.error(\"Failed to load SoundFont:\", error);\r\n                return null;\r\n            }\r\n        };\r\n\r\n        const handleBeforeUnload = (event) => {\r\n            const message = 'Leave Site? Changes you made may not be saved.';\r\n            event.preventDefault();\r\n            event.returnValue = message;\r\n            return 'message';\r\n        }\r\n\r\n        onMounted(async () => {\r\n            try {\r\n\r\n                const gridWrapper = document.querySelector('.grid-wrapper');\r\n                if (gridWrapper) {\r\n                    gridWrapper.addEventListener('scroll', updateRuler);\r\n                    updateRuler();\r\n                }\r\n\r\n                document.addEventListener('keydown', handleKeyPress);\r\n                window.addEventListener('beforeunload', handleBeforeUnload);\r\n                // Setting up audio context\r\n                context.value = new AudioContext();\r\n\r\n                await context.value.audioWorklet.addModule(root + \"worklet_processor.min.js\");\r\n                const soundFontArrayBuffer = await loadSoundFont();\r\n                if (!soundFontArrayBuffer) return;\r\n                synth.value = new Synthetizer(context.value.destination, soundFontArrayBuffer, true, undefined, {chorusEnabled: false, reverbEnabled: false});\r\n                synth.value.setMainVolume(2);\r\n                synth.value.setLogLevel(false, false, false, false);\r\n                await synth.value.isReady;\r\n\r\n            } catch (error) {\r\n                console.error(\"Error initializing sequencer or synthesizer:\", error);\r\n            }\r\n        });\r\n\r\n        onBeforeUnmount(() => {\r\n            window.removeEventListener('beforeunload', handleBeforeUnload);\r\n        });\r\n\r\n        const handleRulerClick = (event) => {\r\n            if (event.button === 0) {\r\n                if (!event.shiftKey) {\r\n                    startMarkerDrag(event);\r\n                } else {\r\n                    placeTempoMarker(event);\r\n                }\r\n            }\r\n        };\r\n\r\n        const placeTempoMarker = (event) => {\r\n            const granularity = event.altKey ? gridWidth.value/4 : gridWidth.value;\r\n            const left = Math.round((event.clientX - ruler.value.getBoundingClientRect().left) / granularity / zoomScalar.value) * granularity;\r\n            const enteredTempo = prompt(\"Enter tempo (BPM):\", \"120\");\r\n            //console.log(enteredTempo);\r\n            if (enteredTempo !== null && !isNaN(enteredTempo) && enteredTempo !== '') {\r\n                tempoMarkers.value.push({\r\n                    left: left,\r\n                    tempo: Number(enteredTempo),\r\n                    color: selectedTrack.value.color,\r\n                    parentTrack: selectedTrack.value,\r\n                    muted: false\r\n                });\r\n            }\r\n        };\r\n\r\n        const clickTempoMarker = (event, index) => {\r\n            event.preventDefault();\r\n            //console.log(event);\r\n            if (event.button !== 0)\r\n                return;\r\n            const enteredTempo = prompt(\"Enter tempo (BPM):\", \"120\");\r\n            if (enteredTempo === null)\r\n                return;\r\n            if (!isNaN(enteredTempo) && enteredTempo !== '') {\r\n                tempoMarkers.value[index].tempo = Number(enteredTempo);\r\n            } else {\r\n                tempoMarkers.value.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        const startMarkerDrag = (event) => {\r\n            if (isPlaying) {\r\n                stopPlaying();\r\n            }\r\n            updateMarkerPos(event.clientX, event.altKey, true);\r\n            document.addEventListener('mousemove', onMarkerDrag);\r\n            document.addEventListener('mouseup', onMarkerDragEnd);\r\n        };\r\n\r\n        const onMarkerDrag = (event) => {\r\n            updateMarkerPos(event.clientX, event.altKey, true);\r\n        };\r\n\r\n        const onMarkerDragEnd = async () => {\r\n            document.removeEventListener('mousemove', onMarkerDrag);\r\n            document.removeEventListener('mouseup', onMarkerDragEnd);\r\n        };\r\n\r\n        let markerInterval;\r\n        let markerStartPos;\r\n        let startTempo;\r\n        let tempoIdx = 0;\r\n\r\n        async function startMarkerAnim() {\r\n            isPlaying.value = true;\r\n            markerStartPos = markerPosition.value;\r\n            startTempo = tempo.value;\r\n            tempoMarkers.value.sort((a, b) => {a.left - b.left});\r\n            doMarkerAnim();\r\n        }\r\n\r\n        function doMarkerAnim() {\r\n            let timeChange = 0;\r\n            tempoIdx = 0;\r\n            startTempo = tempo.value;\r\n            let marker = tempoMarkers.value[tempoIdx];\r\n            while (marker && marker.left < markerPosition.value) { // Skip ahead to proper first marker\r\n                if (markerPosition.value > 0) {\r\n                    startTempo = marker.tempo;\r\n                }\r\n                tempoIdx++;\r\n                marker = tempoMarkers.value[tempoIdx];\r\n            }\r\n            const gridWrapper = document.querySelector('.grid-wrapper');\r\n            function tick() {\r\n                if (markerPosition.value < 0) {\r\n                    startTempo = tempo.value;\r\n                    tempoIdx = 0;\r\n                    timeChange = 0;\r\n                    markerStartPos = 0;\r\n                    markerPosition.value = 0;\r\n                }\r\n                marker = tempoMarkers.value[tempoIdx];\r\n                while (marker && marker.muted) { // Skip ahead to the next unmuted marker\r\n                    tempoIdx++;\r\n                    marker = tempoMarkers.value[tempoIdx];\r\n                }\r\n                //console.log(marker);\r\n                if (marker && marker !== null) {\r\n                    if (markerPosition.value >= marker.left) {\r\n                        tempoIdx++;\r\n                        markerStartPos = markerPosition.value;\r\n                        timeChange = seq.value.currentTime;\r\n                        startTempo = marker.tempo;\r\n                    }\r\n                }\r\n\r\n                markerPosition.value = ((seq.value.currentTime - timeChange) * 4 * 16 * startTempo / 60) + markerStartPos;\r\n                if (autoScrollSong.value) {\r\n                    gridWrapper.scrollLeft = markerPosition.value * zoomScalar.value - screen.width * 0.66;\r\n                }\r\n                if (seq.value && !loopSong.value)\r\n                    seq.value.loop = loopSong.value;\r\n            }\r\n            clearInterval(markerInterval);\r\n            tick();\r\n            markerInterval = setInterval(tick, 5);\r\n        }\r\n\r\n        function noteWidthToMML(width) {\r\n            let outString = '';\r\n            //256 pixels is 1 bar (4 beats); 64 pixels is 1 beat in 4/4\r\n            let mmlWidth = width;\r\n            let noteLengths = [];\r\n            for (let i = 1; i <= 64; ++i) {\r\n              if (i < 12 || i % 12 === 0 || i % 16 === 0) {\r\n\r\n                  let val1 = Math.round(256 / i * 100);\r\n                  let val2 = Math.round(256 / i * 150);\r\n                \r\n                  noteLengths.push({\r\n                      length: val2,\r\n                      name: 'L' + i + '.'\r\n                  });\r\n                  noteLengths.push({\r\n                      length: val1,\r\n                      name: 'L' + i\r\n                  });\r\n              }\r\n            }\r\n            let result = getClosestWidth(noteLengths, mmlWidth);\r\n            outString = result.noteCombination.map(note => note.name).join('&');\r\n            return outString;\r\n        }\r\n\r\n        function getClosestWidth(notes, targetWidth) {\r\n            let amount = Math.round(targetWidth * 100);\r\n\r\n            const dp = new Array(amount + 1).fill(Infinity);\r\n            dp[0] = 0;\r\n\r\n            const usedNotes = new Array(amount + 1).fill(-1);   \r\n\r\n            for (let i = 1; i <= amount; i++) {\r\n                for (const note of notes) {\r\n                    const noteValue = note.length;\r\n                    if (i >= noteValue && dp[i - noteValue] + 1 < dp[i]) {\r\n                        dp[i] = dp[i - noteValue] + 1;\r\n                        usedNotes[i] = note;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (dp[amount] === Infinity) {\r\n                return { minNotes: null, noteCombination: []};\r\n            }\r\n\r\n            const result = []\r\n            let currentAmount = amount;\r\n            while (currentAmount > 0) {\r\n                const note = usedNotes[currentAmount];\r\n                result.push(note);\r\n                currentAmount -= note.length;\r\n            }\r\n\r\n            return { minNotes: dp[amount], noteCombination: result };\r\n\r\n        }\r\n\r\n        const stopMarkerAnim = () => {\r\n            clearInterval(markerInterval);\r\n            isPlaying.value = false;\r\n        }\r\n\r\n        const updateMarkerPos = (clientX, altKey, fromClick) => {\r\n            if (ruler.value) {\r\n                const rulerRect = ruler.value.getBoundingClientRect();\r\n                let newPos = Math.round((clientX - rulerRect.left)/zoomScalar.value / (gridWidth.value/4)) * (gridWidth.value/4);\r\n                let gridSnap = gridWidth.value * (zoomScalar.value <= 0.5 ? 64/gridWidth.value : 1);\r\n\r\n                if (!altKey) {\r\n                    newPos = Math.round(newPos / (gridSnap)) * gridSnap;\r\n                }\r\n\r\n                newPos = Math.max(0, Math.min(gridSpan.value, newPos));\r\n\r\n                markerPosition.value = newPos;\r\n                if (fromClick) {\r\n                    markerReplayPosition.value = newPos;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        function handleKeyPress(event) {\r\n            if (selectedTrack.value.isEditingName)\r\n                return;\r\n            if (event.key === 'Backspace' || event.key === 'Delete') {\r\n                for (const note of selectedNotes.value) {\r\n                    removeNote(note, true);\r\n                }\r\n                \r\n                if (isPlaying.value)\r\n                    playSequence();\r\n            }\r\n            if (event.code === 'Space') {\r\n                event.preventDefault();\r\n                if (isPlaying.value) {\r\n                    stopPlaying();\r\n                    if (!event.ctrlKey) {\r\n                        markerPosition.value = markerReplayPosition.value;\r\n                    }\r\n                } else {\r\n                    playSequence();\r\n                }\r\n            } else if (event.key === 'a' && event.ctrlKey && !selectedTrack.value.isEditingName) {\r\n                event.preventDefault();\r\n                for (const note of notesInGrid.value) {\r\n                    selectNote(note);\r\n                }\r\n                \r\n                showSuccessMessage(`Selected ${selectedNotes.value.length} notes!`, 1000);\r\n            } else if (event.key === 'ArrowUp') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 12 : 1;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (note.top - gridHeight * movementValue < -0) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.top -= gridHeight * movementValue\r\n                        const number = (1284-(note.top/2))/144;\r\n                        const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                        note.name = noteName;\r\n                        note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowDown') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 12 : 1;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (note.top + gridHeight * movementValue >= octaves.value.length * gridHeight * 12) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.top += gridHeight * movementValue\r\n                        const number = (1284-(note.top/2))/144;\r\n                        const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                        note.name = noteName;\r\n                        note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowLeft') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 1 : 4;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (Math.round((note.left - gridWidth.value / movementValue)*1000)/1000 < 0) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.left = Math.round((note.left - gridWidth.value / movementValue)*1000)/1000;\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowRight') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 1 : 4;\r\n                    for (const note of selectedNotes.value) {\r\n                        note.left = Math.round((note.left + gridWidth.value / movementValue)*1000)/1000;\r\n                    }\r\n                }\r\n            } else if (event.key === 'c' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Copy selected notes to some \"clipboard\".\r\n                noteClipboard = [];\r\n                for (const note of selectedNotes.value) {\r\n                    noteClipboard.push(note);\r\n                }\r\n\r\n                showSuccessMessage(`Copied ${noteClipboard.length} note${noteClipboard.length > 1 ? 's' : ''} to the clipboard!`, 1000);\r\n            } else if (event.key === 'x' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Copy and delete selected notes to some \"clipboard\".\r\n                noteClipboard = [];\r\n                for (const note of selectedNotes.value) {\r\n                    noteClipboard.push(note);\r\n                    removeNote(note, true);\r\n                }\r\n                showSuccessMessage(`Cut ${noteClipboard.length} note${noteClipboard.length > 1 ? 's' : ''} and put them in the clipboard!`, 1000);\r\n            } else if (event.key === 'v' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Paste selected notes from \"clipboard\" into the selected track.\r\n                clearSelection();\r\n                for (const note of noteClipboard) {\r\n                    const newNote = {\r\n                        id: notesInGrid.value.length + Date.now(),\r\n                        name: note.name,\r\n                        left: Math.round(Math.round((note.left + scrollX.value/zoomScalar.value)*gridWidth.value/4)*4/gridWidth.value),\r\n                        top: note.top,\r\n                        pitch: note.pitch,\r\n                        width: note.width,\r\n                        length: note.length,\r\n                        highlighted: true,\r\n                        color: selectedTrack.value.color,\r\n                        start: note.start,\r\n                        end: note.end,\r\n                        volume: note.volume,\r\n                        muted: false,\r\n                        track: selectedTrack.value\r\n                    };\r\n                    selectedNotes.value.push(newNote);\r\n                    notesInGrid.value.push(newNote);\r\n                    newNote.track.notes.unshift(newNote);\r\n                }\r\n                showSuccessMessage(`Pasted ${noteClipboard.length} notes from the clipboard!`, 1000);\r\n            } else if (event.key === 't' && selectedNotes.value.length > 0) {\r\n                for (const track of tracks.value) {\r\n                    track.notes = track.notes.filter((note) => { return !selectedNotes.value.includes(note); });\r\n                }\r\n                for (const note of selectedNotes.value) {\r\n                    note.track = selectedTrack.value;\r\n                    note.color = selectedTrack.value.color;\r\n                    selectedTrack.value.notes.unshift(note);\r\n                }\r\n                showSuccessMessage(`Moved ${selectedNotes.value.length} notes into track \"${selectedTrack.value.name}\"!`, 1000);\r\n            }\r\n        }\r\n\r\n        function updateRuler() {\r\n            const gridWrapper = document.querySelector('.grid-wrapper');\r\n            const ruler = document.querySelector('.ruler');\r\n            if (gridWrapper && ruler) {\r\n                scrollX.value = gridWrapper.scrollLeft;\r\n                ruler.style.left = -scrollX.value + 'px'; // Adjust ruler's left position\r\n            }\r\n        }\r\n\r\n        function stopPlaying() {\r\n            if (seq.value)\r\n                seq.value.stop();\r\n            stopMarkerAnim();\r\n            synth.value.programChange(0, selectedInstrument.value.program);\r\n        }\r\n\r\n        const playSequence = async (fromClick = null) => {\r\n            try {\r\n                if (fromClick && isPlaying.value) {\r\n                    stopPlaying();\r\n                    markerPosition.value = markerReplayPosition.value;\r\n                    return;\r\n                }\r\n                midiBuilder.value = new MIDIBuilder(\"untitled\", 480, tempo.value);\r\n                //midiBuilder.value.addEvent(0, 0, 0xC0, [selectedInstrument.value.program]);\r\n                \r\n                await context.value.resume();\r\n                if (!synth.value) return;\r\n\r\n                let notesAdded = 0;\r\n\r\n                let audibleTracks = [];\r\n\r\n                for (const track of tracks.value) {\r\n                    if (!track.isMuted) {\r\n                        audibleTracks.push(track);\r\n                        midiBuilder.value.addNewTrack(track.name + tracks.value.indexOf(track));\r\n                    }\r\n                }\r\n\r\n                notesInGrid.value.forEach(note => {\r\n                    if (!note.muted && note.left + note.width >= markerPosition.value) {\r\n\r\n                        // Code to get the note's parent track\r\n                        let containingTrack = null;\r\n                        for (const track of tracks.value) {\r\n                            if (track.notes.some(n => n.id === note.id)) {\r\n                                containingTrack = track;\r\n                            }\r\n                        }\r\n                        const trackIndex = audibleTracks.indexOf(containingTrack);\r\n                        const channel = trackIndex;//trackIndex;\r\n                        const pitch = note.pitch;\r\n                        // Conversion from pixels to time.\r\n                        const noteStartTime = note.left/16*120;\r\n                        const noteDuration = (note.width+1)/16*120;\r\n                        const markerTime = markerPosition.value/16*120;\r\n                        const startTime = Math.max(noteStartTime, markerTime)-markerTime;\r\n                        const duration = Math.min(noteDuration, noteStartTime+noteDuration-markerTime);\r\n                        const volume = Math.max(0, Math.min(127, (note.volume + 1) * 8 - 1));\r\n\r\n                        \r\n\r\n                        midiBuilder.value.addEvent(startTime, trackIndex, 0xC0 | (channel & 0x0F), [containingTrack.instrument.program]);\r\n                        midiBuilder.value.addNoteOn(startTime, trackIndex, channel, pitch, volume);\r\n                        midiBuilder.value.addNoteOff(startTime + duration - 1, trackIndex, channel, pitch);\r\n                        notesAdded++;\r\n                    }\r\n                });\r\n\r\n                for (const tempoMarker of tempoMarkers.value) {\r\n                    if (tempoMarker.parentTrack.isMuted)\r\n                        continue;\r\n                    const tempoStartTime = tempoMarker.left/16*120;\r\n                    const markerTime = markerPosition.value/16*120;\r\n                    const tempoChangeTime = Math.max(tempoStartTime, markerTime)-markerTime;\r\n                    midiBuilder.value.addSetTempo(tempoChangeTime, tempoMarker.tempo);\r\n                }\r\n\r\n                if (notesAdded === 0) {\r\n                    return;\r\n                }\r\n\r\n                midiBuilder.value.flush();\r\n\r\n                const b = await(writeMIDIFile(midiBuilder.value));\r\n                seq.value = new Sequencer([{binary: b}], synth.value);\r\n                seq.value.skipToFirstNoteOn = false;\r\n                seq.value.loop = loopSong.value && markerPosition.value === 0;\r\n                await synth.value.isReady;\r\n                seq.value.addOnSongEndedEvent(() => {\r\n                    stopMarkerAnim();\r\n                    markerPosition.value = markerReplayPosition.value;\r\n                    if (loopSong.value && !seq.value.loop) {\r\n                        markerPosition.value = 0;\r\n                        playSequence();\r\n                    }\r\n                }, 'test2');\r\n                await seq.value.play();\r\n                startMarkerAnim();\r\n            } catch (error) {\r\n                console.error(\"Error playing sequence: \", error);\r\n            }\r\n        };\r\n\r\n        const startNote = async (channel, note, octave) => {\r\n            try {\r\n                context.value.resume();\r\n                await synth.value.isReady;\r\n                synth.value.noteOn(channel, note.index + 12 * (octave + 1), Math.max(0, Math.min(127, (currentNoteVolume.value + 1) * 8 - 1)), false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        const endNote = async (channel, note, octave) => {\r\n            try {\r\n                await synth.value.isReady;\r\n                if (synth.value) {\r\n                    synth.value.noteOff(channel, note.index + 12 * (octave + 1));\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        const showSuccessMessage = (text, timeout=2000) => {\r\n            successNotificationText.value = text;\r\n            showSuccessNotification.value = true; // Show notification\r\n\r\n            // Hide notification after 2 seconds\r\n            setTimeout(() => {\r\n                showSuccessNotification.value = false;\r\n            }, timeout);\r\n        };\r\n\r\n        const showFailureMessage = (text, timeout=2000) => {\r\n            failedNotificationText.value = text;\r\n            showFailedNotification.value = true; // Show notification\r\n\r\n            // Hide notification after 2 seconds\r\n            setTimeout(() => {\r\n                showFailedNotification.value = false;\r\n            }, timeout);\r\n        };\r\n\r\n        const mouseOverNote = (channel, note, octave) => {\r\n            if (isMouseDown.value && draggingNotes.value.length === 0 && resizingNotes.value.length === 0) {\r\n                startNote(channel, note, octave);\r\n            }\r\n        };\r\n\r\n        const mouseLeaveNote = (channel, note, octave) => {\r\n            if (isMouseDown.value && draggingNotes.value.length === 0 && resizingNotes.value.length === 0) {\r\n                endNote(channel, note, octave);\r\n            }\r\n        };\r\n\r\n        const changeInstrument = async () => {\r\n            if (synth.value && selectedInstrument.value) {\r\n                selectedTrack.value.instrument = selectedInstrument.value;\r\n                \r\n                instrKeyMin.value = selectedInstrument.value.min;\r\n                instrKeyMax.value = selectedInstrument.value.max;\r\n\r\n                synth.value.programChange(0, selectedInstrument.value.program);\r\n                if (isPlaying.value)\r\n                    playSequence();\r\n\r\n                await synth.value.isReady;\r\n            }\r\n        };\r\n\r\n        const startPositions = new Map();\r\n\r\n        const startDrag = (note, event, placeNote = true) => {\r\n            // console.log(note.id);\r\n            event.preventDefault();\r\n            if (event.button === 0 && resizingNotes.value.length === 0 && volumeChangingNotes.value.length === 0) { // Ensure we're dragging with left button\r\n                if (note.highlighted) {\r\n                    draggingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    clearSelection();\r\n                    draggingNotes.value.push(note);\r\n                }\r\n\r\n                if (event.shiftKey && placeNote) {\r\n                    for (const note of draggingNotes.value) {\r\n                        const newNote = {\r\n                            id: notesInGrid.value.length + Date.now(),\r\n                            name: note.name,\r\n                            left: note.left,\r\n                            top: note.top,\r\n                            pitch: note.pitch,\r\n                            width: note.width,\r\n                            length: note.length,\r\n                            highlighted: false,\r\n                            color: note.color,\r\n                            start: note.start,\r\n                            end: note.end,\r\n                            volume: note.volume,\r\n                            muted: false,\r\n                            track: note.track\r\n                        };\r\n                        notesInGrid.value.push(newNote);\r\n                        newNote.track.notes.unshift(newNote);\r\n                    }\r\n                }\r\n\r\n                for (const draggingNote of draggingNotes.value) {\r\n                    startPositions.set(draggingNote.id, {\r\n                        x: event.clientX,\r\n                        y: event.clientY,\r\n                        left: draggingNote.left,\r\n                        top: draggingNote.top\r\n                    });\r\n                }\r\n\r\n                currentNoteLength.value = note.length;\r\n                currentNoteVolume.value = note.volume;\r\n                selectedTrackIndex.value = tracks.value.indexOf(note.track);\r\n                trackHexColor.value = note.track.color;\r\n                document.addEventListener('mousemove', onDrag);\r\n                document.addEventListener('mouseup', endDrag);\r\n            }\r\n        };\r\n\r\n        const onDrag = (event) => {\r\n            if (draggingNotes.value && resizingNotes.value.length === 0 && volumeChangingNotes.value.length === 0) {\r\n\r\n                let outOfBounds = false;\r\n                const newPositions = [];\r\n\r\n                let offGridNote = false;\r\n\r\n                for (const note of draggingNotes.value) {\r\n                    if (event.altKey || (note.highlighted && note.left % gridWidth.value !== 0)) {\r\n                        offGridNote = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                const noteSnapScale = offGridNote ? gridWidth.value / 4 : gridWidth.value;\r\n\r\n                let noteDelta = 0;\r\n\r\n                for (let i = 0; i < draggingNotes.value.length; ++i) {\r\n                    const note = draggingNotes.value[i];\r\n\r\n                    const startPos = startPositions.get(note.id);\r\n                    if (!startPos) continue;\r\n\r\n                    const dx = (event.clientX - startPos.x)/zoomScalar.value;\r\n                    const dy = event.clientY - startPos.y;\r\n\r\n                    let newLeft = 0;\r\n                    \r\n                    if (i === 0) {\r\n                        newLeft = Math.round((startPos.left + dx) / noteSnapScale) * noteSnapScale;\r\n                        noteDelta = newLeft - startPos.left;\r\n                    } else {\r\n                        newLeft = startPos.left + noteDelta;\r\n                    }\r\n\r\n                    let newTop = Math.round((startPos.top + dy) / gridHeight) * gridHeight;\r\n                    \r\n                    if (newLeft < 0 || newTop < 0 || newTop > 2568) {\r\n                        outOfBounds = true;\r\n                        break; // Exit loop if any note is out of bounds\r\n                    }\r\n\r\n                    newPositions.push({ note, newLeft, newTop });\r\n\r\n                }\r\n\r\n                if (outOfBounds) return;\r\n\r\n                // Auto-scroll stuff doesnt work super well yet, so I'll leave it out for now\r\n                let rightMost = Infinity;\r\n                let leftMost = Infinity;\r\n                let topMost = Infinity;\r\n                let bottomMost = 0;\r\n\r\n                for (const { note, newLeft, newTop } of newPositions) {\r\n\r\n                    note.left = newLeft;\r\n                    note.top = newTop;\r\n\r\n                    const number = (1284-(note.top/2))/144;\r\n                    const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                    if (note.name != noteName && draggingNotes.value.length === 1) {\r\n                        startNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number))\r\n                        endNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number))\r\n                    }\r\n                    note.name = noteName;\r\n                    note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n\r\n                    // if (note.left + note.width < rightMost)\r\n                    //     rightMost = note.left + note.width;\r\n\r\n                    // if (note.left < leftMost)\r\n                    //     leftMost = note.left;\r\n\r\n                    // if (note.top < topMost)\r\n                    //     topMost = note.top;\r\n\r\n                    // if (note.top > bottomMost)\r\n                    //     bottomMost = note.top;\r\n                    \r\n                }\r\n                // const gridWrapper = document.querySelector('.grid-wrapper');\r\n                // const pianoRoll = document.querySelector('.piano-roll');\r\n                // if (rightMost > gridWrapper.scrollLeft + window.innerWidth) {\r\n                //     gridWrapper.scrollLeft = rightMost - window.innerWidth;\r\n                // } else if (leftMost < gridWrapper.scrollLeft) {\r\n                //     gridWrapper.scrollLeft = leftMost;\r\n                // } else if (bottomMost - topMost < window.innerHeight && topMost < pianoRoll.scrollTop) {\r\n                //     pianoRoll.scrollTop = topMost;\r\n                // } else if (bottomMost - topMost < window.innerHeight && bottomMost > window.innerHeight*0.85 + pianoRoll.scrollTop) {\r\n                //     pianoRoll.scrollTop = bottomMost - window.innerHeight*0.85;\r\n                // }\r\n\r\n            }\r\n        };\r\n\r\n        const endDrag = () => {\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            draggingNotes.value = [];\r\n            document.removeEventListener('mousemove', onDrag);\r\n            document.removeEventListener('mouseup', endDrag);\r\n            startPositions.clear();\r\n        };\r\n\r\n        const startResizeData = new Map();\r\n\r\n        const startResize = (note, event) => {\r\n            event.preventDefault();\r\n            if (event.button === 0) { // Ensure we're resizing with the left button\r\n                resizingNotes.value = [];\r\n                startX.value = event.clientX;\r\n                startResizeData.clear(); // Clear previous data\r\n\r\n                if (note.highlighted) {\r\n                    // If note is highlighted, prepare to resize all selected notes\r\n                    selectedNotes.value.forEach(n => {\r\n                        startResizeData.set(n.id, { width: n.width, startX: event.clientX });\r\n                    });\r\n                    resizingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    // If note is not highlighted, resize only this note\r\n                    clearSelection();\r\n                    startResizeData.set(note.id, { width: note.width, startX: event.clientX });\r\n                    resizingNotes.value = [note];\r\n                }\r\n                \r\n                document.addEventListener('mousemove', onResize);\r\n                document.addEventListener('mouseup', endResize);\r\n            }\r\n        };\r\n\r\n        const onResize = (event) => {\r\n            if (resizingNotes.value.length > 0) {\r\n                let allInBounds = true;\r\n\r\n                const newWidths = [];\r\n\r\n                resizingNotes.value.forEach(note => {\r\n                    const startData = startResizeData.get(note.id);\r\n                    if (!startData) return;\r\n\r\n                    const dx = (event.clientX - startData.startX)/zoomScalar.value;\r\n                    let newWidth = 0;\r\n                    if (event.altKey) {\r\n                        newWidth = Math.round((startData.width + dx) / (gridWidth.value/4)) * gridWidth.value / 4 - 1;\r\n                    } else {\r\n                        newWidth = Math.round((startData.width + dx) / gridWidth.value) * gridWidth.value - 1;\r\n                    }\r\n\r\n                    // Check if newWidth is valid for the note\r\n                    if (newWidth < gridWidth.value - 1 && !event.altKey || newWidth < 3) {\r\n                        allInBounds = false;\r\n                        return;\r\n                    }\r\n\r\n                    newWidths.push({ note, newWidth })\r\n\r\n                });\r\n\r\n                // If any note was resized to an invalid width, stop resizing\r\n                if (allInBounds) {\r\n                    for (const { note, newWidth } of newWidths) {\r\n                        note.width = newWidth;\r\n                        note.length = (newWidth + 1) / gridWidth.value;\r\n                        currentNoteLength.value = note.length;\r\n                    };\r\n                }\r\n            }\r\n        };\r\n\r\n        const endResize = () => {\r\n            resizingNotes.value = [];\r\n            startResizeData.clear();\r\n            document.removeEventListener('mousemove', onResize);\r\n            document.removeEventListener('mouseup', endResize);\r\n        };\r\n\r\n        let startingNoteVolume = 0;\r\n\r\n        const startVolumeChange = (note, event) => {\r\n            event.preventDefault();\r\n            if (event.button === 0) { // Ensure we're clicking with the left button\r\n                volumeChangingNotes.value = [];\r\n                startY.value = event.clientY;\r\n\r\n                if (note.highlighted) {\r\n                    // If note is highlighted, prepare to re-volume all selected notes\r\n                    volumeChangingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    // If note is not highlighted, re-volume only this note\r\n                    clearSelection();\r\n                    volumeChangingNotes.value = [note];\r\n                }\r\n                startingNoteVolume = note.volume;\r\n\r\n                document.addEventListener('mousemove', onVolumeChange);\r\n                document.addEventListener('mouseup', endVolumeChange);\r\n            }\r\n        };\r\n\r\n        const onVolumeChange = (event) => {\r\n            event.preventDefault();\r\n            if (volumeChangingNotes.value.length > 0) {\r\n                for (const note of volumeChangingNotes.value) {\r\n                    const dy = startY.value - event.clientY;\r\n                    let newVolume = Math.round(Math.max(1, Math.min(15, startingNoteVolume + dy/10)));\r\n                    note.volume = newVolume;\r\n                    currentNoteVolume.value = newVolume;\r\n                }\r\n            }\r\n        };\r\n        \r\n        const endVolumeChange = () => {\r\n            volumeChangingNotes.value = [];\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            document.removeEventListener('mousemove', onVolumeChange);\r\n            document.removeEventListener('mouseup', endVolumeChange);\r\n        };\r\n\r\n        const handleGridClick = (event) => {\r\n            if (event.ctrlKey && draggingNotes.value.length <= 0) {\r\n                if (!event.shiftKey)\r\n                    clearSelection();\r\n                startSelection(event);\r\n            } else {\r\n                startPlacingNote(event);\r\n            }\r\n        };\r\n\r\n        const handleGridScroll = (event) => {\r\n            const deltaY = -Math.sign(event.deltaY)*1/8;\r\n            if (event.ctrlKey) {\r\n                event.preventDefault();\r\n                const gridWrapper = document.querySelector('.grid-wrapper');\r\n                const z1 = zoomScalar.value;\r\n                const l = gridWrapper.scrollLeft;\r\n                const x = (event.clientX - gridWrapper.getBoundingClientRect().left + l);\r\n                zoomScalar.value = Math.min(8, Math.max(1/8, zoomScalar.value+deltaY));\r\n                const z2 = zoomScalar.value;\r\n                gridWrapper.scrollLeft += x*(z2/z1 - 1);\r\n            }\r\n        }\r\n\r\n        function clearSelection() {\r\n            selectedNotes.value.forEach((note) => {\r\n                note.highlighted = false;\r\n            });\r\n            selectedNotes.value = [];\r\n        }\r\n\r\n        const startSelection = (event) => {\r\n            event.preventDefault();\r\n            isSelecting.value = true;\r\n            const rect = grid.value.getBoundingClientRect();\r\n            startX.value = event.clientX - rect.left;\r\n            startY.value = event.clientY - rect.top;\r\n            currentX.value = event.clientX - rect.left;\r\n            currentY.value = event.clientY - rect.top;\r\n            document.addEventListener('mousemove', onSelectionMove);\r\n            document.addEventListener('mouseup', onSelectionEnd);\r\n        };\r\n\r\n        const onSelectionMove = (event) => {\r\n            if (isSelecting.value) {\r\n                const rect = grid.value.getBoundingClientRect();\r\n                currentX.value = event.clientX - rect.left;\r\n                currentY.value = event.clientY - rect.top;\r\n                // This is where we add the logic to highlight the notes that might be selected (or we can select them I dont really care)\r\n            }\r\n        };\r\n\r\n        const onSelectionEnd = () => {\r\n            if (isSelecting.value) {\r\n                isSelecting.value = false;\r\n                document.removeEventListener('mousemove', onSelectionMove);\r\n                document.removeEventListener('mouseup', onSelectionEnd);\r\n                // This is where we add the logic to actually select the notes\r\n                checkIntersections();\r\n            }\r\n        };\r\n\r\n        function checkIntersections() {\r\n            const selectionRect = {\r\n                left: Math.min(startX.value, currentX.value)/zoomScalar.value,\r\n                top: Math.min(startY.value, currentY.value),\r\n                right: Math.max(startX.value, currentX.value)/zoomScalar.value,\r\n                bottom: Math.max(startY.value, currentY.value),\r\n            };\r\n\r\n            notesInGrid.value.forEach(note => {\r\n                const itemRect = {\r\n                    left: note.left,\r\n                    top: note.top,\r\n                    right: note.left + note.width,\r\n                    bottom: note.top + gridHeight,\r\n                };   \r\n\r\n                if (intersects(selectionRect, itemRect)) {\r\n                    //console.log(note.name + ' intersects with selection.');\r\n                    selectNote(note);\r\n                }\r\n            });\r\n\r\n        };\r\n\r\n        function selectNote(note) {\r\n            if (!selectedNotes.value.includes(note) && !note.muted) {\r\n                selectedNotes.value.push(note);\r\n                note.highlighted = true;\r\n            }\r\n        }\r\n\r\n        function intersects(rect1, rect2) {\r\n            return !(rect2.left >= rect1.right ||\r\n                    rect2.right <= rect1.left ||\r\n                    rect2.top >= rect1.bottom ||\r\n                    rect2.bottom <= rect1.top);\r\n        }\r\n\r\n\r\n        const startPlacingNote = (event) => {\r\n            if (draggingNotes.value.length > 0 || resizingNotes.value.length > 0 || volumeChangingNotes.value.length > 0) {\r\n                return;\r\n            }\r\n\r\n            const rect = grid.value.getBoundingClientRect();\r\n            const x = (event.clientX - rect.left + grid.value.scrollLeft*zoomScalar.value);\r\n            const y = event.clientY - rect.top + grid.value.scrollTop;\r\n\r\n            let left = Math.round((x - gridWidth.value / 2) / gridWidth.value / zoomScalar.value) * gridWidth.value;\r\n            if (event.altKey)\r\n                left = Math.round((x - gridWidth.value / 2) / (gridWidth.value/4) / zoomScalar.value) * gridWidth.value/4;\r\n\r\n            const top = Math.round((y - gridHeight / 2) / gridHeight) * gridHeight;\r\n\r\n            const number = (1284-(top/2))/144;\r\n            const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n            startNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number));\r\n            endNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number));\r\n\r\n            const existingNote = notesInGrid.value.find(note =>\r\n                note.left === left && note.top === top && !note.muted\r\n            );\r\n\r\n            if (!existingNote) {\r\n                clearSelection();\r\n                const id = notesInGrid.value.length + Date.now();\r\n                const newNote = {\r\n                    left: left,\r\n                    top: top,\r\n                    width: gridWidth.value * currentNoteLength.value - 1,\r\n                    highlighted: false,\r\n                    color: selectedTrack.value ? selectedTrack.value.color : 'hsla(212, 100%, 50%, 0.5)',\r\n                    id: id,\r\n                    name: noteName,\r\n                    pitch: number * 12 % 12 + 12 * (Math.floor(number) + 1),\r\n                    length: currentNoteLength.value,\r\n                    start: left / gridWidth.value,\r\n                    end: left / gridWidth.value + currentNoteLength.value,\r\n                    volume: currentNoteVolume.value,\r\n                    track: selectedTrack.value\r\n                };\r\n                notesInGrid.value.push(newNote);\r\n                selectedTrack.value.notes.unshift(newNote);\r\n                startDrag(notesInGrid.value.find(note => note.id == id), event, false);\r\n            } else {\r\n                startDrag(existingNote, event);\r\n            }\r\n        };\r\n\r\n        //let trackWrappers = [];\r\n\r\n        const trackify = () => {\r\n            let notesList = [...selectedTrack.value.notes].sort((a, b) => {\r\n                if (a.left === b.left) {\r\n                    return a.top - b.top;\r\n                }\r\n                return a.left - b.left;\r\n            });\r\n            //let trackWrappers = [];\r\n            // for (let i = 0; i < tracks.value.length; ++i) {   \r\n            //     trackWrappers.push({\r\n            //         notes: [],\r\n            //         track: tracks.value[i]\r\n            //     });\r\n            // }\r\n\r\n            // Idea: Take the selected track and split it into more tracks.\r\n            // This involves adding new tracks (only if allowed, otherwise cancel the operation)\r\n            // if (tracks.value.length < 16)\r\n            //     addTrack();\r\n            // Then, put the proper notes into the proper tracks.\r\n\r\n            // For all notes in the selected track\r\n            // starting with selected track:\r\n            // if note can go into this track, then add it\r\n            // otherwise, add a new track, and put the note in there.\r\n\r\n            // after all notes are situated, loop through all tracks in the wrapper and set their notes equal to the new note lists\r\n\r\n            let trackWrappers = [];\r\n            trackWrappers.push({\r\n                notes: [],\r\n                track: selectedTrack.value,\r\n                index: 0\r\n            });\r\n\r\n            for (const note of notesList) {\r\n                //console.log(note.id);\r\n                for (const trackWrapper of trackWrappers) {\r\n                    if (!trackWrapper.notes[0] || trackWrapper.notes[0].left + trackWrapper.notes[0].width < note.left) {\r\n                        trackWrapper.notes.unshift(note);\r\n                        break;\r\n                    } else {\r\n                        if (trackWrapper.index === trackWrappers.length - 1) {\r\n                            trackWrappers.push({\r\n                                notes: [],\r\n                                track: {instrument: trackWrapper.track.instrument, color: null, name: selectedTrack.value.name + ` (${trackWrappers.length})`},\r\n                                index: trackWrappers.length\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (tracks.value.length + trackWrappers.length - 1 > 16) {\r\n                showFailureMessage('Failed to split track! (Process would create too many tracks!)');\r\n                return;\r\n            }\r\n\r\n            showSuccessMessage(`Successfully split the track \"${selectedTrack.value.name}\" into ${trackWrappers.length} tracks!`, 3000);\r\n\r\n            for (const trackWrapper of trackWrappers) {\r\n                if (!tracks.value.includes(trackWrapper.track)) {\r\n                    trackWrapper.track = addTrack(trackWrapper.track.instrument, trackWrapper.track.color, trackWrapper.track.name);\r\n                }\r\n                trackWrapper.track.notes = trackWrapper.notes;\r\n                for (const note of trackWrapper.track.notes) {\r\n                    note.track = trackWrapper.track;\r\n                    note.color = trackWrapper.track.color;\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        function hexToRgba(originalColor, alpha) {\r\n            let hex = originalColor.replace('#', '');\r\n\r\n            if (hex.length === 3) {\r\n                hex = hex.split('').map(char => char + char).join('');\r\n            }\r\n\r\n            const r = parseInt(hex.substring(0, 2), 16);\r\n            const g = parseInt(hex.substring(2, 4), 16);\r\n            const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n            return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n        }\r\n\r\n        function copyToClipboard(text) {\r\n            navigator.clipboard.writeText(text).then(() => {\r\n                    successNotificationText.value = \"MML copied to clipboard!\";\r\n                    showSuccessNotification.value = true; // Show notification\r\n\r\n                    // Hide notification after 2 seconds\r\n                    setTimeout(() => {\r\n                        showSuccessNotification.value = false;\r\n                    }, 2000);\r\n                }).catch(err => {\r\n                    console.error('Could not copy text: ', err);\r\n                });\r\n        }\r\n\r\n        const genMML = () => {\r\n            for (const track of tracks.value) {\r\n                track.notes.sort((a, b) => {\r\n                    if (a.left === b.left) {\r\n                        return a.top - b.top;\r\n                    }\r\n                    return a.left - b.left;\r\n                });\r\n                track.notes.reverse();\r\n            }\r\n            let outString = 'T' + tempo.value;\r\n            // console.log(tracks.value.length, tracks.value);\r\n            let audibleTracks = [];\r\n\r\n            for (const track of tracks.value) {\r\n                if (!track.isMuted) {\r\n                    audibleTracks.push(track);\r\n                }\r\n            }\r\n\r\n            for (const track of audibleTracks) {\r\n                // If there exists two notes whose values overlap within the same track, then we cannot and will not generate an MML.\r\n                for (let i = 0; i < track.notes.length; ++i) {\r\n                    let rightNote = track.notes[i];\r\n                    let leftNote = i + 1 < track.notes.length ? track.notes[i + 1] : null;\r\n                    if (leftNote === null) break;\r\n                    // Scan from left to right. The next note should not have a left value <= note.end\r\n                    if (rightNote.left <= leftNote.left + leftNote.width) {\r\n                        console.log(\"Could Not Gen MML\");\r\n                        showFailureMessage(`Failed to copy MML to clipboard! Track '${track.name}'' has overlapping notes!`);\r\n                        return null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (0 <= audibleTracks.length && audibleTracks.length <= 4) {\r\n                audibleTracks.sort((a, b) => b.notes.length - a.notes.length); // sort the largest track to the top\r\n                //console.log(audibleTracks);\r\n                for (const track of audibleTracks) {\r\n                    let prevNoteEnd = 0;\r\n                    // Make a list of all tempo changes for this track\r\n                    let trackTempoMarkers = [];\r\n                    for (const tempoMarker of tempoMarkers.value) {\r\n                        if (tempoMarker.parentTrack === track) {\r\n                            trackTempoMarkers.push(tempoMarker);\r\n                        }\r\n                    }\r\n                    // We now need to \"insert\" the tempoMarkers at the appropriate \"left\" values.\r\n                    // This would mean whenever we have a note at left position l, we would place the tempo change before the note if it had the same l.\r\n                    // Similarly, if there were some gap between notes, we would put the tempo change wherever it belonged in that gap.\r\n                    // Since our list of tempomarkers is sorted, we can pop (Array.shift()) the tempomarkers from our list as we go.\r\n\r\n                    let notables = [...trackTempoMarkers, ...track.notes.slice().reverse()];\r\n                    notables.sort((a, b) => a.left - b.left);\r\n\r\n                    for (const note of notables) {\r\n                        if (note.left >= prevNoteEnd + 4) {\r\n                            // console.log('Adding Rest...', note.left, prevNoteEnd + 4);\r\n                            let gap = note.left - prevNoteEnd;\r\n                            let restStr = noteWidthToMML(gap);\r\n                            restStr = restStr.replaceAll('L', 'R');\r\n                            outString += restStr;\r\n                        }\r\n                        //console.log(note.width);\r\n                        if (!note.width) { // This means that it was a tempo marker and not a note.\r\n                            outString += 'T' + note.tempo;\r\n                            prevNoteEnd = note.left;\r\n                        } else {\r\n                            let noteStr = noteWidthToMML(note.width + 1);\r\n                            if (noteStr.includes('&')) {\r\n                                let k = noteStr.split('&');\r\n                                for (let i = 0; i < k.length; ++i) {\r\n                                    outString += k[i] + 'V' + note.volume + 'N' + (note.pitch - 12) + (i === k.length - 1 ? '' : '&');\r\n                                }\r\n                            } else {\r\n                                outString += noteWidthToMML(note.width + 1) + 'V' + note.volume + 'N' + (note.pitch-12);\r\n                            }\r\n                            prevNoteEnd = note.left + note.width + 1;\r\n                        }\r\n                    }\r\n                    outString += ',';\r\n                }\r\n            } else {\r\n                console.log(\"Could Not Gen MML\");\r\n                showFailureMessage('Failed to copy MML to clipboard! Too many tracks visible!');\r\n                return null;\r\n            }\r\n            outString = outString.slice(0, -1);\r\n            // Now we condense the output;\r\n            let outTracks = outString.split(',');\r\n            let newTracks = [];\r\n            for (const track of outTracks) {\r\n                let tokens = tokenizeMML(track);\r\n                let simplifiedTokens = simplifyMML(tokens);\r\n                let simplifiedMML = stringifyMML(simplifiedTokens);\r\n                newTracks.push(simplifiedMML);\r\n            }\r\n\r\n            outString = `MML@${newTracks.join(',')};`;\r\n\r\n            // Log output to console and copy it to the clipboard\r\n            console.log(outString);\r\n            copyToClipboard(outString);\r\n        };\r\n\r\n        function getEnharmonicEquivalent(note) {\r\n            if (note.length === 1)\r\n                return note;\r\n            let root = note[0];\r\n            let accidental = note[1];\r\n            let noteIndex = noteNames.indexOf(root);\r\n            if (accidental === '#' || accidental === '+') {\r\n                noteIndex = (noteIndex + 1) % 12;\r\n            } else if (accidental === '-') {\r\n                noteIndex = ((noteIndex - 1) % 12 + 12) % 12;\r\n            }\r\n            return noteNames[noteIndex];\r\n        }\r\n\r\n        const patterns = {\r\n            LENGTH: /L(\\d+)\\.?/g,  // Matches note lengths, e.g., L4, L8.\r\n            NOTE: /[A-G][-+#]?\\d*\\.?|N\\d+/g,         // Matches notes like N60, N62.\r\n            REST: /R\\d*\\.?/g,      // Matches rests like R4, R8.\r\n            TIE: /&/g,              // Matches ties.\r\n            VOLUME: /V(\\d+)/g,\r\n            TEMPO: /T(\\d+)/g,\r\n            OCTAVE: /O(\\d+)|[<>]/g\r\n        };\r\n\r\n        function tokenizeMML(mmlString) {\r\n            let tokens = [];\r\n            \r\n            // Run regex patterns over the input\r\n            for (const [key, regex] of Object.entries(patterns)) {\r\n                let match;\r\n                while ((match = regex.exec(mmlString)) !== null) {\r\n                    tokens.push({ type: key, value: match[0], index: match.index });\r\n                }\r\n            }\r\n\r\n            // Sort tokens by their original index in the string\r\n            tokens.sort((a, b) => a.index - b.index);\r\n\r\n            return tokens;\r\n        }\r\n\r\n        function simplifyMML(tokenList) {\r\n            // This is NOT optimal, but it works.\r\n            let newTokenList = JSON.parse(JSON.stringify(tokenList));\r\n            let totalPasses = 10;\r\n            \r\n            for (let pass = 0; pass < totalPasses; ++pass) {\r\n                let octave = 4;\r\n                let length = '4';\r\n                let tempo = '120';\r\n                let volume = '8';\r\n            \r\n                for (let i = 0; i < newTokenList.length; ++i) {\r\n                    let token = newTokenList[i];\r\n                    if (token.type === 'LENGTH') {\r\n                        let tokenLength = token.value.split('L')[1];\r\n                        if (tokenLength !== length) {\r\n                            length = tokenLength;\r\n                        } else {\r\n                            newTokenList.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    } else if (token.type === 'VOLUME') {\r\n                        let tokenVolume = token.value.split('V')[1];\r\n                        if (tokenVolume !== volume) {\r\n                            volume = tokenVolume;\r\n                        } else {\r\n                            newTokenList.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    } else if (token.type === 'TEMPO') {\r\n                        let tokenTempo =  token.value.split('T')[1];\r\n                        if (tokenTempo !== tempo) {\r\n                            tempo = tokenTempo;\r\n                        } else {\r\n                            newTokenList.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    } else if (token.type === 'REST') {\r\n                        let restLength = token.value.split('R')[1];\r\n                        if (restLength === length) {\r\n                            token.value = 'R';\r\n                        }\r\n                    } else if (token.type === 'NOTE') {\r\n                        if (!token.value.includes('N'))\r\n                            continue;\r\n                        let notePitch = Number(token.value.split('N')[1]);\r\n                        let noteOctave = Math.floor(notePitch/12);\r\n                        let noteKey = noteNames[notePitch - 12*noteOctave];\r\n                        if (noteOctave !== octave) {\r\n                            let diff = noteOctave - octave;  // Positive diff means noteOctave is higher.\r\n                            let octaveChanges = [];\r\n\r\n                            if (Math.abs(diff) < 3) {\r\n                                // Insert `>` or `<` for smaller octave differences.\r\n                                let symbol = diff > 0 ? '>' : '<';\r\n                                for (let j = 0; j < Math.abs(diff); ++j) {\r\n                                    octaveChanges.push({ type: 'OCTAVE', value: symbol, index: token.index+j });\r\n                                }\r\n                            } else {\r\n                                // Use absolute octave changes for larger octave differences.\r\n                                octaveChanges = [{ type: 'OCTAVE', value: 'O' + noteOctave, index: token.index }];\r\n                            }\r\n                            // console.log(octaveChanges);\r\n                            // Now splice in the octave changes and the note key.\r\n                            newTokenList.splice(i, 1, ...octaveChanges, { type: 'NOTE', value: noteKey, index: token.index + octaveChanges.length });\r\n\r\n                            octave = noteOctave; // Update current octave to the new one.\r\n                        } else {\r\n                            // No octave change, just update the note value.\r\n                            token.value = noteKey;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                // Now we simplify lengths\r\n                let lengthIndex = 0;\r\n                for (let i = 0; i < newTokenList.length; ++i) {\r\n                    let token = newTokenList[i];\r\n                    let prevToken = i > 0 ? newTokenList[i-1] : null;\r\n                    if (token.type === 'LENGTH') {\r\n                        // Count until we hit the next length token or the end of the list.\r\n                        let noteCount = 0;\r\n                        let noteIndexes = [];\r\n                        for (let j = i+1; j < newTokenList.length; ++j) {\r\n                            let token2 = newTokenList[j];\r\n                            // if note/rest has no postfix number, then we add it to the count\r\n                            if ((token2.type === 'NOTE' || token2.type === 'REST') && token2.value.replace(/[A-GRN][#]?/g, '') === '') {\r\n                                noteCount++;\r\n                                noteIndexes.push(j);\r\n                            } else if (token2.type === 'LENGTH') {\r\n                                break;\r\n                            }\r\n                        }\r\n                        \r\n                        if ((prevToken && prevToken.type === 'TIE') || noteCount * token.value.length <= token.value.length + noteCount) {\r\n                            // remove this length tag and put the length on the notes\r\n                            // console.log(noteCount);\r\n                            for (const noteIndex of noteIndexes) {\r\n                                newTokenList[noteIndex].value = newTokenList[noteIndex].value + token.value.split('L')[1];\r\n                            } \r\n                            newTokenList.splice(i, 1);\r\n                        }\r\n                        \r\n                    } else if (token.type === 'TEMPO') {\r\n                        // Look for any duplicate tempos that have no notes or rests between them.\r\n                    } else if (token.type === 'VOLUME') {\r\n                        // Look for any duplicate volumes that have no notes or rests between them.\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return newTokenList;\r\n        }\r\n\r\n        function stringifyMML(tokens) {\r\n            let outStr = '';\r\n            for (const token of tokens) {\r\n                outStr += token.value;\r\n            }\r\n            return outStr;\r\n        }\r\n\r\n        function mmlToNewTrack(title, mmlTokens) {\r\n            let newTokenList = [...mmlTokens];\r\n            // Creates a new track with title and with data from mmlTokens\r\n            let newTrack = addTrack(instruments.value[10], null, title);\r\n            let octave = 4;\r\n            let length = '4';\r\n            let tempo = '120';\r\n            let volume = '8';\r\n            let builderX = 0; // We will update the currentX based on note length/width/etc\r\n            let previousNote = null;\r\n            for (let i = 0; i < newTokenList.length; i++) {\r\n                let token = newTokenList[i];\r\n                //console.log(token);\r\n                if (token.type === 'LENGTH') {\r\n                    let tokenLength = token.value.split('L')[1];\r\n                    if (tokenLength !== length) {\r\n                        length = tokenLength;\r\n                    }\r\n                } else if (token.type === 'TIE') {\r\n                    if (previousNote === null)\r\n                        continue;\r\n                    // if the next note has the same pitch as the previous note, then we modify the duration of previous note and increment builderX and i\r\n                    let nextNote = newTokenList[i + 1];\r\n                    let noteLength = length;\r\n                    let noteName = 'C';\r\n                    let noteOctave = octave;\r\n                    let notePitch = 0;\r\n\r\n                    if (nextNote.value.startsWith('N')) {\r\n                        notePitch = Number(nextNote.value.split('N')[1]);\r\n                        noteOctave = Math.floor(notePitch/12);\r\n                        noteName = noteNames[(notePitch - 12*noteOctave) % 12];\r\n                        let dotted = noteLength.includes('.');\r\n                        noteLength = Number(noteLength.slice(0, noteLength.length-dotted)) * (dotted ? 2/3 : 1);\r\n                    } else {\r\n                        let sharp = nextNote.value.includes('#') || nextNote.value.includes('+')\r\n                        let flat = nextNote.value.includes('-');\r\n                        let dotted = nextNote.value.includes('.');\r\n                        noteName = getEnharmonicEquivalent(nextNote.value.slice(0, 1 + sharp + flat));\r\n                        let noteIndex = noteNames.indexOf(noteName);\r\n                        if (noteIndex === 11 && flat)\r\n                            noteOctave -= 1;\r\n                        if (noteIndex === 0 && sharp)\r\n                            noteOctave += 1;\r\n                        if (nextNote.value.length - dotted > 1 + sharp + flat) { // If the note has a length added on\r\n                            noteLength = Number(nextNote.value.slice(((sharp || flat) ? 2 : 1), nextNote.value.length - dotted)) * (dotted ? 2/3 : 1);\r\n                        } else {// If the note has no added length\r\n                            let Ldotted = length.includes('.');\r\n                            dotted = Ldotted || dotted;\r\n                            noteLength = Number(length.slice(0, length.length-Ldotted)) * (dotted ? 2/3 : 1);\r\n                        }\r\n                        notePitch = noteNames.indexOf(noteName) + 12 * noteOctave;\r\n                    }\r\n                    if (previousNote.pitch - 12 === notePitch) {\r\n                        builderX += 256/noteLength;\r\n                        previousNote.width += 256/noteLength;\r\n                        previousNote.length += noteLength;\r\n                        previousNote.end += noteLength;\r\n                        i++;\r\n                    }\r\n\r\n                } else if (token.type === 'OCTAVE') {\r\n                    let tokenOctave = token.value;\r\n                    if (tokenOctave === '<') {\r\n                        octave -= 1;\r\n                    } else if (tokenOctave === '>') {\r\n                        octave += 1;\r\n                    } else {\r\n                        octave = Number(tokenOctave.split('O')[1]);\r\n                    }\r\n                } else if (token.type === 'VOLUME') {\r\n                    let tokenVolume = token.value.split('V')[1];\r\n                    if (tokenVolume !== volume) {\r\n                        volume = tokenVolume;\r\n                    }\r\n                } else if (token.type === 'TEMPO') {\r\n                    let tokenTempo =  token.value.split('T')[1];\r\n                    if (tokenTempo !== tempo) {\r\n                        tempo = tokenTempo;\r\n                        tempoMarkers.value.push({\r\n                            left: builderX,\r\n                            tempo: Number(tempo),\r\n                            color: newTrack.color,\r\n                            parentTrack: newTrack,\r\n                            muted: false\r\n                        });\r\n                    }\r\n                } else if (token.type === 'REST') {\r\n                    let restLength = token.value.split('R')[1];\r\n                    if (restLength === length || Number(restLength) === 0 || isNaN(Number(restLength))) {\r\n                        let dotted = length.includes('.') || restLength.includes('.');\r\n                        let lengthNum = Number(length);\r\n                        builderX += (256 / lengthNum) * (dotted ? 1.5 : 1); // 1 bar is 256 pixels (no matter the tempo)\r\n                    } else {\r\n                        let dotted = restLength.includes('.');\r\n                        let lengthNum = Number(restLength);\r\n                        builderX += (256 / lengthNum) * (dotted ? 1.5 : 1); // 1 bar is 256 pixels (no matter the tempo)\r\n                    }\r\n                } else if (token.type === 'NOTE') {\r\n                    // notes will be placed starting from builderX\r\n                    // each note COULD have its own length, but notes starting with 'N' or not having a following number use the global length value\r\n                    let noteLength = length;\r\n                    let noteName = 'C';\r\n                    let noteOctave = octave;\r\n                    let notePitch = 0;\r\n\r\n                    if (token.value.startsWith('N')) {\r\n                        notePitch = Number(token.value.split('N')[1]);\r\n                        noteOctave = Math.floor(notePitch/12);\r\n                        noteName = noteNames[(notePitch - 12*noteOctave) % 12];\r\n                        let dotted = noteLength.includes('.');\r\n                        noteLength = Number(noteLength) * (dotted ? 2/3 : 1);\r\n                    } else {\r\n                        let sharp = token.value.includes('#') || token.value.includes('+');\r\n                        let flat = token.value.includes('-');\r\n                        let dotted = token.value.includes('.');\r\n                        noteName = getEnharmonicEquivalent(token.value.slice(0, 1 + sharp + flat));\r\n                        let noteIndex = noteNames.indexOf(noteName);\r\n                        if (noteIndex === 11 && flat)\r\n                            noteOctave -= 1;\r\n                        if (noteIndex === 0 && sharp)\r\n                            noteOctave += 1;\r\n                        if (token.value.length - dotted > 1 + sharp + flat) { // If the note has a length added on\r\n                            noteLength = Number(token.value.slice(((sharp || flat) ? 2 : 1), token.value.length)) * (dotted ? 2/3 : 1);\r\n                        } else { // If the note has no added length\r\n                            let Ldotted = length.includes('.');\r\n                            dotted = Ldotted || dotted;\r\n                            noteLength = Number(length) * (dotted ? 2/3 : 1);\r\n                        }\r\n                        notePitch = noteNames.indexOf(noteName) + 12 * noteOctave;\r\n                    }\r\n\r\n                    const newNote = {\r\n                        left: builderX, // In pixels\r\n                        top: 2568 - notePitch * gridHeight, // In pixels, the top of the note\r\n                        width: 256/noteLength - 1, // In pixels (we assume 4/4 time, which is 16 pixels per beat)\r\n                        highlighted: false,\r\n                        color: newTrack.color,\r\n                        id: notesInGrid.value.length + Date.now(),\r\n                        name: noteName + noteOctave, \r\n                        pitch: notePitch + 12,\r\n                        length: noteLength, // In beats\r\n                        start: builderX, // In beats\r\n                        end: builderX + noteLength, // In beats\r\n                        volume: Number(volume),\r\n                        track: newTrack\r\n                    };\r\n                    notesInGrid.value.push(newNote);\r\n                    newNote.track.notes.unshift(newNote);\r\n                    builderX += newNote.width + 1;\r\n                    previousNote = newNote;\r\n                }\r\n            }\r\n        }\r\n\r\n        function parseMMLNotation(mmlString) {\r\n            const segments = mmlString.replace(/\\s/, '').toUpperCase().match(/MML@([^;]+);/)[1].split(',');\r\n            for (const segment of segments) {\r\n                if (segment.length > 0)\r\n                    mmlToNewTrack(null, tokenizeMML(segment));\r\n            }\r\n        }\r\n\r\n        function parseMabiNotation(mabiString) {\r\n            const lines = mabiString.split(\"\\r\\n\"); // Goes title, composer, melody, harmony1, harmony2, song\r\n            let tokenizedSections = [];\r\n            for (let i = 2; i < lines.length; ++i) {\r\n                let line = lines[i].split(\" : \");\r\n                if (line.length < 2) {\r\n                    continue;\r\n                }\r\n                tokenizedSections.push({title: line[0].trim(), tokens: tokenizeMML(line[1].trim().toUpperCase())});\r\n            }\r\n\r\n            // Convert the titles and tokens into tracks with notes in them (and any tempo markers).\r\n            for (const section of tokenizedSections) {\r\n                if (section.tokens.length > 0) {\r\n                    mmlToNewTrack(section.title, section.tokens);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function parseMML(mmlString) {\r\n            if (mmlString.trim().startsWith(\"MML@\") && mmlString.trim().endsWith(\";\")) {\r\n                parseMMLNotation(mmlString);\r\n            } else {\r\n                parseMabiNotation(mmlString);\r\n            }\r\n        }\r\n\r\n        async function parseMMLFromClipboard() {\r\n            const textFromClipboard = await navigator.clipboard.readText();\r\n            parseMML(textFromClipboard);\r\n            showSuccessMessage(`Successfully imported tracks from clipboard!`, 1000);\r\n        }\r\n\r\n        const removeNote = (note, fromList, event=null) => {\r\n            if (event && event.buttons !== 2)\r\n                return;\r\n            selectedNotes.value = selectedNotes.value.filter(n => n.id !== note.id);\r\n            let oldSize = notesInGrid.value.length;\r\n            notesInGrid.value = notesInGrid.value.filter(n => n.id !== note.id);\r\n            let diff = oldSize - notesInGrid.value.length;\r\n            // console.log(`Removed a note!`)\r\n            for (const track of tracks.value) {\r\n                track.notes = track.notes.filter(n => n.id !== note.id);\r\n            }\r\n            if (!fromList && isPlaying.value)\r\n                playSequence();\r\n        };\r\n\r\n        document.addEventListener('mousedown', (event) => {\r\n            isMouseDown.value = true;\r\n        });\r\n\r\n        document.addEventListener('mouseup', () => {\r\n            isMouseDown.value = false;\r\n        });\r\n\r\n        return {\r\n            notes,\r\n            octaves,\r\n            startNote,\r\n            endNote,\r\n            mouseOverNote,\r\n            mouseLeaveNote,\r\n            instruments,\r\n            selectedInstrument,\r\n            changeInstrument,\r\n            pianoRoll,\r\n            grid,\r\n            notesInGrid,\r\n            startDrag,\r\n            endDrag,\r\n            startPlacingNote,\r\n            startVolumeChange,\r\n            removeNote,\r\n            gridWidth,\r\n            gridHeight,\r\n            gridSpan,\r\n            startResize,\r\n            endResize,\r\n            onResize,\r\n            currentNoteLength,\r\n            playSequence,\r\n            tempo,\r\n            handleGridClick,\r\n            handleGridScroll,\r\n            isSelecting,\r\n            rectangleStyle,\r\n            handleRulerClick,\r\n            markerPosition,\r\n            markerReplayPosition,\r\n            ruler,\r\n            loopSong,\r\n            trackify,\r\n            noteWidthToMML,\r\n            backgroundStyle,\r\n            genMML,\r\n            showSuccessNotification,\r\n            successNotificationText,\r\n            showFailedNotification,\r\n            failedNotificationText,\r\n            handleTrackSelected,\r\n            handleAddTrack,\r\n            handleRemoveTrack,\r\n            handleMuteTrack,\r\n            instrKeyMin,\r\n            instrKeyMax,\r\n            hexToRgba,\r\n            currentNoteVolume,\r\n            clickTempoMarker,\r\n            tempoMarkers,\r\n            updateColor,\r\n            zoomScalar,\r\n            autoScrollSong,\r\n            parseMMLFromClipboard\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.piano-container {\r\n    position: fixed;\r\n    /* Fix to the left side of the screen */\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    /* Full height */\r\n    width: 100%;\r\n    /* Width of the piano roll */\r\n    background-color: #ddd;\r\n}\r\n\r\n.copyNotification {\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 20px;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\r\n    z-index: 1000;\r\n}\r\n\r\n.instrument-selector {\r\n    padding: 10px;\r\n    background-color: #f0f0f0;\r\n    border-bottom: 1px solid #ccc;\r\n}\r\n\r\n.piano-roll {\r\n    height: 94vh;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n    padding-bottom: 36px;\r\n}\r\n\r\n.piano-keys {\r\n    padding-top: 30px;\r\n    background-color: #ccc;\r\n    width: 10%;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    padding-bottom: 18px;\r\n    /* Higher notes at the top */\r\n    z-index: 12;\r\n}\r\n\r\n.octave {\r\n    flex-direction: column;\r\n    position: relative;\r\n}\r\n\r\n.keys-wrapper {\r\n    flex-direction: column-reverse;\r\n    /* Ensure keys are in the correct order */\r\n}\r\n\r\n.piano-key {\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    cursor: pointer;\r\n    position: relative;\r\n    user-select: none;\r\n}\r\n\r\n.white-key {\r\n    width: 100%;\r\n    height: 24px;\r\n    align-content: center;\r\n    /* Adjust based on desired key height */\r\n    background: white;\r\n    border-bottom: 1px solid #ccc;\r\n    text-align: right;\r\n    padding-right: 10px;\r\n    user-select: none;\r\n    font-size: 80%;\r\n}\r\n\r\n.black-key {\r\n    background: black;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 24px;\r\n    align-content: center;\r\n    /* Adjust based on desired key height */\r\n    position: relative;\r\n    /* Center black key over white key */\r\n    text-align: right;\r\n    padding-right: 10px;\r\n    user-select: none;\r\n    font-size: 80%;\r\n}\r\n\r\n.white-key:nth-child(2n+1) {\r\n    background: #fff;\r\n}\r\n\r\n.white-key:nth-child(12n) {\r\n    background: #bbb;\r\n}\r\n\r\n.grid-wrapper {\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    flex-grow: 1;\r\n    position: relative;\r\n}\r\n\r\n.ruler {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    margin-top: 90px;\r\n    margin-left: calc(10% - 2px);\r\n    background-color: #eee;\r\n    height: 29px;\r\n    border-bottom: 1px solid #ccc;\r\n    display: flex;\r\n    align-items: end;\r\n    font-size: 12px;\r\n    color: #333;\r\n    z-index: 11;\r\n    user-select: none;\r\n    cursor: pointer;\r\n}\r\n\r\n@media (max-width: 1162px) {\r\n    .ruler {\r\n        margin-top: 108px;\r\n    }\r\n}\r\n\r\n@media (max-width: 701px) {\r\n    .ruler {\r\n        margin-top: 124px;\r\n    }\r\n}\r\n\r\n@media (max-width: 625px) {\r\n    .ruler {\r\n        margin-top: 142px;\r\n    }\r\n}\r\n\r\n.ruler-tick-label {\r\n    position: absolute;\r\n    bottom: 0;\r\n    white-space: nowrap;\r\n    transform: translateX(5px);\r\n    font-size: 14px;\r\n    color: #333;\r\n}\r\n\r\n.marker-replay-triangle {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid #bbb; /* Triangle color */\r\n    left: 50%;\r\n    bottom: 0; /* Inside the ruler */\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.marker-wrapper {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    transform: translateX(-50%);\r\n    pointer-events: none;\r\n}\r\n\r\n.marker-triangle {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid #f00; /* Triangle color */\r\n    left: 50%;\r\n    bottom: 0; /* Inside the ruler */\r\n    transform: translateX(-50%);\r\n    z-index: 100;\r\n}\r\n\r\n.marker-line {\r\n    position: absolute;\r\n    width: 2px;\r\n    height: 100vh;\r\n    background-color: #f00;\r\n    left: 50%;\r\n    bottom: - 100%; /* Below the ruler */\r\n    transform: translateX(-50%);\r\n    z-index: 100;\r\n}\r\n\r\n.grid {\r\n    padding-top: 18px;\r\n    margin-top: 30px;\r\n    position: absolute;\r\n    display: flex;\r\n    min-width: 100%;\r\n    align-self: top;\r\n    height: 100%;/*2592px;*/\r\n    background: repeating-linear-gradient( /*This is the horizontal lines*/\r\n        0deg,\r\n        #bbb,\r\n        #bbb 2px,\r\n        transparent 2px,\r\n        transparent 24px\r\n    ),\r\n    repeating-linear-gradient( /*This is the Bar line*/\r\n        90deg,\r\n        #777,\r\n        #777 2px,\r\n        transparent 2px,\r\n        transparent 256px\r\n    ),\r\n    repeating-linear-gradient( /*This is the vertical lines*/\r\n        90deg,\r\n        #c0c0c0,\r\n        #c0c0c0 2px,\r\n        transparent 2px,\r\n        transparent 16px\r\n    ),\r\n    repeating-linear-gradient(/*This is the background colors*/\r\n        90deg,\r\n        #e0e0e0,\r\n        #e0e0e0 64px,\r\n        #ccc 64px,\r\n        #ccc 128px\r\n    );\r\n    z-index: 10;\r\n    overflow: hidden;\r\n}\r\n\r\n.note {\r\n  position: absolute;\r\n  background-color: rgba(0, 120, 255, 0.5);\r\n  border: 1px solid #0078d4;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  user-select: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 20;\r\n  font-size: 70%;\r\n  margin-left: 1px;\r\n  overflow: hidden;\r\n}\r\n\r\n.note:active {\r\n    background-color: rgba(0, 120, 255, 0.7);\r\n}\r\n\r\n.resize-handle {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 40%; /* Adjust as needed */\r\n    max-width: 10px;\r\n    height: 100%;\r\n    cursor: ew-resize;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.volume-handle {\r\n  width: 12px;\r\n  height: 60%; /* Half the width to create the half-circle */\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: absolute;\r\n  bottom: -35%; /* Align to the bottom of the note */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border-radius: 50%; /* Create a circle */\r\n  clip-path: inset(0 0 50% 0); /* Clip top half, making it a half-circle */\r\n  cursor: ns-resize; /* Show a pointer to indicate draggable */\r\n}\r\n\r\n.play-button {\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #0078d4;\r\n  color: white;\r\n  z-index: 1000; /* Ensure it's on top of other elements */\r\n  outline: none;\r\n  box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.loop-wrapper {\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 160px;\r\n    padding: 10px 20px;\r\n    height: 18px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    background-color: #0078d4;\r\n    color: white;\r\n    border-radius: 5px;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n    z-index: 1000;\r\n}\r\n\r\n.scroll-wrapper {\r\n    position: fixed;\r\n    width: 108px;\r\n    top: 50px;\r\n    right: 10px;\r\n    padding: 10px 20px;\r\n    height: 18px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: #0078d4;\r\n    color: white;\r\n    z-index: 1000; /* Ensure it's on top of other elements */\r\n    outline: none;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.controls {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.instrument-selector,\r\n.tempo-selector {\r\n    margin-right: 15px;\r\n}\r\n\r\n.selection-rect {\r\n    position: absolute;\r\n    border: 1px solid rgba(0, 100, 255, 0.5);\r\n    background-color: rgba(0, 100, 255, 0.3);\r\n    z-index: 30;\r\n}\r\n\r\n</style>","<template>\r\n    <div>\r\n      <!-- Help Button -->\r\n      <button \r\n        class=\"help-button\"\r\n        @click=\"showHelp\"\r\n      >\r\n        <span v-if=\"hoverHelp\">Help</span>\r\n        <span v-else> ? </span>\r\n      </button>\r\n  \r\n      <!-- Help Modal -->\r\n      <div v-if=\"isHelpVisible\" class=\"modal-background\">\r\n        <transition name=\"fade\">\r\n          <div class=\"help-modal\">\r\n            <button class=\"close-button\" @click=\"closeHelp\">X</button>\r\n            <div class=\"help-content\">\r\n              <h1>Help</h1>\r\n              <p class=\"credits\">MOS v1.1</p>\r\n\r\n              <h3>Navigating the Grid</h3>\r\n              <ul>\r\n                <li>Scroll within the grid using the scroll bars, or directly with your mouse wheel.</li>\r\n                <li>Scrolling your mouse wheel normally will move the grid vertically.</li>\r\n                <li>Holding <strong>Shift</strong> while scrolling will move the grid horizontally.</li>\r\n                <li>Holding <strong>Ctrl</strong> and scrolling will zoom the grid in and out.</li>\r\n                <li>If the grid is focused (after clicking inside it), you can use the arrow keys to navigate around the grid.</li>\r\n              </ul>\r\n\r\n              <h3>Placing Notes</h3>\r\n              <ul>\r\n                <li>To place notes, click anywhere on the grid.</li>\r\n                <li>The size of the note will be the same size as the note that was last placed/moved.</li>\r\n                <li>Placed notes are instantly draggable.</li>\r\n                <li>The color of the placed notes will depend on the color of the track they belong to.</li>\r\n                <li>By changing the \"Grid Spacing\" dropdown, you can control whether the grid is in 16ths or 12ths.</li>\r\n                <li>Each instrument has a different range of notes that it can play. The red keys on the piano to the left indicate notes that will not make a sound with the current instrument.</li>\r\n              </ul>\r\n\r\n              <h3>Dragging Notes</h3>\r\n              <ul>\r\n                <li>To drag a note, click on the left side of the note. Then, move your mouse around within the bounds of the grid.</li>\r\n                <li>Holding <strong>Alt</strong> will move notes freely (not locked to the grid).</li>\r\n                <li>If multiple notes are selected, all selected notes will be moved together (even if they are from different tracks).</li>\r\n              </ul>\r\n\r\n              <h3>Resizing Notes</h3>\r\n              <ul>\r\n                <li>To resize a note, click on the right side of the note, then drag left or right.</li>\r\n                <li>Notes have a minimum length of 1/64th of a beat.</li>\r\n                <li>Holding <strong>Alt</strong> will resize notes freely (not locked to the grid)</li>\r\n                <li>If multiple notes are selected, all selected notes will be resized together.</li>\r\n              </ul>\r\n\r\n              <h3>Note Volume</h3>\r\n              <ul>\r\n                <li>The current note volume can be seen at the top of the screen.</li>\r\n                <li>A note's volume is indicated by the opacity of the note, as well as the number next to the note's name.</li>\r\n                <li>To change a note's volume, left click and hold on the half-circle at the bottom center of the note. Then, drag your mouse up and down. Dragging up will increase the note's volume, and dragging down will decrease it.</li>\r\n                <li>Notes start with a default volume of 8.</li>\r\n                <li>Notes have a volume range from 1 to 15.</li>\r\n              </ul>\r\n\r\n              <h3>Selecting Multiple Notes</h3>\r\n              <ul>\r\n                <li>To select multiple notes at once, hold <strong>Ctrl</strong> on the grid and drag your mouse.</li>\r\n                <li>If you hold <strong>Ctrl+Shift</strong> and drag, you will \"add on\" to your note selection. <i>(Previously selected notes will not be unselected, and you can select additional notes.)</i></li>\r\n                <li>If you hold <strong>Shift</strong> and drag a note, you will clone it (if that note is highlighted, it will clone all highlighted notes).</li>\r\n                <li>Pressing <strong>Ctrl+A</strong> will select all notes in the grid.</li>\r\n                <li>Pressing the <strong>Backspace</strong> or <strong>Delete</strong> keys will delete all selected notes.</li>\r\n                <li>Holding <strong>Ctrl</strong> and pressing the left or right arrows will move the selected notes a whole grid space (i.e. 1/16th or 1/12th).</li>\r\n                <li>Holding <strong>Ctrl</strong> and pressing the up or down arrows will move the selected notes an octave (if possible).</li>\r\n                <li>Holding <strong>Shift</strong> and pressing the left or right arrows will move the selected notes a fourth of a grid space (i.e. 1/64th or 1/48th).</li>\r\n                <li>Holding <strong>Shift</strong> and pressing the up or down arrows will move the selected notes up or down a single note (if possible).</li>\r\n                <li>Pressing <strong>T</strong> with notes selected will move them into the currently selected track.</li>\r\n              </ul>\r\n\r\n              <h3>Tracks</h3>\r\n              <ul>\r\n                <li>Each track has its own name, instrument, color, and visibility/mute toggle.</li>\r\n                <li>To add a track, click on the blue plus button to the right of the tracks.</li>\r\n                <li>To rename a track, double click on the track's name. When done with renaming, press <strong>Enter</strong>.</li>\r\n                <li>To mute/unmute a track, click on the volume icon next to the track's name.</li>\r\n                <li>Clicking on a note from another track will cause you to switch to that note's track.</li>\r\n                <li>You can remove a track by clicking on the <strong>X</strong>. This will also remove the notes belonging to that track.</li>\r\n                <li>To change the color of a track and its notes, click on the outlined box at the bottom-center of the selected track's tab.</li>\r\n                <li>You can have a minimum of 1 track, and a maximum of 16 tracks.</li>\r\n                <li>The number of tracks you can have at once is dependant on screen width. This is so that smaller screens can still access all of their created tabs easily.</li>\r\n                <li>Hovering over a track tab will show you the name of the track.</li>\r\n                <li>With notes selected, pressing <strong>Ctrl+C</strong> or <strong>Ctrl+X</strong> will copy/cut notes.</li>\r\n                <li>After copying/cutting notes, you can paste them back in with <strong>Ctrl+V</strong>. This will paste all previously copied notes into the current track.</li>\r\n              </ul>\r\n\r\n              <h3>Track Splitting</h3>\r\n              <ul>\r\n                <li>With a track selected, click the \"Split Track\" button. This will separate the track into multiple other tracks (unless that number would exceed 16).</li>\r\n                <li>A track is split from left to right, then top to bottom. This can sometimes lead to weird splits.</li>\r\n                <li>The purpose of this feature is so that you can compose parts of your piece in a single track, then split them up if you need to.</li>\r\n              </ul>\r\n\r\n              <h3>Exporting to MML</h3>\r\n              <ul>\r\n                <li>Clicking on the \"Gen MML\" button will copy the MML of audible tracks to your clipboard.</li>\r\n                <li>Only unmuted/audible tracks will be copied to your clipboard.</li>\r\n                <li>A maximum of four tracks can be exported at once.</li>\r\n                <li>Remember that the fourth track in a score is always the 'song' track.</li>\r\n                <li>Tracks that have multiple notes playing at once will NOT export properly, so be sure to split them before export.</li>\r\n                <li>The exported MML will be moderately optimized for length, but don't expect them to be perfect.</li>\r\n                <li>Tracks will be exported sorted by number of notes. If a track has more notes, then it will be first.</li>\r\n              </ul>\r\n\r\n              <h3>Importing MML</h3>\r\n              <ul>\r\n                <li>Clicking on the \"Import MML From Clipboard\" button will attempt to copy whatever is in your clipboard into new sequencer tracks.</li>\r\n                <li>Available import types are MMLs that start with `MML@` and end with a semicolon (;), or MMLs taken straight from Mabinogi score scrolls.</li>\r\n                <li>Imported MMLs should not have any extraneous spaces, characters, or new line characters. Otherwise, they will not import properly.</li>\r\n                <li>Importing from Mabinogi directly will named the tracks according to which track they came from (e.g. Melody, Harmony 1, Harmony 2, Song)</li>\r\n              </ul>\r\n\r\n              <h3>Tempo</h3>\r\n              <ul>\r\n                <li>You can change the tempo by entering a number at the top left of the page. Note that this will only change the starting tempo of the song.</li>\r\n                <li>If you hold <strong>Shift</strong> and left click on the ruler on top of the grid, you will be prompted to enter a tempo (BPM).</li>\r\n                <li>Tempo markers will automatically be assigned to the currently selected track. This is visible through the color of the marker. Deleting the selected track will delete all associated tempo markers.</li>\r\n                <li>Holding <strong>Alt</strong> while placing a marker will allow for more freedom in placement.</li>\r\n                <li>Clicking on an existing tempo marker will allow you to modify it. By entering an empty string, you will delete the marker.</li>\r\n                <li>Muting a track will also hide the tempo markers associated with that track.</li>\r\n              </ul>\r\n\r\n              <h3>Misc</h3>\r\n              <ul>\r\n                <li>Click and hold on the piano keys to play them. <br><em>(Note: some instruments can only play certain keys)</em></li>\r\n                <li>Press <strong>Space</strong> to play your song. It will start from the marker.</li>\r\n                <li>Press <strong>Space</strong> again to pause your song. If you press <strong>Ctrl+Space</strong>, it will stop the marker where it was.</li>\r\n                <li>Check the <strong>Loop</strong> checkbox to loop your song.</li>\r\n                <li>Click and drag on the timeline to move the marker.</li>\r\n                <li>If you hold <strong>ALT</strong> while dragging, the marker will move freely.</li>\r\n                <li>You can change instruments using the spinner at the top left of the page.</li>\r\n              </ul>\r\n\r\n              <h3>Planned Features</h3>\r\n              <ul>\r\n                <li>MML export that lets you select track order manually.</li>\r\n                <li>MIDI import/export support</li>\r\n                <li>Support for saving/loading \"projects\"</li>\r\n                <li>Undo/Redo functionality</li>\r\n              </ul>\r\n\r\n              <p class=\"credits\">Credits: Made by Daderic</p>\r\n\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        hoverHelp: false,\r\n        isHelpVisible: true, // Initially visible when the page loads\r\n      };\r\n    },\r\n    methods: {\r\n      showHelp() {\r\n        this.isHelpVisible = true;\r\n      },\r\n      closeHelp() {\r\n        this.isHelpVisible = false;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .help-button {\r\n    position: fixed;\r\n    top: 14px;\r\n    right: 280px;\r\n    width: 34px;\r\n    height: 34px;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    font-size: 24px;\r\n    border-color: black;\r\n    font-weight: lighter;\r\n    color: black;\r\n    z-index: 1000;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  .help-button span {\r\n    display: block;\r\n  }\r\n  \r\n  .modal-background {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .help-modal {\r\n    background-color: white;\r\n    padding: 20px;\r\n    width: 500px;\r\n    max-height: 80%;\r\n    overflow-y: auto;\r\n    border-radius: 8px;\r\n    position: relative;\r\n    justify-items: left;\r\n    justify-content: left;\r\n  }\r\n  \r\n  .close-button {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: none;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .fade-enter-active, .fade-leave-active {\r\n    transition: opacity 0.5s;\r\n  }\r\n  .fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {\r\n    opacity: 0;\r\n  }\r\n  \r\n  .help-content {\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n    text-align: left;\r\n  }\r\n\r\n  .help-content h1 {\r\n    text-align: center;\r\n  }\r\n  \r\n  .credits {\r\n    margin-top: 20px;\r\n    font-style: italic;\r\n    text-align: center;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./HelpMenu.vue?vue&type=template&id=2dc8a40b&scoped=true\"\nimport script from \"./HelpMenu.vue?vue&type=script&lang=js\"\nexport * from \"./HelpMenu.vue?vue&type=script&lang=js\"\n\nimport \"./HelpMenu.vue?vue&type=style&index=0&id=2dc8a40b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2dc8a40b\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <div class=\"track-tab-container\" ref=\"tabContainerRef\">\r\n        <div\r\n          v-for=\"(track, index) in tracks\"\r\n          :key=\"track.id\"\r\n          :class=\"['track-tab', { selected: selectedTrackIndex === index }]\"\r\n          @click=\"selectTrack(index)\"\r\n          :style=\"{ backgroundColor: track.color }\"\r\n          :title=\"track.name\"\r\n        >\r\n          <div class=\"tab-header\">\r\n            <input\r\n              v-if=\"track.isEditingName\"\r\n              v-model=\"track.name\"\r\n              @blur=\"track.isEditingName = false\"\r\n              @keyup.enter=\"track.isEditingName = false\"\r\n              class=\"track-name-input\"\r\n            />\r\n            <span\r\n              v-else\r\n              @dblclick=\"track.isEditingName = true\"\r\n              class=\"track-name\"\r\n            >\r\n              {{ track.name }}\r\n            </span>\r\n            <span class=\"mute-icon\" @click.stop=\"toggleMute(index)\">\r\n              {{ track.isMuted ? '🔇' : '🔊' }}\r\n            </span>\r\n            <button @click.stop=\"removeTrack(index)\" class=\"delete-btn\">✖</button>\r\n          </div>\r\n          <div v-if=\"selectedTrackIndex === index\" class=\"color-picker-container\">\r\n            <input\r\n              type=\"color\"\r\n              v-model=\"trackHexColor\"\r\n              class=\"color-picker\"\r\n              @input=\"updateTrackColor\"\r\n            />\r\n          </div>\r\n        </div>\r\n  \r\n        <button\r\n          @click=\"addTrack\"\r\n          class=\"add-track-btn\"\r\n          :disabled=\"!canAddTrack\"\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed, onMounted, onBeforeUnmount, nextTick, reactive } from 'vue';\r\n\r\n  export const EventBus = reactive({});\r\n\r\n  export const tracks = ref([]);\r\n  export const selectedTrackIndex = ref(null);\r\n  export const selectedTrack = computed(() => tracks.value[selectedTrackIndex.value] || null);\r\n  export const trackHexColor = ref('#ffffff');\r\n  export default {\r\n    created() {\r\n      EventBus.addTrack = this.addTrack;\r\n    },\r\n    setup(props, { emit }) {\r\n      const containerWidth = ref(0);\r\n      const tabContainerRef = ref(null);\r\n  \r\n  \r\n      const canAddTrack = computed(() => {\r\n        if (tracks.value.length > 15)\r\n          return false;\r\n        const minWidth = 75;\r\n        const totalWidth = tracks.value.length * minWidth;\r\n        return containerWidth.value - totalWidth - 50 > minWidth; // Limit to 16 tracks\r\n      });\r\n  \r\n      const updateContainerWidth = () => {\r\n        if (tabContainerRef.value) {\r\n          containerWidth.value = tabContainerRef.value.clientWidth; // Get container width\r\n        }\r\n      };\r\n  \r\n      const getRandomColor = () => {\r\n        const hue = Math.floor(Math.random() * 360);\r\n        const saturation = 75 + Math.random() * 25;\r\n        const lightness = 50 + Math.random() * 10;\r\n        \r\n        const chroma = (1 - Math.abs(2 * lightness / 100 - 1)) * (saturation / 100);\r\n        const x = chroma * (1 - Math.abs(((hue / 60) % 2) - 1));\r\n        const m = lightness / 100 - chroma / 2;\r\n  \r\n        let [r, g, b] =\r\n          hue < 60 ? [chroma, x, 0]\r\n          : hue < 120 ? [x, chroma, 0]\r\n          : hue < 180 ? [0, chroma, x]\r\n          : hue < 240 ? [0, x, chroma]\r\n          : hue < 300 ? [x, 0, chroma]\r\n          : [chroma, 0, x];\r\n  \r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n  \r\n        // Return the color in hex format\r\n        return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n      };\r\n  \r\n      const root = process.env.NODE_ENV === 'production' ? '../MabiMML/' : '../';\r\n\r\n      const addTrack = (pointerEvent=null, instr=null, color=null, name=null) => {\r\n        const newTrack = {\r\n          id: tracks.value.length + Date.now(),\r\n          name: name || `Track ${tracks.value.length + 1}`,\r\n          isMuted: false,\r\n          color: color || getRandomColor(),\r\n          isEditingName: false,\r\n          notes: [],\r\n          instrument: instr || { name: 'Lute', program: 0, min: 16, max: 88 },\r\n        };\r\n        tracks.value.push(newTrack);\r\n        selectTrack(tracks.value.length - 1);\r\n        emit('add-track', newTrack, tracks.value.length - 1);\r\n        return newTrack;\r\n      };\r\n  \r\n      const removeTrack = (index) => {\r\n        if (tracks.value.length === 1) return;\r\n\r\n        let confirmation = true;\r\n        if (tracks.value[index].notes.length !== 0)\r\n          confirmation = confirm(`Are you sure you want to delete the track \"${tracks.value[index].name}\"? All notes belonging to this track will also be deleted.`);\r\n        if (!confirmation) return;\r\n\r\n        let trackClone = tracks.value[index];\r\n        tracks.value.splice(index, 1);\r\n  \r\n        if (tracks.value.length === 0) {\r\n          selectedTrackIndex.value = null;\r\n          trackHexColor.value = '#ffffff'; // Reset color picker when no tracks are left\r\n        } else {\r\n          if (index === selectedTrackIndex.value) {\r\n            // If the removed track was selected, select the next available track\r\n            const newIndex = index < tracks.value.length ? index : index - 1;\r\n            selectedTrackIndex.value = newIndex;\r\n            trackHexColor.value = tracks.value[newIndex].color; // Update the color picker to the new selected track's color\r\n          } else if (selectedTrackIndex.value > index) {\r\n            selectedTrackIndex.value--;\r\n          }\r\n  \r\n          // Update color picker for the currently selected track\r\n          if (selectedTrack.value) {\r\n            trackHexColor.value = selectedTrack.value.color;\r\n          }\r\n        }\r\n\r\n        emit('remove-track', trackClone, selectedTrack.value);\r\n      };\r\n  \r\n  \r\n      const selectTrack = (index) => {\r\n        selectedTrackIndex.value = index;\r\n        trackHexColor.value = tracks.value[index].color; // Update color picker when track is selected\r\n        emit('track-selected', tracks.value[index]);\r\n      };\r\n  \r\n      const toggleMute = (index) => {\r\n        tracks.value[index].isMuted = !tracks.value[index].isMuted;\r\n        if (tracks.value[index].isMuted)\r\n          for (const note of tracks.value[index].notes) {\r\n            note.muted = true;\r\n          }\r\n        else {\r\n          for (const note of tracks.value[index].notes) {\r\n            note.muted = false;\r\n          }\r\n        }\r\n        emit('mute-track', index);\r\n      };\r\n  \r\n      const updateTrackColor = (event) => {\r\n        const newColor = event.target.value;\r\n        if (selectedTrack.value) {\r\n          selectedTrack.value.color = newColor;\r\n          trackHexColor.value = newColor; // Update hex color for the picker\r\n          for (const note of selectedTrack.value.notes) {\r\n            note.color = newColor;\r\n          }\r\n        }\r\n        emit('color-change', selectedTrack.value, newColor);\r\n      };\r\n  \r\n      onMounted(() => {\r\n        addTrack(); // Always start with one track\r\n        nextTick(() => {\r\n          updateContainerWidth(); // Get initial container width\r\n        });\r\n        window.addEventListener('resize', updateContainerWidth);\r\n      });\r\n  \r\n      onBeforeUnmount(() => {\r\n        window.removeEventListener('resize', updateContainerWidth);\r\n      });\r\n  \r\n      return {\r\n        tracks,\r\n        selectedTrackIndex,\r\n        trackHexColor,\r\n        containerWidth,\r\n        addTrack,\r\n        removeTrack,\r\n        selectTrack,\r\n        toggleMute,\r\n        updateTrackColor,\r\n        selectedTrack,\r\n        canAddTrack,\r\n        tabContainerRef,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .track-tab-container {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    max-width: 83%;\r\n    background-color: #f1f1f1;\r\n    flex-wrap: nowrap;\r\n    height: 50px;\r\n  }\r\n  \r\n  .track-tab {\r\n    user-select: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: -10px;\r\n    flex-grow: 1;\r\n    min-width: 75px;\r\n    max-width: 200px;\r\n    height: 40px;\r\n    border: 2px solid #ccc;\r\n    border-radius: 8px 8px 0 0;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n    position: relative;\r\n    z-index: 1;\r\n    align-self: flex-end;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .track-tab.selected {\r\n    padding-bottom: 10px;\r\n    z-index: 10;\r\n    border-bottom: none;\r\n  }\r\n  \r\n  .tab-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px 10px;\r\n    border-radius: 8px 8px 0 0;\r\n    font-weight: bold;\r\n    font-size: 1em;\r\n    color: white;\r\n  }\r\n  \r\n  .track-name-input {\r\n    width: 100%;\r\n    font-size: 1em;\r\n    background-color: transparent;\r\n    border: none;\r\n    color: white;\r\n    outline: none;\r\n  }\r\n  \r\n  .track-name {\r\n    color: white;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  \r\n  .mute-icon {\r\n    font-size: 1.2em;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n    color: white;\r\n  }\r\n  \r\n  .delete-btn {\r\n    background: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: white;\r\n    font-size: 1.1em;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .add-track-btn {\r\n    user-select: none;\r\n    width: 50px;\r\n    height: 50px;\r\n    font-size: 2em;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 8px;\r\n    margin-left: 12px;\r\n    flex-shrink: 0;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 5;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .add-track-btn:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .color-picker-container {\r\n  }\r\n  \r\n  .color-picker {\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  .track-tab:hover::after {\r\n    content: attr(title);\r\n    position: absolute;\r\n    bottom: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    color: white;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    white-space: nowrap;\r\n    z-index: 10;\r\n    margin-bottom: 5px;\r\n    opacity: 0;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n  \r\n  .track-tab:hover::after {\r\n    opacity: 1;\r\n  }\r\n  </style>","import { render } from \"./Tracks.vue?vue&type=template&id=7c7d4df7&scoped=true\"\nimport script from \"./Tracks.vue?vue&type=script&lang=js\"\nexport * from \"./Tracks.vue?vue&type=script&lang=js\"\n\nimport \"./Tracks.vue?vue&type=style&index=0&id=7c7d4df7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c7d4df7\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"tempo-marker\" :style=\"{ left: left + 'px', visibility: visible}\" @click=\"clickMarker\">\r\n      <div class=\"tempo-triangle\" :style=\"{ borderTop: '10px solid ' + color, visibility: visible }\"></div>\r\n      <div class=\"tempo-label\" :style=\"{ visibility: visible }\">T{{ tempo }}</div>\r\n    </div>\r\n</template>\r\n  \r\n  \r\n<script>\r\nexport default {\r\n    props: {\r\n        left: Number,\r\n        tempo: Number,\r\n        index: Number, // For identifying which marker to remove\r\n        color: String,\r\n        visible: String\r\n    },\r\n    emits: ['click'],\r\n    setup(props, { emit }) {\r\n        const clickMarker = (event) => {\r\n            emit('click', event, props.index);\r\n        };\r\n\r\n        return {\r\n        clickMarker,\r\n        };\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n    .tempo-marker {\r\n        z-index: 1;\r\n        position: absolute;\r\n        bottom: 0;\r\n        transform: translateX(-50%);\r\n        cursor: pointer;\r\n        pointer-events: auto; /* Allows clicking */\r\n    }\r\n\r\n    .tempo-triangle {\r\n        z-index: 1;\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 6px solid transparent;\r\n        border-right: 6px solid transparent;\r\n        border-top: 10px solid #333; /* Dark grey color */\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n    }\r\n\r\n    .tempo-label {\r\n        z-index: 13;\r\n        position: absolute;\r\n        top: -20px; /* Adjusts the label position above the triangle */\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        font-size: 12px;\r\n        background-color: #fff;\r\n        color: #333; /* Dark grey text */\r\n        padding: 2px 4px;\r\n        border-radius: 3px;\r\n        white-space: nowrap;\r\n        border: 1px solid #ccc; /* Optional border to highlight the label */\r\n    }\r\n</style>\r\n  \r\n  ","import { render } from \"./TempoMarker.vue?vue&type=template&id=770e7685&scoped=true\"\nimport script from \"./TempoMarker.vue?vue&type=script&lang=js\"\nexport * from \"./TempoMarker.vue?vue&type=script&lang=js\"\n\nimport \"./TempoMarker.vue?vue&type=style&index=0&id=770e7685&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-770e7685\"]])\n\nexport default __exports__","import { render } from \"./PianoRoll.vue?vue&type=template&id=61b8a8dc&scoped=true\"\nimport script from \"./PianoRoll.vue?vue&type=script&lang=js\"\nexport * from \"./PianoRoll.vue?vue&type=script&lang=js\"\n\nimport \"./PianoRoll.vue?vue&type=style&index=0&id=61b8a8dc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-61b8a8dc\"]])\n\nexport default __exports__","import { render } from \"./Sequencer.vue?vue&type=template&id=2e49d91b&scoped=true\"\nimport script from \"./Sequencer.vue?vue&type=script&lang=js\"\nexport * from \"./Sequencer.vue?vue&type=script&lang=js\"\n\nimport \"./Sequencer.vue?vue&type=style&index=0&id=2e49d91b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e49d91b\"]])\n\nexport default __exports__","import { render } from \"./PatternEditor.vue?vue&type=template&id=233a7f0a&scoped=true\"\nimport script from \"./PatternEditor.vue?vue&type=script&lang=js\"\nexport * from \"./PatternEditor.vue?vue&type=script&lang=js\"\n\nimport \"./PatternEditor.vue?vue&type=style&index=0&id=233a7f0a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-233a7f0a\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=45718dbe\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=45718dbe&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport HelpMenu from './components/HelpMenu.vue'\n\ncreateApp(App).mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/MabiMML/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmusic_sequencer\"] = self[\"webpackChunkmusic_sequencer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(18988); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","alt","src","_imports_0","id","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_createVNode","_component_PatternEditor","class","ref","_component_PianoRoll","key","style","for","_hoisted_20","_hoisted_21","onClick","_cache","args","$setup","playSequence","_createTextVNode","type","$event","loopSong","_hoisted_3","autoScrollSong","_component_HelpMenu","showSuccessNotification","_hoisted_4","_toDisplayString","successNotificationText","_createCommentVNode","showFailedNotification","_hoisted_5","failedNotificationText","_component_Tracks","onTrackSelected","handleTrackSelected","onAddTrack","handleAddTrack","onRemoveTrack","handleRemoveTrack","onMuteTrack","handleMuteTrack","onColorChange","updateColor","_hoisted_6","_hoisted_7","_hoisted_8","selectedInstrument","onChange","changeInstrument","_renderList","instruments","instrument","index","value","name","_hoisted_9","_hoisted_10","_hoisted_11","tempo","min","max","number","trackify","genMML","parseMMLFromClipboard","_hoisted_12","_hoisted_13","gridWidth","displayName","width","_hoisted_14","_hoisted_15","currentNoteVolume","_hoisted_16","_hoisted_17","octaves","octave","_hoisted_18","notes","slice","reverse","note","_normalizeClass","isBlack","onMousedown","startNote","onMouseover","mouseOverNote","onMouseup","endNote","onMouseleave","mouseLeaveNote","_normalizeStyle","instrKeyMin","instrKeyMax","_hoisted_19","handleRulerClick","gridSpan","zoomScalar","Math","ceil","left","markerReplayPosition","markerPosition","_hoisted_22","tempoMarkers","tempoMarker","_createBlock","_component_TempoMarker","color","visible","muted","clickTempoMarker","_hoisted_23","background","backgroundStyle","_withModifiers","handleGridClick","onContextmenu","_ctx","startNoteRemove","onWheel","handleGridScroll","notesInGrid","top","gridHeight","hexToRgba","volume","highlighted","startDrag","removeNote","endDrag","startResize","_hoisted_25","startVolumeChange","_hoisted_26","_hoisted_24","isSelecting","rectangleStyle","$options","showHelp","$data","hoverHelp","isHelpVisible","_Transition","default","_withCtx","closeHelp","_","data","methods","this","__exports__","tracks","track","selected","selectedTrackIndex","selectTrack","backgroundColor","title","isEditingName","onBlur","onKeyup","_withKeys","onDblclick","toggleMute","isMuted","removeTrack","trackHexColor","onInput","updateTrackColor","addTrack","disabled","canAddTrack","EventBus","reactive","selectedTrack","computed","created","setup","props","emit","containerWidth","tabContainerRef","length","minWidth","totalWidth","updateContainerWidth","clientWidth","getRandomColor","hue","floor","random","saturation","lightness","chroma","abs","x","m","r","g","b","round","toString","pointerEvent","instr","newTrack","Date","now","program","push","confirmation","confirm","trackClone","splice","newIndex","event","newColor","target","onMounted","nextTick","window","addEventListener","onBeforeUnmount","removeEventListener","$props","visibility","clickMarker","borderTop","Number","String","emits","components","HelpMenu","Tracks","TempoMarker","root","pianoRoll","grid","synth","context","isMouseDown","midiBuilder","currentNoteLength","draggingNotes","resizingNotes","volumeChangingNotes","startX","startY","innerWidth","scrollX","selectedNotes","currentX","currentY","ruler","seq","isPlaying","height","border","noteNames","blackNotes","map","includes","noteClipboard","watchEffect","maxRightPosition","indexOf","async","oldTrack","filter","marker","parentTrack","trackIndex","loadSoundFont","response","fetch","soundFontArrayBuffer","arrayBuffer","error","console","handleBeforeUnload","message","preventDefault","returnValue","gridWrapper","document","querySelector","updateRuler","handleKeyPress","AudioContext","audioWorklet","addModule","Synthetizer","destination","undefined","chorusEnabled","reverbEnabled","setMainVolume","setLogLevel","isReady","button","shiftKey","placeTempoMarker","startMarkerDrag","granularity","altKey","clientX","getBoundingClientRect","enteredTempo","prompt","isNaN","stopPlaying","updateMarkerPos","onMarkerDrag","onMarkerDragEnd","markerInterval","markerStartPos","startTempo","tempoIdx","startMarkerAnim","sort","a","doMarkerAnim","timeChange","tick","currentTime","scrollLeft","screen","loop","clearInterval","setInterval","noteWidthToMML","outString","mmlWidth","noteLengths","i","val1","val2","result","getClosestWidth","noteCombination","join","targetWidth","amount","dp","Array","fill","Infinity","usedNotes","noteValue","minNotes","currentAmount","stopMarkerAnim","fromClick","rulerRect","newPos","gridSnap","code","ctrlKey","selectNote","showSuccessMessage","movementValue","noteName","pitch","clearSelection","newNote","start","end","unshift","stop","programChange","MIDIBuilder","resume","notesAdded","audibleTracks","addNewTrack","forEach","containingTrack","some","n","channel","noteStartTime","noteDuration","markerTime","startTime","duration","addEvent","addNoteOn","addNoteOff","tempoStartTime","tempoChangeTime","addSetTempo","flush","writeMIDIFile","Sequencer","binary","skipToFirstNoteOn","addOnSongEndedEvent","play","noteOn","noteOff","text","timeout","setTimeout","showFailureMessage","startPositions","Map","placeNote","draggingNote","set","y","clientY","onDrag","outOfBounds","newPositions","offGridNote","noteSnapScale","noteDelta","startPos","get","dx","dy","newLeft","newTop","clear","startResizeData","onResize","endResize","allInBounds","newWidths","startData","newWidth","startingNoteVolume","onVolumeChange","endVolumeChange","newVolume","startSelection","startPlacingNote","deltaY","sign","z1","l","z2","rect","onSelectionMove","onSelectionEnd","checkIntersections","selectionRect","right","bottom","itemRect","intersects","rect1","rect2","scrollTop","existingNote","find","notesList","trackWrappers","trackWrapper","originalColor","alpha","hex","replace","split","char","parseInt","substring","copyToClipboard","navigator","clipboard","writeText","then","catch","err","rightNote","leftNote","log","prevNoteEnd","trackTempoMarkers","notables","gap","restStr","replaceAll","noteStr","k","outTracks","newTracks","tokens","tokenizeMML","simplifiedTokens","simplifyMML","simplifiedMML","stringifyMML","getEnharmonicEquivalent","accidental","noteIndex","patterns","LENGTH","NOTE","REST","TIE","VOLUME","TEMPO","OCTAVE","mmlString","regex","Object","entries","match","exec","tokenList","newTokenList","JSON","parse","stringify","totalPasses","pass","token","tokenLength","tokenVolume","tokenTempo","restLength","notePitch","noteOctave","noteKey","diff","octaveChanges","symbol","j","prevToken","noteCount","noteIndexes","token2","outStr","mmlToNewTrack","mmlTokens","builderX","previousNote","nextNote","noteLength","startsWith","dotted","sharp","flat","Ldotted","tokenOctave","lengthNum","parseMMLNotation","segments","toUpperCase","segment","parseMabiNotation","mabiString","lines","tokenizedSections","line","trim","section","parseMML","endsWith","textFromClipboard","readText","fromList","buttons","oldSize","PianoRoll","scrollContainer","PatternEditor","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","getter","__esModule","d","definition","o","defineProperty","enumerable","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","p","baseURI","self","location","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}