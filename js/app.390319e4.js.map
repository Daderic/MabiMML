{"version":3,"file":"js/app.390319e4.js","mappings":"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","sources":["webpack://music-sequencer/./src/App.vue","webpack://music-sequencer/./src/components/PatternEditor.vue","webpack://music-sequencer/./src/components/PianoRoll.vue","webpack://music-sequencer/./src/components/HelpMenu.vue","webpack://music-sequencer/./src/components/HelpMenu.vue?d290","webpack://music-sequencer/./src/components/Tracks.vue","webpack://music-sequencer/./src/components/Tracks.vue?6cb4","webpack://music-sequencer/./src/components/TempoMarker.vue","webpack://music-sequencer/./src/components/TempoMarker.vue?dda8","webpack://music-sequencer/./src/components/PianoRoll.vue?b086","webpack://music-sequencer/./src/components/Sequencer.vue","webpack://music-sequencer/./src/components/PatternEditor.vue?415c","webpack://music-sequencer/./src/App.vue?7ccd","webpack://music-sequencer/./src/main.js","webpack://music-sequencer/webpack/bootstrap","webpack://music-sequencer/webpack/runtime/chunk loaded","webpack://music-sequencer/webpack/runtime/compat get default export","webpack://music-sequencer/webpack/runtime/define property getters","webpack://music-sequencer/webpack/runtime/global","webpack://music-sequencer/webpack/runtime/hasOwnProperty shorthand","webpack://music-sequencer/webpack/runtime/publicPath","webpack://music-sequencer/webpack/runtime/jsonp chunk loading","webpack://music-sequencer/webpack/startup"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <div id=\"app\">\n    <PatternEditor />\n  </div>\n</template>\n\n<script>\nimport PatternEditor from './components/PatternEditor.vue';\nimport PianoRoll from './components/PianoRoll.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    PatternEditor\n  }\n}\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n  }\n</style>\n","<template>\r\n    <div class=\"pattern-editor\">\r\n        <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n            <PianoRoll />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport PianoRoll from './PianoRoll.vue';\r\nimport Sequencer from './Sequencer.vue';\r\n\r\nexport default {\r\n    name: 'PatternEditor',\r\n    components: {\r\n        PianoRoll\r\n    },\r\n    setup() {\r\n        const scrollContainer = ref(null);\r\n\r\n        return {\r\n            scrollContainer\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.pattern-editor {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: auto;\r\n    display: flex;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"piano-container\">\r\n        <button class=\"play-button\" @click=\"playSequence\">Play Sequence</button>\r\n        <label class=\"loop-wrapper\">\r\n            Loop:\r\n            <input type=\"checkbox\" v-model=\"loopSong\"/>\r\n        </label>\r\n        <HelpMenu />\r\n        <div v-if=\"showSuccessNotification\" class=\"copyNotification\">\r\n            {{ successNotificationText }}\r\n        </div>\r\n        <div v-if=\"showFailedNotification\" class=\"copyNotification\" style=\"background-color: #d44;\">\r\n            {{ failedNotificationText }}\r\n        </div>\r\n        \r\n        <Tracks @track-selected=\"handleTrackSelected\" @add-track=\"handleAddTrack\" @remove-track=\"handleRemoveTrack\" @mute-track=\"handleMuteTrack\" @color-change=\"updateColor\" />\r\n        <div class=\"controls\">\r\n            <div class=\"instrument-selector\">\r\n                <label for=\"instrument-select\">Select Instrument: </label>\r\n                <select id=\"instrument-select\" v-model=\"selectedInstrument\" @change=\"changeInstrument\">\r\n                    <option v-for=\"(instrument, index) in instruments\" :key=\"index\" :value=\"instrument\">\r\n                        {{ instrument.name }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"tempo-selector\">\r\n                <label for=\"tempo-select\">Tempo: </label>\r\n                <input type=\"number\" id=\"tempo-select\" v-model.number=\"tempo\" min=\"40\" max=\"240\">\r\n            </div>\r\n            <button class=\"track-splitter\" @click=\"trackify\">Split Track</button>\r\n            <button class=\"MML-converter\" @click=\"genMML\" style=\"margin-left: 10px;\">Gen MML</button>\r\n            <div class=\"grid-division-selector\">\r\n                <label for=\"grid-select\" style=\"padding-left: 10px\">Grid Spacing: </label>\r\n                <select id=\"grid-select\" v-model=\"gridWidth\">\r\n                    <option v-for=\"(value) in [{displayName: '16ths', width: 256/16}, {displayName: '12ths', width: 256/12}]\" :key=\"value.displayName\" :value=\"value.width\">\r\n                        {{ value.displayName }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <label style=\"padding: 10px;\"> {{ 'Current Note Volume: ' + currentNoteVolume }} </label>\r\n        </div>\r\n        <div class=\"piano-roll\" ref=\"pianoRoll\">\r\n            <div class=\"piano-keys\">\r\n                <!-- Generate piano keys for multiple octaves -->\r\n                <div v-for=\"octave in octaves\" :key=\"octave\" class=\"octave\">\r\n                    <div class=\"keys-wrapper\">\r\n                        <!-- Keys should be in reverse order to have higher notes at the top -->\r\n                        <div v-for=\"(note, index) in notes.slice().reverse()\" :key=\"note.name\"\r\n                            :class=\"['piano-key', note.isBlack ? 'black-key' : 'white-key']\"\r\n                            @mousedown=\"startNote(0, note, octave)\"\r\n                            @mouseover=\"mouseOverNote(0, note, octave)\"\r\n                            @mouseup=\"endNote(0, note, octave)\"\r\n                            @mouseleave=\"mouseLeaveNote(0, note, octave)\"\r\n                            :style=\"{\r\n                                zIndex: note.isBlack ? 1 : 0,\r\n                                background: note.index + 12*octave < instrKeyMin || note.index + 12*octave > instrKeyMax ? '#d44' : (note.isBlack ? '#000' : '#fff')\r\n                                }\">\r\n                            {{ note.name + octave }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"ruler\" ref=\"ruler\" \r\n                @mousedown=\"handleRulerClick\"\r\n                :style=\"{ width: 'calc( 10% + ' + gridSpan + 'px )' }\">\r\n                <div\r\n                    v-for=\"index in Math.ceil(gridSpan / 256)\"\r\n                    :key=\"index\"\r\n                    class=\"ruler-tick-label\"\r\n                    :style=\"{ left: `calc(${(index - 1) * 256}px)` }\"\r\n                    >\r\n                    {{ index }}\r\n                </div>\r\n                <div class=\"marker-replay-triangle\" :style=\"{ left: markerReplayPosition + 'px' }\"></div>\r\n                <div class=\"marker-wrapper\" :style=\"{ left: markerPosition + 'px' }\">\r\n                    <div class=\"marker-triangle\"></div>\r\n                    <div class=\"marker-line\"></div>\r\n                </div>\r\n\r\n                <TempoMarker \r\n                    v-for=\"(tempoMarker, index) in tempoMarkers\"\r\n                    :key=\"tempoMarker.left\"\r\n                    :left=\"tempoMarker.left+1\"\r\n                    :tempo=\"tempoMarker.tempo\"\r\n                    :index=\"index\"\r\n                    :color=\"tempoMarker.color\"\r\n                    @click=\"clickTempoMarker\"\r\n                />\r\n\r\n            </div>\r\n            <div class=\"grid-wrapper\">\r\n                <div class=\"grid\" ref=\"grid\" :style=\"{ width: gridSpan + 'px', background: backgroundStyle.background }\" @mousedown.left=\"handleGridClick\" @contextmenu.prevent=\"startNoteRemove\">\r\n                    <div v-for=\"note in notesInGrid\" :key=\"note.id\" class=\"note\"\r\n                        :style=\"{\r\n                            left: note.left + 'px',\r\n                            top: note.top + 'px',\r\n                            width: note.width + 'px',\r\n                            height: gridHeight + 'px',\r\n                            visibility: note.muted ? 'hidden' : 'visible',\r\n                            pointerEvents: note.muted ? 'none' : 'auto',\r\n                            backgroundColor: hexToRgba(note.color, (note.volume+1)/15),//note.highlighted ? 'rgba(255, 0, 0, 0.5)' : 'rgba(0, 120, 255, 0.5)'\r\n                            border: `${note.highlighted ? 2 : 1}px solid ${note.highlighted ? 'white' : note.color}`,\r\n                        }\"\r\n                        @mousedown.left=\"startDrag(note, $event)\"\r\n                        @mouseup.left=\"endDrag\"\r\n                        @mousedown.right.prevent=\"removeNote(note, false)\">\r\n                        <div class=\"resize-handle\" @mousedown=\"startResize(note, $event)\"></div>\r\n                        <div class=\"volume-handle\" @mousedown=\"startVolumeChange(note, $event)\"></div>\r\n                        {{ note.name + `(${note.volume})` }} <!-- + ` ${noteWidthToMML(note.width + 1)}` -->\r\n                    </div>\r\n                    <div v-if=\"isSelecting\" class=\"selection-rect\" :style=\"rectangleStyle\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watchEffect, computed, onBeforeUnmount } from 'vue';\r\nimport { Synthetizer, MIDIBuilder, writeMIDIFile, Sequencer } from \"spessasynth_lib\";\r\nimport HelpMenu from '@/components/HelpMenu.vue'\r\nimport Tracks from '@/components/Tracks.vue'\r\nimport { selectedTrack, tracks, selectedTrackIndex, trackHexColor, EventBus } from '@/components/Tracks.vue'\r\nimport { _ } from 'core-js';\r\nimport TempoMarker from './TempoMarker.vue';\r\n\r\nexport default {\r\n    name: 'PianoRoll',\r\n    components: {\r\n        HelpMenu, Tracks, TempoMarker\r\n    },\r\n    setup() {\r\n        const root = process.env.NODE_ENV === 'production' ? '../MabiMML/' : '../';\r\n        const pianoRoll = ref(null);\r\n        const grid = ref(null);\r\n        const synth = ref(null);\r\n        const context = ref(null);\r\n        const isMouseDown = ref(false);\r\n        const selectedInstrument = ref({ name: 'Lute', program: 0, min: 16, max: 88 });\r\n        const midiBuilder = ref(null);\r\n        const tempo = ref(120);\r\n        const loopSong = ref(false);\r\n\r\n        // const instruments = ref([\r\n        //     { name: 'Piano', sf2: root + 'soundfonts/piano.sf2' },\r\n        //     { name: 'Harp', sf2: root + 'soundfonts/harp.sf2' },\r\n        //     { name: 'Lyre', sf2: root + 'soundfonts/lyre.sf2' },\r\n        //     { name: 'Lute', sf2: root + 'soundfonts/lute.sf2' },\r\n        //     { name: 'Ukulele', sf2: root + 'soundfonts/ukulele.sf2' },\r\n        //     { name: 'Mandolin', sf2: root + 'soundfonts/mandolin.sf2' },\r\n        //     { name: 'Electric Guitar', sf2: root + 'soundfonts/electric_guitar.sf2' },\r\n        //     { name: 'Violin', sf2: root + 'soundfonts/violin.sf2' },\r\n        //     { name: 'Cello', sf2: root + 'soundfonts/cello.sf2' },\r\n        //     { name: 'Flute', sf2: root + 'soundfonts/flute.sf2' },\r\n        //     { name: 'Whistle', sf2: root + 'soundfonts/whistle.sf2' },\r\n        //     { name: 'Chalumeau', sf2: root + 'soundfonts/chalumeau.sf2' },\r\n        //     { name: 'Roncadora', sf2: root + 'soundfonts/roncadora.sf2' },\r\n        //     { name: 'Physis Tuba', sf2: root + 'soundfonts/tuba.sf2' },\r\n        //     { name: 'Festival Lute', sf2: root + 'soundfonts/festival_lute.sf2' },\r\n        //     { name: 'Festival Ukulele', sf2: root + 'soundfonts/festival_ukulele.sf2' },\r\n        //     { name: 'Festival Mandolin', sf2: root + 'soundfonts/festival_mandolin.sf2' },\r\n        //     { name: 'Fest/Tuned Flute', sf2: root + 'soundfonts/festival_flute.sf2' },\r\n        //     { name: 'Fest/Tuned Whistle', sf2: root + 'soundfonts/festival_whistle.sf2' },\r\n        //     { name: 'Tuned Violin', sf2: root + 'soundfonts/tuned_violin.sf2' },\r\n        //     { name: 'Tuned Cello', sf2: root + 'soundfonts/tuned_cello.sf2' },\r\n        //     { name: 'Drum Kit', sf2: root + 'soundfonts/drum_kit.sf2' },\r\n        //     { name: 'Bass Drum', sf2: root + 'soundfonts/bass_drum.sf2' },\r\n        //     { name: 'Snare Drum', sf2: root + 'soundfonts/snare_drum.sf2' },\r\n        //     { name: 'Cymbals', sf2: root + 'soundfonts/cymbals.sf2' },\r\n        //     { name: 'Hand Chimes', sf2: root + 'soundfonts/hand_chimes.sf2' },\r\n        //     { name: 'Male Voice', sf2: root + 'soundfonts/male_voice.sf2' },\r\n        //     { name: 'Male Chorus', sf2: root + 'soundfonts/male_chorus.sf2' },\r\n        //     { name: 'Female Voice', sf2: root + 'soundfonts/female_voice.sf2' },\r\n        //     { name: 'Female Chorus', sf2: root + 'soundfonts/female_chorus.sf2' },\r\n        // ]);\r\n\r\n        const instruments = ref([\r\n            { name: 'Lute', program: 0, min: 16, max: 88 },\r\n            { name: 'Ukulele', program: 1, min: 16, max: 88 },\r\n            { name: 'Mandolin', program: 2, min: 16, max: 88 },\r\n            { name: 'Whistle', program: 3, min: 12, max: 88 },\r\n            { name: 'Roncadora', program: 4, min: 12, max: 88 },\r\n            { name: 'Flute', program: 5, min: 15, max: 88 },\r\n            { name: 'Chalumeau', program: 6, min: 16, max: 88 },\r\n            { name: 'Tuba', program: 18, min: 12, max: 95 },\r\n            { name: 'Lyre', program: 19, min: 9, max: 80 },\r\n            { name: 'Electric Guitar', program: 20, min: 4, max: 99 },\r\n            { name: 'Piano', program: 21, min: 0, max: 84 },\r\n            { name: 'Violin', program: 22, min: 16, max: 59 },\r\n            { name: 'Cello', program: 23, min: 0, max: 46 },\r\n            { name: 'Harp', program: 24, min: 9, max: 83 },\r\n            { name: 'Tuned Violin', program: 25, min: 16, max: 59 },\r\n            { name: 'Tuned Cello', program: 26, min: 0, max: 46 },\r\n            { name: 'Drum Kit', program: 27, min: 29, max: 53 },\r\n            { name: 'Festival Lute', program: 50, min: 16, max: 88 },\r\n            { name: 'Festival Ukulele', program: 51, min: 16, max: 88 },\r\n            { name: 'Festival Mandolin', program: 52, min: 16, max: 88 },\r\n            { name: 'Fest/Tuned Whistle', program: 53, min: 12, max: 83 },\r\n            { name: 'Fest/Tuned Flute', program: 54, min: 15, max: 83 },\r\n            { name: 'Bass Drum', program: 66, min: 12, max: 84 },\r\n            { name: 'Snare Drum', program: 67, min: 12, max: 84 },\r\n            { name: 'Cymbals', program: 68, min: 12, max: 84 },\r\n            { name: 'Hand Chimes', program: 77, min: 9, max: 80 },\r\n            { name: 'Female Chorus', program: 110, min: 19, max: 48 },\r\n            { name: 'Male Chorus', program: 100, min: 14, max: 46 },\r\n            { name: 'Male Voice', program: 120, min: 17, max: 49 },\r\n            { name: 'Female Voice', program: 121, min: 12, max: 45 },\r\n        ]);\r\n\r\n\r\n        let currentNoteLength = ref(16);\r\n        let currentNoteVolume = ref(8);\r\n        const gridWidth = ref(256/16); // This makes the base size an x-th note\r\n        const gridHeight = 24;\r\n        const notesInGrid = ref([]);\r\n        const draggingNotes = ref([]);\r\n        const resizingNotes = ref([]);\r\n        const volumeChangingNotes = ref([]);\r\n        const startX = ref(0);\r\n        const startY = ref(0);\r\n        const startLeft = ref(0);\r\n        const startTop = ref(0);\r\n        const startWidth = ref(0);\r\n        const gridSpan = ref(window.innerWidth);\r\n\r\n        const scrollX = ref(0);\r\n\r\n        const selectedNotes = ref([]);\r\n        const isSelecting = ref(false);\r\n        const currentX = ref(0);\r\n        const currentY = ref(0);\r\n\r\n        const ruler = ref(null);\r\n        const markerPosition = ref(0);\r\n        const markerReplayPosition = ref(0);\r\n        const tempoMarkers = ref([]);\r\n        const seq = ref(null);\r\n        const isPlaying = ref(false);\r\n\r\n        const rectangleStyle = computed(() => ({\r\n            left: `${Math.min(startX.value, currentX.value)}px`,\r\n            top: `${Math.min(startY.value, currentY.value)}px`,\r\n            width: `${Math.abs(currentX.value - startX.value)}px`,\r\n            height: `${Math.abs(currentY.value - startY.value)}px`,\r\n            backgroundColor: 'rgba(0, 100, 255, 0.3)', // Transparent blue\r\n            border: '1px solid rgba(0, 100, 255, 0.5)' // Optional border\r\n        }));\r\n\r\n        const backgroundStyle = computed(() => ({\r\n            background: `repeating-linear-gradient( /*This is the horizontal lines*/\r\n                0deg,\r\n                #bbb,\r\n                #bbb 2px,\r\n                transparent 2px,\r\n                transparent 24px\r\n            ),\r\n            repeating-linear-gradient( /*This is the Bar line*/\r\n                90deg,\r\n                #777,\r\n                #777 2px,\r\n                transparent 2px,\r\n                transparent 256px\r\n            ),\r\n            repeating-linear-gradient( /*This is the vertical lines*/\r\n                90deg,\r\n                #c0c0c0,\r\n                #c0c0c0 2px,\r\n                transparent 2px,\r\n                transparent ${gridWidth.value}px\r\n            ),\r\n            repeating-linear-gradient(/*This is the background colors*/\r\n                90deg,\r\n                #e0e0e0,\r\n                #e0e0e0 64px,\r\n                #ccc 64px,\r\n                #ccc 128px\r\n            )`\r\n        }));\r\n\r\n        // Left-hand Piano notes, not grid notes\r\n        const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\r\n        const blackNotes = ['C#', 'D#', 'F#', 'G#', 'A#'];\r\n        const notes = ref(noteNames.map((name, index) => ({\r\n            name: name,\r\n            index: index,\r\n            isBlack: blackNotes.includes(name)\r\n        })));\r\n        const octaves = ref([0, 1, 2, 3, 4, 5, 6, 7, 8]);\r\n\r\n        const showSuccessNotification = ref(false);\r\n        const successNotificationText = ref('');\r\n        const showFailedNotification = ref(false);\r\n        const failedNotificationText = ref('');\r\n\r\n        const instrKeyMin = ref(16);\r\n        const instrKeyMax = ref(88);\r\n\r\n        let noteClipboard = [];\r\n\r\n        watchEffect(() => {\r\n            const maxRightPosition = Math.max(...notesInGrid.value.map(note => note.left + note.width), 0);\r\n            gridSpan.value = Math.max(maxRightPosition + window.innerWidth, window.innerWidth);\r\n        });\r\n\r\n        const addTrack = (instr, color, name) => {\r\n            return EventBus.addTrack(null, instr, color, name);\r\n        };\r\n\r\n        const handleTrackSelected = (track) => {\r\n            //console.log(newInstrument);\r\n            //console.log(track);\r\n            selectedInstrument.value = track.instrument;\r\n            selectedTrackIndex.value = tracks.value.indexOf(track);\r\n            changeInstrument();\r\n        };\r\n\r\n        const handleAddTrack = async (newTrack, index) => {\r\n            // if (synth.value)\r\n            //     await synth.value.soundfontManager.addNewSoundFont(newTrack.instrument, `main${index}`, index);\r\n        };\r\n\r\n        const handleRemoveTrack = async (oldTrack, newTrack) => {\r\n            for (const note of oldTrack.notes) {\r\n                removeNote(note, true);\r\n            }\r\n\r\n            tempoMarkers.value = tempoMarkers.value.filter(marker => marker.parentTrack.id !== oldTrack.id);\r\n\r\n            // if (selectedTrackIndex.value === newTrack.index)\r\n            //     selectedInstrument.value = newTrack.instrument;\r\n            // if (synth.value)\r\n            //     await synth.value.soundfontManager.deleteSoundFont(`main${index}`);\r\n        };\r\n\r\n        const handleMuteTrack = async () => {\r\n            if (isPlaying.value)\r\n                playSequence();\r\n        };\r\n\r\n        const updateColor = (track, newColor) => {\r\n            for (const marker of tempoMarkers.value) {\r\n                if (marker.parentTrack === track) {\r\n                    marker.color = newColor;\r\n                }\r\n            }\r\n        };\r\n\r\n        const loadSoundFont = async () => {\r\n            try {\r\n                const response = await fetch(root + 'soundfonts/mabi_instruments_high_quality.sf3');\r\n                const soundFontArrayBuffer = await response.arrayBuffer();\r\n                return soundFontArrayBuffer;\r\n            } catch (error) {\r\n                console.error(\"Failed to load SoundFont:\", error);\r\n                return null;\r\n            }\r\n        };\r\n\r\n        const handleBeforeUnload = (event) => {\r\n            const message = 'Leave Site? Changes you made may not be saved.';\r\n            event.preventDefault();\r\n            event.returnValue = message;\r\n            return 'message';\r\n        }\r\n\r\n        onMounted(async () => {\r\n            try {\r\n\r\n                const gridWrapper = document.querySelector('.grid-wrapper');\r\n                if (gridWrapper) {\r\n                    gridWrapper.addEventListener('scroll', updateRuler);\r\n                    updateRuler();\r\n                }\r\n\r\n                document.addEventListener('keydown', handleKeyPress);\r\n                window.addEventListener('beforeunload', handleBeforeUnload);\r\n                // Setting up audio context\r\n                context.value = new AudioContext();\r\n\r\n                await context.value.audioWorklet.addModule(root + \"worklet_processor.min.js\");\r\n                const soundFontArrayBuffer = await loadSoundFont();\r\n                if (!soundFontArrayBuffer) return;\r\n                synth.value = new Synthetizer(context.value.destination, soundFontArrayBuffer, true, undefined, {chorusEnabled: false, reverbEnabled: false});\r\n                synth.value.setMainVolume(2);\r\n                await synth.value.isReady;\r\n\r\n            } catch (error) {\r\n                console.error(\"Error initializing sequencer or synthesizer:\", error);\r\n            }\r\n        });\r\n\r\n        onBeforeUnmount(() => {\r\n            window.removeEventListener('beforeunload', handleBeforeUnload);\r\n        });\r\n\r\n        const handleRulerClick = (event) => {\r\n            if (event.button === 0) {\r\n                if (!event.shiftKey) {\r\n                    startMarkerDrag(event);\r\n                } else {\r\n                    placeTempoMarker(event);\r\n                }\r\n            }\r\n        };\r\n\r\n        const placeTempoMarker = (event) => {\r\n            const granularity = event.altKey ? gridWidth.value/4 : gridWidth.value;\r\n            const left = Math.round((event.clientX - ruler.value.getBoundingClientRect().left) / granularity) * granularity;\r\n            const enteredTempo = prompt(\"Enter tempo (BPM):\", \"120\");\r\n            //console.log(enteredTempo);\r\n            if (enteredTempo !== null && !isNaN(enteredTempo) && enteredTempo !== '') {\r\n                tempoMarkers.value.push({\r\n                    left: left,\r\n                    tempo: Number(enteredTempo),\r\n                    color: selectedTrack.value.color,\r\n                    parentTrack: selectedTrack.value\r\n                });\r\n            }\r\n        };\r\n\r\n        const clickTempoMarker = (event, index) => {\r\n            event.preventDefault();\r\n            //console.log(event);\r\n            if (event.button !== 0)\r\n                return;\r\n            const enteredTempo = prompt(\"Enter tempo (BPM):\", \"120\");\r\n            if (enteredTempo === null)\r\n                return;\r\n            if (!isNaN(enteredTempo) && enteredTempo !== '') {\r\n                tempoMarkers.value[index].tempo = Number(enteredTempo);\r\n            } else {\r\n                tempoMarkers.value.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        const startMarkerDrag = (event) => {\r\n            if (isPlaying) {\r\n                stopPlaying();\r\n            }\r\n            updateMarkerPos(event.clientX, event.altKey, true);\r\n            document.addEventListener('mousemove', onMarkerDrag);\r\n            document.addEventListener('mouseup', onMarkerDragEnd);\r\n        };\r\n\r\n        const onMarkerDrag = (event) => {\r\n            updateMarkerPos(event.clientX, event.altKey, true);\r\n        };\r\n\r\n        const onMarkerDragEnd = async () => {\r\n            document.removeEventListener('mousemove', onMarkerDrag);\r\n            document.removeEventListener('mouseup', onMarkerDragEnd);\r\n        };\r\n\r\n        let markerInterval;\r\n        let markerStartPos;\r\n        let startTempo;\r\n        let tempoIdx = 0;\r\n\r\n        async function startMarkerAnim() {\r\n            isPlaying.value = true;\r\n            markerStartPos = markerPosition.value;\r\n            startTempo = tempo.value;\r\n            tempoMarkers.value.sort((a, b) => {a.left - b.left});\r\n            doMarkerAnim();\r\n        }\r\n\r\n        function doMarkerAnim() {\r\n            let timeChange = 0;\r\n            startTempo = tempo.value;\r\n            tempoIdx = 0;\r\n            function tick() {\r\n                if (markerPosition.value < 0) {\r\n                    startTempo = tempo.value;\r\n                    tempoIdx = 0;\r\n                    timeChange = 0;\r\n                    markerStartPos = 0;\r\n                    markerPosition.value = 0;\r\n                }\r\n                let marker = tempoMarkers.value[tempoIdx];\r\n                //console.log(marker);\r\n                if (marker && marker !== null) {\r\n                    if (markerPosition.value >= marker.left) {\r\n                        tempoIdx++;\r\n                        markerStartPos = markerPosition.value;\r\n                        timeChange = seq.value.currentTime;\r\n                        startTempo = marker.tempo;\r\n                    }\r\n                }\r\n\r\n                markerPosition.value = ((seq.value.currentTime - timeChange) * 4 * 16 * startTempo / 60) + markerStartPos;\r\n                if (seq.value && !loopSong.value)\r\n                    seq.value.loop = loopSong.value;\r\n            }\r\n            clearInterval(markerInterval);\r\n            tick();\r\n            markerInterval = setInterval(tick, (125/4));\r\n        }\r\n\r\n        function noteWidthToMML(width) {\r\n            let outString = '';\r\n            //256 pixels is 1 bar (4 beats); 64 pixels is 1 beat in 4/4\r\n            let mmlWidth = width;\r\n            let noteLengths = [];\r\n            for (let i = 1; i <= 64; ++i) {\r\n              if (i < 12 || i % 12 === 0 || i % 16 === 0) {\r\n\r\n                  let val1 = Math.round(256 / i * 100);\r\n                  let val2 = Math.round(256 / i * 150);\r\n                \r\n                  noteLengths.push({\r\n                      length: val2,\r\n                      name: 'L' + i + '.'\r\n                  });\r\n                  noteLengths.push({\r\n                      length: val1,\r\n                      name: 'L' + i\r\n                  });\r\n              }\r\n            }\r\n            let result = getClosestWidth(noteLengths, mmlWidth);\r\n            outString = result.noteCombination.map(note => note.name).join('&');\r\n            return outString;\r\n        }\r\n\r\n        function getClosestWidth(notes, targetWidth) {\r\n            let amount = Math.round(targetWidth * 100);\r\n\r\n            const dp = new Array(amount + 1).fill(Infinity);\r\n            dp[0] = 0;\r\n\r\n            const usedNotes = new Array(amount + 1).fill(-1);   \r\n\r\n            for (let i = 1; i <= amount; i++) {\r\n                for (const note of notes) {\r\n                    const noteValue = note.length;\r\n                    if (i >= noteValue && dp[i - noteValue] + 1 < dp[i]) {\r\n                        dp[i] = dp[i - noteValue] + 1;\r\n                        usedNotes[i] = note;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (dp[amount] === Infinity) {\r\n                return { minNotes: null, noteCombination: []};\r\n            }\r\n\r\n            const result = []\r\n            let currentAmount = amount;\r\n            while (currentAmount > 0) {\r\n                const note = usedNotes[currentAmount];\r\n                result.push(note);\r\n                currentAmount -= note.length;\r\n            }\r\n\r\n            return { minNotes: dp[amount], noteCombination: result };\r\n\r\n        }\r\n\r\n        const stopMarkerAnim = () => {\r\n            clearInterval(markerInterval);\r\n            isPlaying.value = false;\r\n        }\r\n\r\n        const updateMarkerPos = (clientX, altKey, fromClick) => {\r\n            if (ruler.value) {\r\n                const rulerRect = ruler.value.getBoundingClientRect();\r\n                let newPos = clientX - rulerRect.left;\r\n\r\n                if (!altKey) {\r\n                    newPos = Math.round(newPos / gridWidth.value) * gridWidth.value;\r\n                }\r\n\r\n                newPos = Math.max(0, Math.min(gridSpan.value, newPos));\r\n\r\n                markerPosition.value = newPos;\r\n                if (fromClick) {\r\n                    markerReplayPosition.value = newPos;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        function handleKeyPress(event) {\r\n            if (selectedTrack.value.isEditingName)\r\n                return;\r\n            if (event.key === 'Backspace' || event.key === 'Delete') {\r\n                for (const note of selectedNotes.value) {\r\n                    removeNote(note, true);\r\n                }\r\n                \r\n                if (isPlaying.value)\r\n                    playSequence();\r\n            }\r\n            if (event.code === 'Space') {\r\n                event.preventDefault();\r\n                if (isPlaying.value) {\r\n                    stopPlaying();\r\n                    if (!event.ctrlKey) {\r\n                        markerPosition.value = markerReplayPosition.value;\r\n                    }\r\n                } else {\r\n                    playSequence();\r\n                }\r\n            } else if (event.key === 'a' && event.ctrlKey && !selectedTrack.value.isEditingName) {\r\n                event.preventDefault();\r\n                for (const note of notesInGrid.value) {\r\n                    selectNote(note);\r\n                }\r\n                \r\n                showSuccessMessage(`Selected ${selectedNotes.value.length} notes!`, 1000);\r\n            } else if (event.key === 'ArrowUp') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 12 : 1;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (note.top - gridHeight * movementValue < -0) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.top -= gridHeight * movementValue\r\n                        const number = (1284-(note.top/2))/144;\r\n                        const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                        note.name = noteName;\r\n                        note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowDown') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 12 : 1;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (note.top + gridHeight * movementValue >= octaves.value.length * gridHeight * 12) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.top += gridHeight * movementValue\r\n                        const number = (1284-(note.top/2))/144;\r\n                        const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                        note.name = noteName;\r\n                        note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowLeft') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 1 : 4;\r\n                    for (const note of selectedNotes.value) {\r\n                        if (Math.round((note.left - gridWidth.value / movementValue)*1000)/1000 < 0) return;\r\n                    }\r\n                    for (const note of selectedNotes.value) {\r\n                        note.left = Math.round((note.left - gridWidth.value / movementValue)*1000)/1000;\r\n                    }\r\n                }\r\n            } else if (event.key === 'ArrowRight') {\r\n                if (event.ctrlKey || event.shiftKey) {\r\n                    event.preventDefault();\r\n                    let movementValue = event.ctrlKey ? 1 : 4;\r\n                    for (const note of selectedNotes.value) {\r\n                        note.left = Math.round((note.left + gridWidth.value / movementValue)*1000)/1000;\r\n                    }\r\n                }\r\n            } else if (event.key === 'c' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Copy selected notes to some \"clipboard\".\r\n                noteClipboard = [];\r\n                for (const note of selectedNotes.value) {\r\n                    noteClipboard.push(note);\r\n                }\r\n\r\n                showSuccessMessage(`Copied ${noteClipboard.length} note${noteClipboard.length > 1 ? 's' : ''} to the clipboard!`, 1000);\r\n            } else if (event.key === 'x' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Copy and delete selected notes to some \"clipboard\".\r\n                noteClipboard = [];\r\n                for (const note of selectedNotes.value) {\r\n                    noteClipboard.push(note);\r\n                    removeNote(note, true);\r\n                }\r\n                showSuccessMessage(`Cut ${noteClipboard.length} note${noteClipboard.length > 1 ? 's' : ''} and put them in the clipboard!`, 1000);\r\n            } else if (event.key === 'v' && event.ctrlKey) {\r\n                event.preventDefault();\r\n                // Paste selected notes from \"clipboard\" into the selected track.\r\n                clearSelection();\r\n                for (const note of noteClipboard) {\r\n                    const newNote = {\r\n                        id: notesInGrid.value.length + Date.now(),\r\n                        name: note.name,\r\n                        left: Math.round(Math.round((note.left + scrollX.value)*gridWidth.value/4)*4/gridWidth.value),\r\n                        top: note.top,\r\n                        pitch: note.pitch,\r\n                        width: note.width,\r\n                        length: note.length,\r\n                        highlighted: true,\r\n                        color: selectedTrack.value.color,\r\n                        start: note.start,\r\n                        end: note.end,\r\n                        volume: note.volume,\r\n                        muted: false,\r\n                        track: selectedTrack.value\r\n                    };\r\n                    selectedNotes.value.push(newNote);\r\n                    notesInGrid.value.push(newNote);\r\n                    newNote.track.notes.unshift(newNote);\r\n                }\r\n                showSuccessMessage(`Pasted ${noteClipboard.length} notes from the clipboard!`, 1000);\r\n            }\r\n        }\r\n\r\n        function updateRuler() {\r\n            const gridWrapper = document.querySelector('.grid-wrapper');\r\n            const ruler = document.querySelector('.ruler');\r\n            if (gridWrapper && ruler) {\r\n                scrollX.value = gridWrapper.scrollLeft;\r\n                ruler.style.left = -scrollX.value + 'px'; // Adjust ruler's left position\r\n            }\r\n        }\r\n\r\n        function stopPlaying() {\r\n            if (seq.value)\r\n                seq.value.stop();\r\n            stopMarkerAnim();\r\n            synth.value.programChange(0, selectedInstrument.value.program);\r\n        }\r\n\r\n        const playSequence = async (fromClick = null) => {\r\n            try {\r\n                if (fromClick && isPlaying.value) {\r\n                    stopPlaying();\r\n                    markerPosition.value = markerReplayPosition.value;\r\n                    return;\r\n                }\r\n                midiBuilder.value = new MIDIBuilder(\"untitled\", 480, tempo.value);\r\n                //midiBuilder.value.addEvent(0, 0, 0xC0, [selectedInstrument.value.program]);\r\n                \r\n                await context.value.resume();\r\n                if (!synth.value) return;\r\n\r\n                let notesAdded = 0;\r\n\r\n                let audibleTracks = [];\r\n\r\n                for (const track of tracks.value) {\r\n                    if (!track.isMuted) {\r\n                        audibleTracks.push(track);\r\n                        midiBuilder.value.addNewTrack(track.name + tracks.value.indexOf(track));\r\n                    }\r\n                }\r\n\r\n                notesInGrid.value.forEach(note => {\r\n                    if (!note.muted && note.left + note.width >= markerPosition.value) {\r\n\r\n                        // Code to get the note's parent track\r\n                        let containingTrack = null;\r\n                        for (const track of tracks.value) {\r\n                            if (track.notes.some(n => n.id === note.id)) {\r\n                                containingTrack = track;\r\n                            }\r\n                        }\r\n                        const trackIndex = audibleTracks.indexOf(containingTrack);\r\n                        const channel = trackIndex;//trackIndex;\r\n                        const pitch = note.pitch;\r\n                        // Conversion from pixels to time.\r\n                        const noteStartTime = note.left/16*120;\r\n                        const noteDuration = (note.width+1)/16*120;\r\n                        const markerTime = markerPosition.value/16*120;\r\n                        const startTime = Math.max(noteStartTime, markerTime)-markerTime;\r\n                        const duration = Math.min(noteDuration, noteStartTime+noteDuration-markerTime);\r\n                        const volume = Math.max(0, Math.min(127, (note.volume + 1) * 8 - 1));\r\n\r\n                        \r\n\r\n                        midiBuilder.value.addEvent(startTime, trackIndex, 0xC0 | (channel & 0x0F), [containingTrack.instrument.program]);\r\n                        midiBuilder.value.addNoteOn(startTime, trackIndex, channel, pitch, volume);\r\n                        midiBuilder.value.addNoteOff(startTime + duration - 1, trackIndex, channel, pitch);\r\n                        notesAdded++;\r\n                    }\r\n                });\r\n\r\n                for (const tempoMarker of tempoMarkers.value) {\r\n                    const tempoStartTime = tempoMarker.left/16*120;\r\n                    const markerTime = markerPosition.value/16*120;\r\n                    const tempoChangeTime = Math.max(tempoStartTime, markerTime)-markerTime;\r\n                    midiBuilder.value.addSetTempo(tempoChangeTime, tempoMarker.tempo);\r\n                }\r\n\r\n                if (notesAdded === 0) {\r\n                    return;\r\n                }\r\n\r\n                midiBuilder.value.flush();\r\n\r\n                const b = await(writeMIDIFile(midiBuilder.value));\r\n                seq.value = new Sequencer([{binary: b}], synth.value);\r\n                seq.value.loop = loopSong.value && markerPosition.value === 0;\r\n                await synth.value.isReady;\r\n                seq.value.skipToFirstNoteOn = false;\r\n                seq.value.addOnSongEndedEvent(() => {\r\n                    stopMarkerAnim();\r\n                    markerPosition.value = markerReplayPosition.value;\r\n                    if (loopSong.value && !seq.value.loop) {\r\n                        markerPosition.value = 0;\r\n                        playSequence();\r\n                    }\r\n                }, 'test2');\r\n                await seq.value.play();\r\n                startMarkerAnim();\r\n            } catch (error) {\r\n                console.error(\"Error playing sequence: \", error);\r\n            }\r\n        };\r\n\r\n        const startNote = async (channel, note, octave) => {\r\n            try {\r\n                context.value.resume();\r\n                await synth.value.isReady;\r\n                synth.value.noteOn(channel, note.index + 12 * (octave + 1), Math.max(0, Math.min(127, (currentNoteVolume.value + 1) * 8 - 1)), false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        const endNote = async (channel, note, octave) => {\r\n            try {\r\n                await synth.value.isReady;\r\n                if (synth.value) {\r\n                    synth.value.noteOff(channel, note.index + 12 * (octave + 1));\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        const showSuccessMessage = (text, timeout=2000) => {\r\n            successNotificationText.value = text;\r\n            showSuccessNotification.value = true; // Show notification\r\n\r\n            // Hide notification after 2 seconds\r\n            setTimeout(() => {\r\n                showSuccessNotification.value = false;\r\n            }, timeout);\r\n        };\r\n\r\n        const showFailureMessage = (text, timeout=2000) => {\r\n            failedNotificationText.value = text;\r\n            showFailedNotification.value = true; // Show notification\r\n\r\n            // Hide notification after 2 seconds\r\n            setTimeout(() => {\r\n                showFailedNotification.value = false;\r\n            }, timeout);\r\n        };\r\n\r\n        const mouseOverNote = (channel, note, octave) => {\r\n            if (isMouseDown.value && draggingNotes.value.length === 0 && resizingNotes.value.length === 0) {\r\n                startNote(channel, note, octave);\r\n            }\r\n        };\r\n\r\n        const mouseLeaveNote = (channel, note, octave) => {\r\n            if (isMouseDown.value && draggingNotes.value.length === 0 && resizingNotes.value.length === 0) {\r\n                endNote(channel, note, octave);\r\n            }\r\n        };\r\n\r\n        const changeInstrument = async () => {\r\n            if (synth.value && selectedInstrument.value) {\r\n                selectedTrack.value.instrument = selectedInstrument.value;\r\n                \r\n                instrKeyMin.value = selectedInstrument.value.min;\r\n                instrKeyMax.value = selectedInstrument.value.max;\r\n\r\n                synth.value.programChange(0, selectedInstrument.value.program);\r\n                if (isPlaying.value)\r\n                    playSequence();\r\n\r\n                await synth.value.isReady;\r\n            }\r\n        };\r\n\r\n        const startPositions = new Map();\r\n\r\n        const startDrag = (note, event, placeNote = true) => {\r\n            // console.log(note.id);\r\n            event.preventDefault();\r\n            if (event.button === 0 && resizingNotes.value.length === 0 && volumeChangingNotes.value.length === 0) { // Ensure we're dragging with left button\r\n                if (note.highlighted) {\r\n                    draggingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    clearSelection();\r\n                    draggingNotes.value.push(note);\r\n                }\r\n\r\n                if (event.shiftKey && placeNote) {\r\n                    for (const note of draggingNotes.value) {\r\n                        const newNote = {\r\n                            id: notesInGrid.value.length + Date.now(),\r\n                            name: note.name,\r\n                            left: note.left,\r\n                            top: note.top,\r\n                            pitch: note.pitch,\r\n                            width: note.width,\r\n                            length: note.length,\r\n                            highlighted: false,\r\n                            color: note.color,\r\n                            start: note.start,\r\n                            end: note.end,\r\n                            volume: note.volume,\r\n                            muted: false,\r\n                            track: note.track\r\n                        };\r\n                        notesInGrid.value.push(newNote);\r\n                        newNote.track.notes.unshift(newNote);\r\n                    }\r\n                }\r\n\r\n                for (const draggingNote of draggingNotes.value) {\r\n                    startPositions.set(draggingNote.id, {\r\n                        x: event.clientX,\r\n                        y: event.clientY,\r\n                        left: draggingNote.left,\r\n                        top: draggingNote.top\r\n                    });\r\n                }\r\n\r\n                currentNoteLength.value = note.length;\r\n                currentNoteVolume.value = note.volume;\r\n                selectedTrackIndex.value = tracks.value.indexOf(note.track);\r\n                trackHexColor.value = note.track.color;\r\n                document.addEventListener('mousemove', onDrag);\r\n                document.addEventListener('mouseup', endDrag);\r\n            }\r\n        };\r\n\r\n        const onDrag = (event) => {\r\n            if (draggingNotes.value && resizingNotes.value.length === 0 && volumeChangingNotes.value.length === 0) {\r\n\r\n                let outOfBounds = false;\r\n                const newPositions = [];\r\n\r\n                for (const note of draggingNotes.value) {\r\n\r\n                    const startPos = startPositions.get(note.id);\r\n                    if (!startPos) continue;\r\n\r\n                    const dx = event.clientX - startPos.x;\r\n                    const dy = event.clientY - startPos.y;\r\n\r\n                    let newLeft = 0;\r\n\r\n                    if (event.altKey || (note.highlighted && (note.width+1) % gridWidth.value !== 0)) {\r\n                        newLeft = Math.round((startPos.left + dx) / (gridWidth.value / 4)) * (gridWidth.value / 4);\r\n                    } else {\r\n                        newLeft = Math.round((startPos.left + dx) / gridWidth.value) * gridWidth.value;\r\n                    }\r\n                    let newTop = Math.round((startPos.top + dy) / gridHeight) * gridHeight;\r\n                    \r\n                    if (newLeft < 0 || newTop < 0 || newTop > 2568) {\r\n                        outOfBounds = true;\r\n                        break; // Exit loop if any note is out of bounds\r\n                    }\r\n\r\n                    newPositions.push({ note, newLeft, newTop });\r\n\r\n                }\r\n\r\n                if (outOfBounds) return;\r\n\r\n                // Auto-scroll stuff doesnt work super well yet, so I'll leave it out for now\r\n                let rightMost = Infinity;\r\n                let leftMost = Infinity;\r\n                let topMost = Infinity;\r\n                let bottomMost = 0;\r\n\r\n                for (const { note, newLeft, newTop } of newPositions) {\r\n\r\n                    note.left = newLeft;\r\n                    note.top = newTop;\r\n\r\n                    const number = (1284-(note.top/2))/144;\r\n                    const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n                    if (note.name != noteName && draggingNotes.value.length === 1) {\r\n                        startNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number))\r\n                        endNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number))\r\n                    }\r\n                    note.name = noteName;\r\n                    note.pitch = number * 12 % 12 + 12 * (Math.floor(number) + 1);\r\n\r\n                    // if (note.left + note.width < rightMost)\r\n                    //     rightMost = note.left + note.width;\r\n\r\n                    // if (note.left < leftMost)\r\n                    //     leftMost = note.left;\r\n\r\n                    // if (note.top < topMost)\r\n                    //     topMost = note.top;\r\n\r\n                    // if (note.top > bottomMost)\r\n                    //     bottomMost = note.top;\r\n                    \r\n                }\r\n                // const gridWrapper = document.querySelector('.grid-wrapper');\r\n                // const pianoRoll = document.querySelector('.piano-roll');\r\n                // if (rightMost > gridWrapper.scrollLeft + window.innerWidth) {\r\n                //     gridWrapper.scrollLeft = rightMost - window.innerWidth;\r\n                // } else if (leftMost < gridWrapper.scrollLeft) {\r\n                //     gridWrapper.scrollLeft = leftMost;\r\n                // } else if (bottomMost - topMost < window.innerHeight && topMost < pianoRoll.scrollTop) {\r\n                //     pianoRoll.scrollTop = topMost;\r\n                // } else if (bottomMost - topMost < window.innerHeight && bottomMost > window.innerHeight*0.85 + pianoRoll.scrollTop) {\r\n                //     pianoRoll.scrollTop = bottomMost - window.innerHeight*0.85;\r\n                // }\r\n\r\n            }\r\n        };\r\n\r\n        const endDrag = () => {\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            draggingNotes.value = [];\r\n            document.removeEventListener('mousemove', onDrag);\r\n            document.removeEventListener('mouseup', endDrag);\r\n            startPositions.clear();\r\n        };\r\n\r\n        const startResizeData = new Map();\r\n\r\n        const startResize = (note, event) => {\r\n            event.preventDefault();\r\n            if (event.button === 0) { // Ensure we're resizing with the left button\r\n                resizingNotes.value = [];\r\n                startX.value = event.clientX;\r\n                startResizeData.clear(); // Clear previous data\r\n\r\n                if (note.highlighted) {\r\n                    // If note is highlighted, prepare to resize all selected notes\r\n                    selectedNotes.value.forEach(n => {\r\n                        startResizeData.set(n.id, { width: n.width, startX: event.clientX });\r\n                    });\r\n                    resizingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    // If note is not highlighted, resize only this note\r\n                    clearSelection();\r\n                    startResizeData.set(note.id, { width: note.width, startX: event.clientX });\r\n                    resizingNotes.value = [note];\r\n                }\r\n                \r\n                document.addEventListener('mousemove', onResize);\r\n                document.addEventListener('mouseup', endResize);\r\n            }\r\n        };\r\n\r\n        const onResize = (event) => {\r\n            if (resizingNotes.value.length > 0) {\r\n                let allInBounds = true;\r\n\r\n                const newWidths = [];\r\n\r\n                resizingNotes.value.forEach(note => {\r\n                    const startData = startResizeData.get(note.id);\r\n                    if (!startData) return;\r\n\r\n                    const dx = event.clientX - startData.startX;\r\n                    let newWidth = 0;\r\n                    if (event.altKey) {\r\n                        newWidth = Math.round((startData.width + dx) / (gridWidth.value/4)) * gridWidth.value / 4 - 1;\r\n                    } else {\r\n                        newWidth = Math.round((startData.width + dx) / gridWidth.value) * gridWidth.value - 1;\r\n                    }\r\n\r\n                    // Check if newWidth is valid for the note\r\n                    if (newWidth < gridWidth.value - 1 && !event.altKey || newWidth < 3) {\r\n                        allInBounds = false;\r\n                        return;\r\n                    }\r\n\r\n                    newWidths.push({ note, newWidth })\r\n\r\n                });\r\n\r\n                // If any note was resized to an invalid width, stop resizing\r\n                if (allInBounds) {\r\n                    for (const { note, newWidth } of newWidths) {\r\n                        note.width = newWidth;\r\n                        note.length = (newWidth + 1) / gridWidth.value;\r\n                        currentNoteLength.value = note.length;\r\n                    };\r\n                }\r\n            }\r\n        };\r\n\r\n        const endResize = () => {\r\n            resizingNotes.value = [];\r\n            startResizeData.clear();\r\n            document.removeEventListener('mousemove', onResize);\r\n            document.removeEventListener('mouseup', endResize);\r\n        };\r\n\r\n        let startingNoteVolume = 0;\r\n\r\n        const startVolumeChange = (note, event) => {\r\n            event.preventDefault();\r\n            if (event.button === 0) { // Ensure we're clicking with the left button\r\n                volumeChangingNotes.value = [];\r\n                startY.value = event.clientY;\r\n\r\n                if (note.highlighted) {\r\n                    // If note is highlighted, prepare to re-volume all selected notes\r\n                    volumeChangingNotes.value = selectedNotes.value;\r\n                } else {\r\n                    // If note is not highlighted, re-volume only this note\r\n                    clearSelection();\r\n                    volumeChangingNotes.value = [note];\r\n                }\r\n                startingNoteVolume = note.volume;\r\n\r\n                document.addEventListener('mousemove', onVolumeChange);\r\n                document.addEventListener('mouseup', endVolumeChange);\r\n            }\r\n        };\r\n\r\n        const onVolumeChange = (event) => {\r\n            event.preventDefault();\r\n            if (volumeChangingNotes.value.length > 0) {\r\n                for (const note of volumeChangingNotes.value) {\r\n                    const dy = startY.value - event.clientY;\r\n                    let newVolume = Math.round(Math.max(1, Math.min(15, startingNoteVolume + dy/10)));\r\n                    note.volume = newVolume;\r\n                    currentNoteVolume.value = newVolume;\r\n                }\r\n            }\r\n        };\r\n        \r\n        const endVolumeChange = () => {\r\n            volumeChangingNotes.value = [];\r\n            if (isPlaying.value)\r\n                playSequence();\r\n            document.removeEventListener('mousemove', onVolumeChange);\r\n            document.removeEventListener('mouseup', endVolumeChange);\r\n        };\r\n\r\n        const handleGridClick = (event) => {\r\n            if (event.ctrlKey && draggingNotes.value.length <= 0) {\r\n                if (!event.shiftKey)\r\n                    clearSelection();\r\n                startSelection(event);\r\n            } else {\r\n                startPlacingNote(event);\r\n            }\r\n        };\r\n\r\n        function clearSelection() {\r\n            selectedNotes.value.forEach((note) => {\r\n                note.highlighted = false;\r\n            });\r\n            selectedNotes.value = [];\r\n        }\r\n\r\n        const startSelection = (event) => {\r\n            event.preventDefault();\r\n            isSelecting.value = true;\r\n            const rect = grid.value.getBoundingClientRect();\r\n            startX.value = event.clientX - rect.left;\r\n            startY.value = event.clientY - rect.top;\r\n            currentX.value = event.clientX - rect.left;\r\n            currentY.value = event.clientY - rect.top;\r\n            document.addEventListener('mousemove', onSelectionMove);\r\n            document.addEventListener('mouseup', onSelectionEnd);\r\n        };\r\n\r\n        const onSelectionMove = (event) => {\r\n            if (isSelecting.value) {\r\n                const rect = grid.value.getBoundingClientRect();\r\n                currentX.value = event.clientX - rect.left;\r\n                currentY.value = event.clientY - rect.top;\r\n                // This is where we add the logic to highlight the notes that might be selected (or we can select them I dont really care)\r\n            }\r\n        };\r\n\r\n        const onSelectionEnd = () => {\r\n            if (isSelecting.value) {\r\n                isSelecting.value = false;\r\n                document.removeEventListener('mousemove', onSelectionMove);\r\n                document.removeEventListener('mouseup', onSelectionEnd);\r\n                // This is where we add the logic to actually select the notes\r\n                checkIntersections();\r\n            }\r\n        };\r\n\r\n        function checkIntersections() {\r\n            const selectionRect = {\r\n                left: Math.min(startX.value, currentX.value),\r\n                top: Math.min(startY.value, currentY.value),\r\n                right: Math.max(startX.value, currentX.value),\r\n                bottom: Math.max(startY.value, currentY.value),\r\n            };\r\n\r\n            notesInGrid.value.forEach(note => {\r\n                const itemRect = {\r\n                    left: note.left,\r\n                    top: note.top,\r\n                    right: note.left + note.width,\r\n                    bottom: note.top + gridHeight,\r\n                };   \r\n\r\n                if (intersects(selectionRect, itemRect)) {\r\n                    //console.log(note.name + ' intersects with selection.');\r\n                    selectNote(note);\r\n                }\r\n            });\r\n\r\n        };\r\n\r\n        function selectNote(note) {\r\n            if (!selectedNotes.value.includes(note) && !note.muted) {\r\n                selectedNotes.value.push(note);\r\n                note.highlighted = true;\r\n            }\r\n        }\r\n\r\n        function intersects(rect1, rect2) {\r\n            return !(rect2.left >= rect1.right ||\r\n                    rect2.right <= rect1.left ||\r\n                    rect2.top >= rect1.bottom ||\r\n                    rect2.bottom <= rect1.top);\r\n        }\r\n\r\n\r\n        const startPlacingNote = (event) => {\r\n            if (draggingNotes.value.length > 0 || resizingNotes.value.length > 0 || volumeChangingNotes.value.length > 0) {\r\n                return;\r\n            }\r\n\r\n            const gridElement = grid.value;\r\n            const rect = gridElement.getBoundingClientRect();\r\n            const x = event.clientX - rect.left + gridElement.scrollLeft;\r\n            const y = event.clientY - rect.top + gridElement.scrollTop;\r\n\r\n            const left = Math.round((x - gridWidth.value / 2) / gridWidth.value) * gridWidth.value;\r\n            const top = Math.round((y - gridHeight / 2) / gridHeight) * gridHeight;\r\n\r\n            const number = (1284-(top/2))/144;\r\n            const noteName = noteNames[number * 12 % 12] + \"\" + Math.floor(number);\r\n            startNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number));\r\n            endNote(0, {name: noteName, index: number * 12 % 12}, Math.floor(number));\r\n\r\n            const existingNote = notesInGrid.value.find(note =>\r\n                note.left === left && note.top === top && !note.muted\r\n            );\r\n\r\n            if (!existingNote) {\r\n                clearSelection();\r\n                const id = notesInGrid.value.length + Date.now();\r\n                const newNote = {\r\n                    left: left,\r\n                    top: top,\r\n                    width: gridWidth.value * currentNoteLength.value - 1,\r\n                    highlighted: false,\r\n                    color: selectedTrack.value ? selectedTrack.value.color : 'hsla(212, 100%, 50%, 0.5)',\r\n                    id: id,\r\n                    name: noteName,\r\n                    pitch: number * 12 % 12 + 12 * (Math.floor(number) + 1),\r\n                    length: currentNoteLength.value,\r\n                    start: left / gridWidth.value,\r\n                    end: left / gridWidth.value + currentNoteLength.value,\r\n                    volume: currentNoteVolume.value,\r\n                    track: selectedTrack.value\r\n                };\r\n                notesInGrid.value.push(newNote);\r\n                selectedTrack.value.notes.unshift(newNote);\r\n                startDrag(notesInGrid.value.find(note => note.id == id), event, false);\r\n            } else {\r\n                startDrag(existingNote, event);\r\n            }\r\n        };\r\n\r\n        //let trackWrappers = [];\r\n\r\n        const trackify = () => {\r\n            let notesList = [...selectedTrack.value.notes].sort((a, b) => {\r\n                if (a.left === b.left) {\r\n                    return a.top - b.top;\r\n                }\r\n                return a.left - b.left;\r\n            });\r\n            //let trackWrappers = [];\r\n            // for (let i = 0; i < tracks.value.length; ++i) {   \r\n            //     trackWrappers.push({\r\n            //         notes: [],\r\n            //         track: tracks.value[i]\r\n            //     });\r\n            // }\r\n\r\n            // Idea: Take the selected track and split it into more tracks.\r\n            // This involves adding new tracks (only if allowed, otherwise cancel the operation)\r\n            // if (tracks.value.length < 16)\r\n            //     addTrack();\r\n            // Then, put the proper notes into the proper tracks.\r\n\r\n            // For all notes in the selected track\r\n            // starting with selected track:\r\n            // if note can go into this track, then add it\r\n            // otherwise, add a new track, and put the note in there.\r\n\r\n            // after all notes are situated, loop through all tracks in the wrapper and set their notes equal to the new note lists\r\n\r\n            let trackWrappers = [];\r\n            trackWrappers.push({\r\n                notes: [],\r\n                track: selectedTrack.value,\r\n                index: 0\r\n            });\r\n\r\n            for (const note of notesList) {\r\n                //console.log(note.id);\r\n                for (const trackWrapper of trackWrappers) {\r\n                    if (!trackWrapper.notes[0] || trackWrapper.notes[0].left + trackWrapper.notes[0].width < note.left) {\r\n                        trackWrapper.notes.unshift(note);\r\n                        break;\r\n                    } else {\r\n                        if (trackWrapper.index === trackWrappers.length - 1) {\r\n                            trackWrappers.push({\r\n                                notes: [],\r\n                                track: {instrument: trackWrapper.track.instrument, color: null, name: selectedTrack.value.name + ` (${trackWrappers.length})`},\r\n                                index: trackWrappers.length\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (tracks.value.length + trackWrappers.length - 1 > 16) {\r\n                showFailureMessage('Failed to split track! (Process would create too many tracks!)');\r\n                return;\r\n            }\r\n\r\n            showSuccessMessage(`Successfully split the track \"${selectedTrack.value.name}\" into ${trackWrappers.length} tracks!`, 3000);\r\n\r\n            for (const trackWrapper of trackWrappers) {\r\n                if (!tracks.value.includes(trackWrapper.track)) {\r\n                    trackWrapper.track = addTrack(trackWrapper.track.instrument, trackWrapper.track.color, trackWrapper.track.name);\r\n                }\r\n                trackWrapper.track.notes = trackWrapper.notes;\r\n                for (const note of trackWrapper.track.notes) {\r\n                    note.track = trackWrapper.track;\r\n                    note.color = trackWrapper.track.color;\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        function hexToRgba(originalColor, alpha) {\r\n            let hex = originalColor.replace('#', '');\r\n\r\n            if (hex.length === 3) {\r\n                hex = hex.split('').map(char => char + char).join('');\r\n            }\r\n\r\n            const r = parseInt(hex.substring(0, 2), 16);\r\n            const g = parseInt(hex.substring(2, 4), 16);\r\n            const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n            return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n        }\r\n\r\n        function copyToClipboard(text) {\r\n            navigator.clipboard.writeText(text).then(() => {\r\n                    successNotificationText.value = \"MML copied to clipboard!\";\r\n                    showSuccessNotification.value = true; // Show notification\r\n\r\n                    // Hide notification after 2 seconds\r\n                    setTimeout(() => {\r\n                        showSuccessNotification.value = false;\r\n                    }, 2000);\r\n                }).catch(err => {\r\n                    console.error('Could not copy text: ', err);\r\n                });\r\n        }\r\n\r\n        const genMML = () => {\r\n            for (const track of tracks.value) {\r\n                track.notes.sort((a, b) => {\r\n                    if (a.left === b.left) {\r\n                        return a.top - b.top;\r\n                    }\r\n                    return a.left - b.left;\r\n                });\r\n                track.notes.reverse();\r\n            }\r\n            let outString = 'T' + tempo.value;\r\n            // console.log(tracks.value.length, tracks.value);\r\n            let audibleTracks = [];\r\n\r\n            for (const track of tracks.value) {\r\n                if (!track.isMuted) {\r\n                    audibleTracks.push(track);\r\n                }\r\n            }\r\n\r\n            if (0 <= audibleTracks.length && audibleTracks.length <= 4) {\r\n                audibleTracks.sort((a, b) => b.notes.length - a.notes.length); // sort the largest track to the top\r\n                //console.log(audibleTracks);\r\n                for (const track of audibleTracks) {\r\n                    let prevNoteEnd = 0;\r\n                    // Make a list of all tempo changes for this track\r\n                    let trackTempoMarkers = [];\r\n                    for (const tempoMarker of tempoMarkers.value) {\r\n                        if (tempoMarker.parentTrack === track) {\r\n                            trackTempoMarkers.push(tempoMarker);\r\n                        }\r\n                    }\r\n                    // We now need to \"insert\" the tempoMarkers at the appropriate \"left\" values.\r\n                    // This would mean whenever we have a note at left position l, we would place the tempo change before the note if it had the same l.\r\n                    // Similarly, if there were some gap between notes, we would put the tempo change wherever it belonged in that gap.\r\n                    // Since our list of tempomarkers is sorted, we can pop (Array.shift()) the tempomarkers from our list as we go.\r\n\r\n                    let notables = [...trackTempoMarkers, ...track.notes.slice().reverse()];\r\n                    notables.sort((a, b) => a.left - b.left);\r\n\r\n                    for (const note of notables) {\r\n                        if (note.left >= prevNoteEnd + 4) {\r\n                            // console.log('Adding Rest...', note.left, prevNoteEnd + 4);\r\n                            let gap = note.left - prevNoteEnd;\r\n                            let restStr = noteWidthToMML(gap);\r\n                            restStr = restStr.replaceAll('L', 'R');\r\n                            outString += restStr;\r\n                        }\r\n                        //console.log(note.width);\r\n                        if (!note.width) { // This means that it was a tempo marker and not a note.\r\n                            outString += 'T' + note.tempo;\r\n                            prevNoteEnd = note.left;\r\n                        } else {\r\n                            let noteStr = noteWidthToMML(note.width + 1);\r\n                            if (noteStr.includes('&')) {\r\n                                let k = noteStr.split('&');\r\n                                for (let i = 0; i < k.length; ++i) {\r\n                                    outString += k[i] + 'V' + note.volume + 'N' + (note.pitch - 12) + (i === k.length - 1 ? '' : '&');\r\n                                }\r\n                            } else {\r\n                                outString += noteWidthToMML(note.width + 1) + 'V' + note.volume + 'N' + (note.pitch-12);\r\n                            }\r\n                            prevNoteEnd = note.left + note.width + 1;\r\n                        }\r\n                    }\r\n                    outString += ',';\r\n                }\r\n            } else {\r\n                console.log(\"Could Not Gen MML\");\r\n                showFailureMessage('Failed to copy MML to clipboard! Too many tracks visible!');\r\n                return null;\r\n            }\r\n            outString = outString.slice(0, -1);\r\n            // Now we condense the output;\r\n            let outTracks = outString.split(',');\r\n            let newTracks = [];\r\n            for (const track of outTracks) {\r\n                let tokens = tokenizeMML(track);\r\n                let simplifiedTokens = simplifyMML(tokens);\r\n                let simplifiedMML = stringifyMML(simplifiedTokens);\r\n                newTracks.push(simplifiedMML);\r\n            }\r\n\r\n            outString = `MML@${newTracks.join(',')};`;\r\n\r\n            // Log output to console and copy it to the clipboard\r\n            console.log(outString);\r\n            copyToClipboard(outString);\r\n        };\r\n\r\n        const patterns = {\r\n            LENGTH: /L(\\d+)\\.?/g,  // Matches note lengths, e.g., L4, L8.\r\n            NOTE: /[A-G][-+#]?\\d*\\.?|N\\d+/g,         // Matches notes like N60, N62.\r\n            REST: /R\\d+\\.?/g,      // Matches rests like R4, R8.\r\n            TIE: /&/g,              // Matches ties.\r\n            VOLUME: /V(\\d+)/g,\r\n            TEMPO: /T(\\d+)/g,\r\n            OCTAVE: /O(\\d+)|[<>]/g\r\n        };\r\n\r\n        function tokenizeMML(mmlString) {\r\n            let tokens = [];\r\n            \r\n            // Run regex patterns over the input\r\n            for (const [key, regex] of Object.entries(patterns)) {\r\n                let match;\r\n                while ((match = regex.exec(mmlString)) !== null) {\r\n                    tokens.push({ type: key, value: match[0], index: match.index });\r\n                }\r\n            }\r\n\r\n            // Sort tokens by their original index in the string\r\n            tokens.sort((a, b) => a.index - b.index);\r\n\r\n            return tokens;\r\n        }\r\n\r\n        function simplifyMML(tokenList) {\r\n            // This is NOT optimal, but it is quite good.\r\n            let newTokenList = JSON.parse(JSON.stringify(tokenList));\r\n            let totalPasses = 2;\r\n            \r\n            for (let pass = 0; pass < totalPasses; ++pass) {\r\n                let octave = 4;\r\n                let length = '4';\r\n                let tempo = '120';\r\n                let volume = '8';\r\n            \r\n                for (let i = 0; i < newTokenList.length; ++i) {\r\n                    let token = newTokenList[i];\r\n                    if (token.type === 'LENGTH') {\r\n                        let tokenLength = token.value.split('L')[1];\r\n                        if (tokenLength !== length) {\r\n                            length = tokenLength;\r\n                        } else {\r\n                            newTokenList.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    } else if (token.type === 'VOLUME') {\r\n                        let tokenVolume = token.value.split('V')[1];\r\n                        if (tokenVolume !== volume) {\r\n                            volume = tokenVolume;\r\n                        } else {\r\n                            newTokenList.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    } else if (token.type === 'TEMPO') {\r\n                        let tokenTempo =  token.value.split('T')[1];\r\n                        if (tokenTempo !== tempo) {\r\n                            tempo = tokenTempo;\r\n                        } else {\r\n                            newTokenList.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    } else if (token.type === 'REST') {\r\n                        let restLength = token.value.split('R')[1];\r\n                        if (restLength === length) {\r\n                            token.value = 'R';\r\n                        }\r\n                    } else if (token.type === 'NOTE') {\r\n                        if (!token.value.includes('N'))\r\n                            continue;\r\n                        let notePitch = Number(token.value.split('N')[1]);\r\n                        let noteOctave = Math.floor(notePitch/12);\r\n                        let keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\r\n                        let noteKey = keys[notePitch - 12*noteOctave];\r\n                        if (noteOctave !== octave) {\r\n                            let diff = noteOctave - octave;  // Positive diff means noteOctave is higher.\r\n                            let octaveChanges = [];\r\n\r\n                            if (Math.abs(diff) < 3) {\r\n                                // Insert `>` or `<` for smaller octave differences.\r\n                                let symbol = diff > 0 ? '>' : '<';\r\n                                for (let j = 0; j < Math.abs(diff); ++j) {\r\n                                    octaveChanges.push({ type: 'OCTAVE', value: symbol, index: token.index+j });\r\n                                }\r\n                            } else {\r\n                                // Use absolute octave changes for larger octave differences.\r\n                                octaveChanges = [{ type: 'OCTAVE', value: 'O' + noteOctave, index: token.index }];\r\n                            }\r\n                            // console.log(octaveChanges);\r\n                            // Now splice in the octave changes and the note key.\r\n                            newTokenList.splice(i, 1, ...octaveChanges, { type: 'NOTE', value: noteKey, index: token.index + octaveChanges.length });\r\n\r\n                            octave = noteOctave; // Update current octave to the new one.\r\n                        } else {\r\n                            // No octave change, just update the note value.\r\n                            token.value = noteKey;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                // Now we simplify lengths\r\n                let lengthIndex = 0;\r\n                for (let i = 0; i < newTokenList.length; ++i) {\r\n                    let token = newTokenList[i];\r\n                    let prevToken = i > 0 ? newTokenList[i-1] : null;\r\n                    if (token.type === 'LENGTH') {\r\n                        // Count until we hit the next length token or the end of the list.\r\n                        let noteCount = 0;\r\n                        let noteIndexes = [];\r\n                        for (let j = i+1; j < newTokenList.length; ++j) {\r\n                            let token2 = newTokenList[j];\r\n                            // if note/rest has no postfix number, then we add it to the count\r\n                            if ((token2.type === 'NOTE' || token2.type === 'REST') && token2.value.replace(/[A-GRN][#]?/g, '') === '') {\r\n                                noteCount++;\r\n                                noteIndexes.push(j);\r\n                            } else if (token2.type === 'LENGTH') {\r\n                                break;\r\n                            }\r\n                        }\r\n                        \r\n                        if ((prevToken && prevToken.type === 'TIE') || noteCount * token.value.length <= token.value.length + noteCount) {\r\n                            // remove this length tag and put the length on the notes\r\n                            // console.log(noteCount);\r\n                            for (const noteIndex of noteIndexes) {\r\n                                newTokenList[noteIndex].value = newTokenList[noteIndex].value + token.value.split('L')[1];\r\n                            } \r\n                            newTokenList.splice(i, 1);\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            }\r\n            \r\n            return newTokenList;\r\n        }\r\n\r\n        function stringifyMML(tokens) {\r\n            let outStr = '';\r\n            for (const token of tokens) {\r\n                outStr += token.value;\r\n            }\r\n            return outStr;\r\n        }\r\n\r\n        const removeNote = (note, fromList) => {\r\n            selectedNotes.value = selectedNotes.value.filter(n => n.id !== note.id);\r\n            let oldSize = notesInGrid.value.length;\r\n            notesInGrid.value = notesInGrid.value.filter(n => n.id !== note.id);\r\n            let diff = oldSize - notesInGrid.value.length;\r\n            // console.log(`Removed a note!`)\r\n            for (const track of tracks.value) {\r\n                track.notes = track.notes.filter(n => n.id !== note.id);\r\n            }\r\n            if (!fromList && isPlaying.value)\r\n                playSequence();\r\n        };\r\n\r\n        document.addEventListener('mousedown', (event) => {\r\n            isMouseDown.value = true;\r\n        });\r\n\r\n        document.addEventListener('mouseup', () => {\r\n            isMouseDown.value = false;\r\n        });\r\n\r\n        return {\r\n            notes,\r\n            octaves,\r\n            startNote,\r\n            endNote,\r\n            mouseOverNote,\r\n            mouseLeaveNote,\r\n            instruments,\r\n            selectedInstrument,\r\n            changeInstrument,\r\n            pianoRoll,\r\n            grid,\r\n            notesInGrid,\r\n            startDrag,\r\n            endDrag,\r\n            startPlacingNote,\r\n            startVolumeChange,\r\n            removeNote,\r\n            gridWidth,\r\n            gridHeight,\r\n            gridSpan,\r\n            startResize,\r\n            endResize,\r\n            onResize,\r\n            currentNoteLength,\r\n            playSequence,\r\n            tempo,\r\n            handleGridClick,\r\n            isSelecting,\r\n            rectangleStyle,\r\n            handleRulerClick,\r\n            markerPosition,\r\n            markerReplayPosition,\r\n            ruler,\r\n            loopSong,\r\n            trackify,\r\n            noteWidthToMML,\r\n            backgroundStyle,\r\n            genMML,\r\n            showSuccessNotification,\r\n            successNotificationText,\r\n            showFailedNotification,\r\n            failedNotificationText,\r\n            handleTrackSelected,\r\n            handleAddTrack,\r\n            handleRemoveTrack,\r\n            handleMuteTrack,\r\n            instrKeyMin,\r\n            instrKeyMax,\r\n            hexToRgba,\r\n            currentNoteVolume,\r\n            clickTempoMarker,\r\n            tempoMarkers,\r\n            updateColor\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.piano-container {\r\n    position: fixed;\r\n    /* Fix to the left side of the screen */\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    /* Full height */\r\n    width: 100%;\r\n    /* Width of the piano roll */\r\n    background-color: #ddd;\r\n}\r\n\r\n.copyNotification {\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 20px;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\r\n    z-index: 1000;\r\n}\r\n\r\n.instrument-selector {\r\n    padding: 10px;\r\n    background-color: #f0f0f0;\r\n    border-bottom: 1px solid #ccc;\r\n}\r\n\r\n.piano-roll {\r\n    height: 94vh;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n    padding-bottom: 36px;\r\n}\r\n\r\n.piano-keys {\r\n    padding-top: 30px;\r\n    background-color: #ccc;\r\n    width: 10%;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    padding-bottom: 18px;\r\n    /* Higher notes at the top */\r\n    z-index: 12;\r\n}\r\n\r\n.octave {\r\n    flex-direction: column;\r\n    position: relative;\r\n}\r\n\r\n.keys-wrapper {\r\n    flex-direction: column-reverse;\r\n    /* Ensure keys are in the correct order */\r\n}\r\n\r\n.piano-key {\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    cursor: pointer;\r\n    position: relative;\r\n    user-select: none;\r\n}\r\n\r\n.white-key {\r\n    width: 100%;\r\n    height: 24px;\r\n    align-content: center;\r\n    /* Adjust based on desired key height */\r\n    background: white;\r\n    border-bottom: 1px solid #ccc;\r\n    text-align: right;\r\n    padding-right: 10px;\r\n    user-select: none;\r\n    font-size: 80%;\r\n}\r\n\r\n.black-key {\r\n    background: black;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 24px;\r\n    align-content: center;\r\n    /* Adjust based on desired key height */\r\n    position: relative;\r\n    /* Center black key over white key */\r\n    text-align: right;\r\n    padding-right: 10px;\r\n    user-select: none;\r\n    font-size: 80%;\r\n}\r\n\r\n.white-key:nth-child(2n+1) {\r\n    background: #fff;\r\n}\r\n\r\n.white-key:nth-child(12n) {\r\n    background: #bbb;\r\n}\r\n\r\n.grid-wrapper {\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    flex-grow: 1;\r\n    position: relative;\r\n}\r\n\r\n.ruler {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    margin-top: 90px;\r\n    margin-left: calc(10% - 2px);\r\n    background-color: #eee;\r\n    height: 29px;\r\n    border-bottom: 1px solid #ccc;\r\n    display: flex;\r\n    align-items: end;\r\n    font-size: 12px;\r\n    color: #333;\r\n    background: repeating-linear-gradient( /*This is the horizontal lines*/\r\n        90deg,\r\n        #bbb,\r\n        #bbb 2px,\r\n        #eee 2px,\r\n        #eee 256px\r\n    );\r\n    z-index: 11;\r\n    user-select: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.ruler-tick-label {\r\n    position: absolute;\r\n    bottom: 0;\r\n    white-space: nowrap;\r\n    transform: translateX(5px);\r\n    font-size: 14px;\r\n    color: #333;\r\n}\r\n\r\n.marker-replay-triangle {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid #bbb; /* Triangle color */\r\n    left: 50%;\r\n    bottom: 0; /* Inside the ruler */\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.marker-wrapper {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    transform: translateX(-50%);\r\n    pointer-events: none;\r\n}\r\n\r\n.marker-triangle {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid #f00; /* Triangle color */\r\n    left: 50%;\r\n    bottom: 0; /* Inside the ruler */\r\n    transform: translateX(-50%);\r\n    z-index: 100;\r\n}\r\n\r\n.marker-line {\r\n    position: absolute;\r\n    width: 2px;\r\n    height: 100vh;\r\n    background-color: #f00;\r\n    left: 50%;\r\n    bottom: - 100%; /* Below the ruler */\r\n    transform: translateX(-50%);\r\n    z-index: 100;\r\n}\r\n\r\n.grid {\r\n    padding-top: 18px;\r\n    margin-top: 30px;\r\n    position: absolute;\r\n    display: flex;\r\n    min-width: 100%;\r\n    align-self: top;\r\n    height: 100%;/*2592px;*/\r\n    background: repeating-linear-gradient( /*This is the horizontal lines*/\r\n        0deg,\r\n        #bbb,\r\n        #bbb 2px,\r\n        transparent 2px,\r\n        transparent 24px\r\n    ),\r\n    repeating-linear-gradient( /*This is the Bar line*/\r\n        90deg,\r\n        #777,\r\n        #777 2px,\r\n        transparent 2px,\r\n        transparent 256px\r\n    ),\r\n    repeating-linear-gradient( /*This is the vertical lines*/\r\n        90deg,\r\n        #c0c0c0,\r\n        #c0c0c0 2px,\r\n        transparent 2px,\r\n        transparent 16px\r\n    ),\r\n    repeating-linear-gradient(/*This is the background colors*/\r\n        90deg,\r\n        #e0e0e0,\r\n        #e0e0e0 64px,\r\n        #ccc 64px,\r\n        #ccc 128px\r\n    );\r\n    z-index: 10;\r\n    overflow: hidden;\r\n}\r\n\r\n.note {\r\n  position: absolute;\r\n  background-color: rgba(0, 120, 255, 0.5);\r\n  border: 1px solid #0078d4;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  user-select: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 20;\r\n  font-size: 70%;\r\n  margin-left: 1px;\r\n  overflow: hidden;\r\n}\r\n\r\n.note:active {\r\n    background-color: rgba(0, 120, 255, 0.7);\r\n}\r\n\r\n.resize-handle {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 40%; /* Adjust as needed */\r\n    max-width: 10px;\r\n    height: 100%;\r\n    cursor: ew-resize;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.volume-handle {\r\n  width: 12px;\r\n  height: 60%; /* Half the width to create the half-circle */\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: absolute;\r\n  bottom: -35%; /* Align to the bottom of the note */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border-radius: 50%; /* Create a circle */\r\n  clip-path: inset(0 0 50% 0); /* Clip top half, making it a half-circle */\r\n  cursor: ns-resize; /* Show a pointer to indicate draggable */\r\n}\r\n\r\n.play-button {\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #0078d4;\r\n  color: white;\r\n  z-index: 1000; /* Ensure it's on top of other elements */\r\n  outline: none;\r\n  box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.loop-wrapper {\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 160px;\r\n    padding: 10px 20px;\r\n    height: 18px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    background-color: #0078d4;\r\n    color: white;\r\n    border-radius: 5px;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n    z-index: 1000;\r\n}\r\n\r\n.controls {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.instrument-selector,\r\n.tempo-selector {\r\n    margin-right: 15px;\r\n}\r\n\r\n.selection-rect {\r\n    position: absolute;\r\n    border: 1px solid rgba(0, 100, 255, 0.5);\r\n    background-color: rgba(0, 100, 255, 0.3);\r\n    z-index: 30;\r\n}\r\n\r\n</style>","<template>\r\n    <div>\r\n      <!-- Help Button -->\r\n      <button \r\n        class=\"help-button\"\r\n        @click=\"showHelp\"\r\n      >\r\n        <span v-if=\"hoverHelp\">Help</span>\r\n        <span v-else> ? </span>\r\n      </button>\r\n  \r\n      <!-- Help Modal -->\r\n      <div v-if=\"isHelpVisible\" class=\"modal-background\">\r\n        <transition name=\"fade\">\r\n          <div class=\"help-modal\">\r\n            <button class=\"close-button\" @click=\"closeHelp\">X</button>\r\n            <div class=\"help-content\">\r\n              <h1>Help</h1>\r\n              <h3>Placing Notes</h3>\r\n              <li>To place notes, click anywhere on the grid.</li>\r\n              <li>The size of the note will be the same size as the note that was last placed/moved.</li>\r\n              <li>Placed notes are instantly draggable.</li>\r\n              <li>The color of the placed notes will depend on the color of the track they belong to.</li>\r\n              <li>By changing the \"Grid Spacing\" dropdown, you can control whether the grid is in 16ths or 12ths.</li>\r\n              <li>Each instrument has a different range of notes that it can play. The red keys on the piano to the left indicate notes that will not make a sound with the current instrument.</li>\r\n\r\n              <h3>Dragging Notes</h3>\r\n              <li>To drag a note, click on the left side of the note. Then, move your mouse around within the bounds of the grid.</li>\r\n              <li>Holding <strong>Alt</strong> will move notes freely (not locked to the grid).</li>\r\n              <li>If multiple notes are selected, all selected notes will be moved together (even if they are from different tracks).</li>\r\n              \r\n              <h3>Resizing Notes</h3>\r\n              <li>To resize a note, click on the right side of the note, then drag left or right.</li>\r\n              <li>Notes have a minimum length of 1/64th of a beat.</li>\r\n              <li>Holding <strong>Alt</strong> will resize notes freely (not locked to the grid)</li>\r\n              <li>If multiple notes are selected, all selected notes will be resized together.</li>\r\n\r\n              <h3>Note Volume</h3>\r\n              <li>The current note volume can be seen at the top of the screen.</li>\r\n              <li>A note's volume is indicated by the opacity of the note, as well as the number next to the note's name.</li>\r\n              <li>To change a note's volume, left click and hold on the half-circle at the bottom center of the note. Then, drag your mouse up and down. Dragging up will increase the note's volume, and dragging down will decrease it.</li>\r\n              <li>Notes start with a default volume of 8.</li>\r\n              <li>Notes have a volume range from 1 to 15.</li>\r\n\r\n              <h3>Selecting Multiple Notes</h3>\r\n              <li>To select multiple notes at once, hold <strong>Ctrl</strong> on the grid and drag your mouse.</li>\r\n              <li>If you hold <strong>Ctrl+Shift</strong> and drag, you will \"add on\" to your note selection. <i>(Previously selected notes will not be unselected, and you can select additional notes.)</i></li>\r\n              <li>If you hold <strong>Shift</strong> and drag a note, you will clone it (if that note is highlighted, it will clone all highlighted notes).</li>\r\n              <li>Pressing <strong>Ctrl+A</strong> will select all notes in the grid.</li>\r\n              <li>Pressing the <strong>Backspace</strong> or <strong>Delete</strong> keys will delete all selected notes.</li>\r\n              <li>Holding <strong>Ctrl</strong> and pressing the left or right arrows will move the selected notes a whole grid space (i.e. 1/16th or 1/12th).</li>\r\n              <li>Holding <strong>Ctrl</strong> and pressing the up or down arrows will move the selected notes an octave (if possible).</li>\r\n              <li>Holding <strong>Shift</strong> and pressing the left or right arrows will move the selected notes a fourth of a grid space (i.e. 1/64th or 1/48th).</li>\r\n              <li>Holding <strong>Shift</strong> and pressing the up or down arrows will move the selected notes up or down a single note (if possible).</li>\r\n\r\n              <h3>Tracks</h3>\r\n              <li>Each track has its own name, instrument, color, and visibility toggle.</li>\r\n              <li>To add a track, click on the blue plus button to the right of the tracks.</li>\r\n              <li>To rename a track, double click on the track's name. When done with renaming, press <strong>Enter</strong>.</li>\r\n              <li>To mute/unmute a track, click on the volume icon next to the track's name.</li>\r\n              <li>Clicking on a note from another track will cause you to switch to that note's track.</li>\r\n              <li>You can remove a track by clicking on the <strong>X</strong>. This will also remove the notes belonging to that track.</li>\r\n              <li>To change the color of a track and its notes, click on the outlined box at the bottom-center of the selected track's tab.</li>\r\n              <li>You can have a minimum of 1 track, and a maximum of 16 tracks.</li>\r\n              <li>The number of tracks you can have at once is dependant on screen width. This is so that smaller screens can still access all of their created tabs easily.</li>\r\n              <li>Hovering over a track tab will show you the name of the track.</li>\r\n              <li>With notes selected, pressing <strong>Ctrl+C</strong> or <strong>Ctrl+X</strong> will copy/cut notes.</li>\r\n              <li>After copying/cutting notes, you can paste them back in with <strong>Ctrl+V</strong>. This will paste all previously copied notes into the current track.</li>\r\n\r\n              <h3>Track Splitting</h3>\r\n              <li>With a track selected, click the \"Split Track\" button. This will separate the track into multiple other tracks (unless that number would exceed 16).</li>\r\n              <li>A track is split from left to right, then top to bottom. This can sometimes lead to weird splits.</li>\r\n              <li>The purpose of this feature is so that you can compose parts of your piece in a single track, then split them up if you need to.</li>\r\n\r\n              <h3>Exporting to MML</h3>\r\n              <li>Clicking on the \"Convert to MML\" button will copy the MML of audible tracks to your clipboard.</li>\r\n              <li>Only unmuted/audible tracks will be copied to your clipboard.</li>\r\n              <li>A maximum of four tracks can be exported at once.</li>\r\n              <li>Remember that the fourth track in a score is always the 'song' track.</li>\r\n              <li>Tracks that have multiple notes playing at once will NOT export properly, so be sure to split them before export.</li>\r\n              <li>The exported MML will be moderately optimized for length, but don't expect them to be perfect.</li>\r\n              <li>Tracks will be exported sorted by number of notes. If a track has more notes, then it will be first.</li>\r\n\r\n              <h3>Tempo</h3>\r\n              <li>You can change the tempo by entering a number at the top left of the page. Note that this will only change the starting tempo of the song.</li>\r\n              <li>If you hold <strong>Shift</strong> and left click on the ruler on top of the grid, you will be prompted to enter a tempo (BPM).</li>\r\n              <li>Tempo markers will automatically be assigned to the currently selected track. This is visible through the color of the marker. Deleting the selected track will delete all associated tempo markers.</li>\r\n              <li>Holding <strong>Alt</strong> while placing a marker will allow for more freedom in placement.</li>\r\n              <li>Clicking on an existing tempo marker will allow you to modify it. By entering an empty string, you will delete the marker.</li>\r\n\r\n              <h3>Misc</h3>\r\n              <li>Click and hold on the piano keys to play them. <br><em>(Note: some instruments can only play certain keys)</em></li>\r\n              <li>Press <strong>Space</strong> to play your song. It will start from the marker.</li>\r\n              <li>Press <strong>Space</strong> again to pause your song. If you press <strong>Ctrl+Space</strong>, it will stop the marker where it was.</li>\r\n              <li>Check the <strong>Loop</strong> checkbox to loop your song.</li>\r\n              <li>Click and drag on the timeline to move the marker.</li>\r\n              <li>If you hold <strong>ALT</strong> while dragging, the marker will move freely.</li>\r\n              <li>You can change instruments using the spinner at the top left of the page.</li>\r\n      \r\n              <h3>Planned Features</h3>\r\n              <li>MML import</li>\r\n              <li>MIDI import/export support</li>\r\n              <li>Support for saving/loading \"projects\"</li>\r\n              <li>Undo/Redo functionality</li>\r\n\r\n              <p class=\"credits\">Credits: Made by Daderic</p>\r\n\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        hoverHelp: false,\r\n        isHelpVisible: true, // Initially visible when the page loads\r\n      };\r\n    },\r\n    methods: {\r\n      showHelp() {\r\n        this.isHelpVisible = true;\r\n      },\r\n      closeHelp() {\r\n        this.isHelpVisible = false;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .help-button {\r\n    position: fixed;\r\n    top: 14px;\r\n    right: 280px;\r\n    width: 34px;\r\n    height: 34px;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    font-size: 24px;\r\n    border-color: black;\r\n    font-weight: lighter;\r\n    color: black;\r\n    z-index: 1000;\r\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  .help-button span {\r\n    display: block;\r\n  }\r\n  \r\n  .modal-background {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .help-modal {\r\n    background-color: white;\r\n    padding: 20px;\r\n    width: 500px;\r\n    max-height: 80%;\r\n    overflow-y: auto;\r\n    border-radius: 8px;\r\n    position: relative;\r\n    justify-items: left;\r\n    justify-content: left;\r\n  }\r\n  \r\n  .close-button {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: none;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .fade-enter-active, .fade-leave-active {\r\n    transition: opacity 0.5s;\r\n  }\r\n  .fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {\r\n    opacity: 0;\r\n  }\r\n  \r\n  .help-content {\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n    text-align: left;\r\n  }\r\n\r\n  .help-content h1 {\r\n    text-align: center;\r\n  }\r\n  \r\n  .credits {\r\n    margin-top: 20px;\r\n    font-style: italic;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./HelpMenu.vue?vue&type=template&id=4ca1ce45&scoped=true\"\nimport script from \"./HelpMenu.vue?vue&type=script&lang=js\"\nexport * from \"./HelpMenu.vue?vue&type=script&lang=js\"\n\nimport \"./HelpMenu.vue?vue&type=style&index=0&id=4ca1ce45&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4ca1ce45\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <div class=\"track-tab-container\" ref=\"tabContainerRef\">\r\n        <div\r\n          v-for=\"(track, index) in tracks\"\r\n          :key=\"track.id\"\r\n          :class=\"['track-tab', { selected: selectedTrackIndex === index }]\"\r\n          @click=\"selectTrack(index)\"\r\n          :style=\"{ backgroundColor: track.color }\"\r\n          :title=\"track.name\"\r\n        >\r\n          <div class=\"tab-header\">\r\n            <input\r\n              v-if=\"track.isEditingName\"\r\n              v-model=\"track.name\"\r\n              @blur=\"track.isEditingName = false\"\r\n              @keyup.enter=\"track.isEditingName = false\"\r\n              class=\"track-name-input\"\r\n            />\r\n            <span\r\n              v-else\r\n              @dblclick=\"track.isEditingName = true\"\r\n              class=\"track-name\"\r\n            >\r\n              {{ track.name }}\r\n            </span>\r\n            <span class=\"mute-icon\" @click.stop=\"toggleMute(index)\">\r\n              {{ track.isMuted ? '🔇' : '🔊' }}\r\n            </span>\r\n            <button @click.stop=\"removeTrack(index)\" class=\"delete-btn\">✖</button>\r\n          </div>\r\n          <div v-if=\"selectedTrackIndex === index\" class=\"color-picker-container\">\r\n            <input\r\n              type=\"color\"\r\n              v-model=\"trackHexColor\"\r\n              class=\"color-picker\"\r\n              @input=\"updateTrackColor\"\r\n            />\r\n          </div>\r\n        </div>\r\n  \r\n        <button\r\n          @click=\"addTrack\"\r\n          class=\"add-track-btn\"\r\n          :disabled=\"!canAddTrack\"\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed, onMounted, onBeforeUnmount, nextTick, reactive } from 'vue';\r\n\r\n  export const EventBus = reactive({});\r\n\r\n  export const tracks = ref([]);\r\n  export const selectedTrackIndex = ref(null);\r\n  export const selectedTrack = computed(() => tracks.value[selectedTrackIndex.value] || null);\r\n  export const trackHexColor = ref('#ffffff');\r\n  export default {\r\n    created() {\r\n      EventBus.addTrack = this.addTrack;\r\n    },\r\n    setup(props, { emit }) {\r\n      const containerWidth = ref(0);\r\n      const tabContainerRef = ref(null);\r\n  \r\n  \r\n      const canAddTrack = computed(() => {\r\n        if (tracks.value.length > 15)\r\n          return false;\r\n        const minWidth = 75;\r\n        const totalWidth = tracks.value.length * minWidth;\r\n        return containerWidth.value - totalWidth - 50 > minWidth; // Limit to 16 tracks\r\n      });\r\n  \r\n      const updateContainerWidth = () => {\r\n        if (tabContainerRef.value) {\r\n          containerWidth.value = tabContainerRef.value.clientWidth; // Get container width\r\n        }\r\n      };\r\n  \r\n      const getRandomColor = () => {\r\n        const hue = Math.floor(Math.random() * 360);\r\n        const saturation = 75 + Math.random() * 25;\r\n        const lightness = 50 + Math.random() * 10;\r\n        \r\n        const chroma = (1 - Math.abs(2 * lightness / 100 - 1)) * (saturation / 100);\r\n        const x = chroma * (1 - Math.abs(((hue / 60) % 2) - 1));\r\n        const m = lightness / 100 - chroma / 2;\r\n  \r\n        let [r, g, b] =\r\n          hue < 60 ? [chroma, x, 0]\r\n          : hue < 120 ? [x, chroma, 0]\r\n          : hue < 180 ? [0, chroma, x]\r\n          : hue < 240 ? [0, x, chroma]\r\n          : hue < 300 ? [x, 0, chroma]\r\n          : [chroma, 0, x];\r\n  \r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n  \r\n        // Return the color in hex format\r\n        return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n      };\r\n  \r\n      const root = process.env.NODE_ENV === 'production' ? '../MabiMML/' : '../';\r\n\r\n      const addTrack = (pointerEvent=null, instr=null, color=null, name=null) => {\r\n        const newTrack = {\r\n          id: Date.now(),\r\n          name: name || `Track ${tracks.value.length + 1}`,\r\n          isMuted: false,\r\n          color: color || getRandomColor(),\r\n          isEditingName: false,\r\n          notes: [],\r\n          instrument: instr || { name: 'Lute', program: 0, min: 16, max: 88 },\r\n        };\r\n        tracks.value.push(newTrack);\r\n        selectTrack(tracks.value.length - 1);\r\n        emit('add-track', newTrack, tracks.value.length - 1);\r\n        return newTrack;\r\n      };\r\n  \r\n      const removeTrack = (index) => {\r\n        if (tracks.value.length === 1) return;\r\n\r\n        let confirmation = true;\r\n        if (tracks.value[index].notes.length !== 0)\r\n          confirmation = confirm(`Are you sure you want to delete the track \"${tracks.value[index].name}\"? All notes belonging to this track will also be deleted.`);\r\n        if (!confirmation) return;\r\n\r\n        let trackClone = tracks.value[index];\r\n        tracks.value.splice(index, 1);\r\n  \r\n        if (tracks.value.length === 0) {\r\n          selectedTrackIndex.value = null;\r\n          trackHexColor.value = '#ffffff'; // Reset color picker when no tracks are left\r\n        } else {\r\n          if (index === selectedTrackIndex.value) {\r\n            // If the removed track was selected, select the next available track\r\n            const newIndex = index < tracks.value.length ? index : index - 1;\r\n            selectedTrackIndex.value = newIndex;\r\n            trackHexColor.value = tracks.value[newIndex].color; // Update the color picker to the new selected track's color\r\n          } else if (selectedTrackIndex.value > index) {\r\n            selectedTrackIndex.value--;\r\n          }\r\n  \r\n          // Update color picker for the currently selected track\r\n          if (selectedTrack.value) {\r\n            trackHexColor.value = selectedTrack.value.color;\r\n          }\r\n        }\r\n\r\n        emit('remove-track', trackClone, selectedTrack.value);\r\n      };\r\n  \r\n  \r\n      const selectTrack = (index) => {\r\n        selectedTrackIndex.value = index;\r\n        trackHexColor.value = tracks.value[index].color; // Update color picker when track is selected\r\n        emit('track-selected', tracks.value[index]);\r\n      };\r\n  \r\n      const toggleMute = (index) => {\r\n        tracks.value[index].isMuted = !tracks.value[index].isMuted;\r\n        if (tracks.value[index].isMuted)\r\n          for (const note of tracks.value[index].notes) {\r\n            note.muted = true;\r\n          }\r\n        else {\r\n          for (const note of tracks.value[index].notes) {\r\n            note.muted = false;\r\n          }\r\n        }\r\n        emit('mute-track');\r\n      };\r\n  \r\n      const updateTrackColor = (event) => {\r\n        const newColor = event.target.value;\r\n        if (selectedTrack.value) {\r\n          selectedTrack.value.color = newColor;\r\n          trackHexColor.value = newColor; // Update hex color for the picker\r\n          for (const note of selectedTrack.value.notes) {\r\n            note.color = newColor;\r\n          }\r\n        }\r\n        emit('color-change', selectedTrack.value, newColor);\r\n      };\r\n  \r\n      onMounted(() => {\r\n        addTrack(); // Always start with one track\r\n        nextTick(() => {\r\n          updateContainerWidth(); // Get initial container width\r\n        });\r\n        window.addEventListener('resize', updateContainerWidth);\r\n      });\r\n  \r\n      onBeforeUnmount(() => {\r\n        window.removeEventListener('resize', updateContainerWidth);\r\n      });\r\n  \r\n      return {\r\n        tracks,\r\n        selectedTrackIndex,\r\n        trackHexColor,\r\n        containerWidth,\r\n        addTrack,\r\n        removeTrack,\r\n        selectTrack,\r\n        toggleMute,\r\n        updateTrackColor,\r\n        selectedTrack,\r\n        canAddTrack,\r\n        tabContainerRef,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .track-tab-container {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    max-width: 83%;\r\n    background-color: #f1f1f1;\r\n    flex-wrap: nowrap;\r\n    height: 50px;\r\n  }\r\n  \r\n  .track-tab {\r\n    user-select: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: -10px;\r\n    flex-grow: 1;\r\n    min-width: 75px;\r\n    max-width: 200px;\r\n    height: 40px;\r\n    border: 2px solid #ccc;\r\n    border-radius: 8px 8px 0 0;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n    position: relative;\r\n    z-index: 1;\r\n    align-self: flex-end;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .track-tab.selected {\r\n    padding-bottom: 10px;\r\n    z-index: 10;\r\n    border-bottom: none;\r\n  }\r\n  \r\n  .tab-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px 10px;\r\n    border-radius: 8px 8px 0 0;\r\n    font-weight: bold;\r\n    font-size: 1em;\r\n    color: white;\r\n  }\r\n  \r\n  .track-name-input {\r\n    width: 100%;\r\n    font-size: 1em;\r\n    background-color: transparent;\r\n    border: none;\r\n    color: white;\r\n    outline: none;\r\n  }\r\n  \r\n  .track-name {\r\n    color: white;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  \r\n  .mute-icon {\r\n    font-size: 1.2em;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n    color: white;\r\n  }\r\n  \r\n  .delete-btn {\r\n    background: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: white;\r\n    font-size: 1.1em;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .add-track-btn {\r\n    user-select: none;\r\n    width: 50px;\r\n    height: 50px;\r\n    font-size: 2em;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 8px;\r\n    margin-left: 12px;\r\n    flex-shrink: 0;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 5;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .add-track-btn:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .color-picker-container {\r\n  }\r\n  \r\n  .color-picker {\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  .track-tab:hover::after {\r\n    content: attr(title);\r\n    position: absolute;\r\n    bottom: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    color: white;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    white-space: nowrap;\r\n    z-index: 10;\r\n    margin-bottom: 5px;\r\n    opacity: 0;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n  \r\n  .track-tab:hover::after {\r\n    opacity: 1;\r\n  }\r\n  </style>","import { render } from \"./Tracks.vue?vue&type=template&id=46fc1212&scoped=true\"\nimport script from \"./Tracks.vue?vue&type=script&lang=js\"\nexport * from \"./Tracks.vue?vue&type=script&lang=js\"\n\nimport \"./Tracks.vue?vue&type=style&index=0&id=46fc1212&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46fc1212\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"tempo-marker\" :style=\"{ left: left + 'px' }\" @click=\"clickMarker\">\r\n      <div class=\"tempo-triangle\" :style=\"{ borderTop: '10px solid ' + color }\"></div>\r\n      <div class=\"tempo-label\">T{{ tempo }}</div>\r\n    </div>\r\n</template>\r\n  \r\n  \r\n<script>\r\nexport default {\r\n    props: {\r\n        left: Number,\r\n        tempo: Number,\r\n        index: Number, // For identifying which marker to remove\r\n        color: String,\r\n    },\r\n    emits: ['click'],\r\n    setup(props, { emit }) {\r\n        const clickMarker = (event) => {\r\n            emit('click', event, props.index);\r\n        };\r\n\r\n        return {\r\n        clickMarker,\r\n        };\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n    .tempo-marker {\r\n        z-index: 1;\r\n        position: absolute;\r\n        bottom: 0;\r\n        transform: translateX(-50%);\r\n        cursor: pointer;\r\n        pointer-events: auto; /* Allows clicking */\r\n    }\r\n\r\n    .tempo-triangle {\r\n        z-index: 1;\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 10px solid transparent;\r\n        border-right: 10px solid transparent;\r\n        border-top: 10px solid #333; /* Dark grey color */\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n    }\r\n\r\n    .tempo-label {\r\n        z-index: 1;\r\n        position: absolute;\r\n        top: -20px; /* Adjusts the label position above the triangle */\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        font-size: 12px;\r\n        background-color: #fff;\r\n        color: #333; /* Dark grey text */\r\n        padding: 2px 4px;\r\n        border-radius: 3px;\r\n        white-space: nowrap;\r\n        border: 1px solid #ccc; /* Optional border to highlight the label */\r\n    }\r\n</style>\r\n  \r\n  ","import { render } from \"./TempoMarker.vue?vue&type=template&id=2e23dd07&scoped=true\"\nimport script from \"./TempoMarker.vue?vue&type=script&lang=js\"\nexport * from \"./TempoMarker.vue?vue&type=script&lang=js\"\n\nimport \"./TempoMarker.vue?vue&type=style&index=0&id=2e23dd07&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e23dd07\"]])\n\nexport default __exports__","import { render } from \"./PianoRoll.vue?vue&type=template&id=699611de&scoped=true\"\nimport script from \"./PianoRoll.vue?vue&type=script&lang=js\"\nexport * from \"./PianoRoll.vue?vue&type=script&lang=js\"\n\nimport \"./PianoRoll.vue?vue&type=style&index=0&id=699611de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-699611de\"]])\n\nexport default __exports__","import { render } from \"./Sequencer.vue?vue&type=template&id=2e49d91b&scoped=true\"\nimport script from \"./Sequencer.vue?vue&type=script&lang=js\"\nexport * from \"./Sequencer.vue?vue&type=script&lang=js\"\n\nimport \"./Sequencer.vue?vue&type=style&index=0&id=2e49d91b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e49d91b\"]])\n\nexport default __exports__","import { render } from \"./PatternEditor.vue?vue&type=template&id=233a7f0a&scoped=true\"\nimport script from \"./PatternEditor.vue?vue&type=script&lang=js\"\nexport * from \"./PatternEditor.vue?vue&type=script&lang=js\"\n\nimport \"./PatternEditor.vue?vue&type=style&index=0&id=233a7f0a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-233a7f0a\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=45718dbe\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=45718dbe&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport HelpMenu from './components/HelpMenu.vue'\n\ncreateApp(App).mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/MabiMML/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmusic_sequencer\"] = self[\"webpackChunkmusic_sequencer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(21243); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","alt","src","_imports_0","id","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_createVNode","_component_PatternEditor","class","ref","_component_PianoRoll","key","style","for","_hoisted_19","_hoisted_20","onClick","_cache","args","$setup","playSequence","_createTextVNode","type","$event","loopSong","_component_HelpMenu","showSuccessNotification","_hoisted_3","_toDisplayString","successNotificationText","_createCommentVNode","showFailedNotification","_hoisted_4","failedNotificationText","_component_Tracks","onTrackSelected","handleTrackSelected","onAddTrack","handleAddTrack","onRemoveTrack","handleRemoveTrack","onMuteTrack","handleMuteTrack","onColorChange","updateColor","_hoisted_5","_hoisted_6","_hoisted_7","selectedInstrument","onChange","changeInstrument","_renderList","instruments","instrument","index","value","name","_hoisted_8","_hoisted_9","_hoisted_10","tempo","min","max","number","trackify","genMML","_hoisted_11","_hoisted_12","gridWidth","displayName","width","_hoisted_13","_hoisted_14","currentNoteVolume","_hoisted_15","_hoisted_16","octaves","octave","_hoisted_17","notes","slice","reverse","note","_normalizeClass","isBlack","onMousedown","startNote","onMouseover","mouseOverNote","onMouseup","endNote","onMouseleave","mouseLeaveNote","_normalizeStyle","instrKeyMin","instrKeyMax","_hoisted_18","handleRulerClick","gridSpan","Math","ceil","left","markerReplayPosition","markerPosition","_hoisted_21","tempoMarkers","tempoMarker","_createBlock","_component_TempoMarker","color","clickTempoMarker","_hoisted_22","background","backgroundStyle","_withModifiers","handleGridClick","onContextmenu","_ctx","startNoteRemove","notesInGrid","top","gridHeight","muted","hexToRgba","volume","highlighted","startDrag","removeNote","endDrag","startResize","_hoisted_24","startVolumeChange","_hoisted_25","_hoisted_23","isSelecting","rectangleStyle","$options","showHelp","$data","hoverHelp","isHelpVisible","_Transition","default","_withCtx","closeHelp","_","data","methods","this","__exports__","tracks","track","selected","selectedTrackIndex","selectTrack","backgroundColor","title","isEditingName","onBlur","onKeyup","_withKeys","onDblclick","toggleMute","isMuted","removeTrack","trackHexColor","onInput","updateTrackColor","addTrack","disabled","canAddTrack","EventBus","reactive","selectedTrack","computed","created","setup","props","emit","containerWidth","tabContainerRef","length","minWidth","totalWidth","updateContainerWidth","clientWidth","getRandomColor","hue","floor","random","saturation","lightness","chroma","abs","x","m","r","g","b","round","toString","pointerEvent","instr","newTrack","Date","now","program","push","confirmation","confirm","trackClone","splice","newIndex","event","newColor","target","onMounted","nextTick","window","addEventListener","onBeforeUnmount","removeEventListener","$props","clickMarker","borderTop","Number","String","emits","components","HelpMenu","Tracks","TempoMarker","root","pianoRoll","grid","synth","context","isMouseDown","midiBuilder","currentNoteLength","draggingNotes","resizingNotes","volumeChangingNotes","startX","startY","innerWidth","scrollX","selectedNotes","currentX","currentY","ruler","seq","isPlaying","height","border","noteNames","blackNotes","map","includes","noteClipboard","watchEffect","maxRightPosition","indexOf","async","oldTrack","filter","marker","parentTrack","loadSoundFont","response","fetch","soundFontArrayBuffer","arrayBuffer","error","console","handleBeforeUnload","message","preventDefault","returnValue","gridWrapper","document","querySelector","updateRuler","handleKeyPress","AudioContext","audioWorklet","addModule","Synthetizer","destination","undefined","chorusEnabled","reverbEnabled","setMainVolume","isReady","button","shiftKey","placeTempoMarker","startMarkerDrag","granularity","altKey","clientX","getBoundingClientRect","enteredTempo","prompt","isNaN","stopPlaying","updateMarkerPos","onMarkerDrag","onMarkerDragEnd","markerInterval","markerStartPos","startTempo","tempoIdx","startMarkerAnim","sort","a","doMarkerAnim","timeChange","tick","currentTime","loop","clearInterval","setInterval","noteWidthToMML","outString","mmlWidth","noteLengths","i","val1","val2","result","getClosestWidth","noteCombination","join","targetWidth","amount","dp","Array","fill","Infinity","usedNotes","noteValue","minNotes","currentAmount","stopMarkerAnim","fromClick","rulerRect","newPos","code","ctrlKey","selectNote","showSuccessMessage","movementValue","noteName","pitch","clearSelection","newNote","start","end","unshift","scrollLeft","stop","programChange","MIDIBuilder","resume","notesAdded","audibleTracks","addNewTrack","forEach","containingTrack","some","n","trackIndex","channel","noteStartTime","noteDuration","markerTime","startTime","duration","addEvent","addNoteOn","addNoteOff","tempoStartTime","tempoChangeTime","addSetTempo","flush","writeMIDIFile","Sequencer","binary","skipToFirstNoteOn","addOnSongEndedEvent","play","noteOn","noteOff","text","timeout","setTimeout","showFailureMessage","startPositions","Map","placeNote","draggingNote","set","y","clientY","onDrag","outOfBounds","newPositions","startPos","get","dx","dy","newLeft","newTop","clear","startResizeData","onResize","endResize","allInBounds","newWidths","startData","newWidth","startingNoteVolume","onVolumeChange","endVolumeChange","newVolume","startSelection","startPlacingNote","rect","onSelectionMove","onSelectionEnd","checkIntersections","selectionRect","right","bottom","itemRect","intersects","rect1","rect2","gridElement","scrollTop","existingNote","find","notesList","trackWrappers","trackWrapper","originalColor","alpha","hex","replace","split","char","parseInt","substring","copyToClipboard","navigator","clipboard","writeText","then","catch","err","log","prevNoteEnd","trackTempoMarkers","notables","gap","restStr","replaceAll","noteStr","k","outTracks","newTracks","tokens","tokenizeMML","simplifiedTokens","simplifyMML","simplifiedMML","stringifyMML","patterns","LENGTH","NOTE","REST","TIE","VOLUME","TEMPO","OCTAVE","mmlString","regex","Object","entries","match","exec","tokenList","newTokenList","JSON","parse","stringify","totalPasses","pass","token","tokenLength","tokenVolume","tokenTempo","restLength","notePitch","noteOctave","keys","noteKey","diff","octaveChanges","symbol","j","prevToken","noteCount","noteIndexes","token2","noteIndex","outStr","fromList","oldSize","PianoRoll","scrollContainer","PatternEditor","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","getter","__esModule","d","definition","o","defineProperty","enumerable","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","p","baseURI","self","location","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}